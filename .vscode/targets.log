make all --print-data-base --no-builtin-variables --no-builtin-rules --question
==> core
 
# make[1]: Entering directory '/home/yyf/Documents/agar-1.6.0/core'
 
make  byteswap.o class.o config.o core.o cpuinfo.o data_source.o db.o dir.o dso.o error.o event.o exec.o file.o getopt.o load_integral.o load_real.o load_string.o load_version.o object.o string.o tbl.o text.o time.o time_dummy.o timeout.o threads.o vasprintf.o vsnprintf.o user.o user_dummy.o user_getenv.o variable.o vec.o time_posix.o time_renderer.o time_gettimeofday.o user_posix.o
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Tue May 10 13:43:27 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 9)
LIB_AGE = 0
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from '../Makefile.config', line 14)
PREFIX = /usr/local
# automatic
?F = $(notdir $?)
# makefile (from '../Makefile.config', line 92)
HAVE_NORETURN_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 204)
_MK_HAVE_SYS_TYPES_H = yes
# environment
DESKTOP_SESSION = ubuntu
# automatic
-*-command-variables-*- := REL=core/
# makefile (from '../mk/build.lib.mk', line 95)
DATAFILES = 
# default
.SHELLFLAGS := -c
# makefile (from '../mk/build.lib.mk', line 84)
LIBTOOLOPTS = --quiet
# makefile (from '../Makefile.config', line 190)
TTFDIR = /usr/local/share/agar/fonts
# environment
XDG_SESSION_CLASS = user
# makefile (from '../Makefile.config', line 70)
HAVE_DLOPEN = yes
# makefile (from '../mk/build.common.mk', line 59)
INSTALL_INCL_DIR = mkdir -p
# makefile (from '../Makefile.config', line 188)
SUBDIR_vg = vg
# makefile (from '../Makefile.config', line 201)
_MK_HAVE_STDINT_H = yes
# makefile (from '../Makefile.config', line 124)
HAVE_ZLIB = no
# environment
SNAP_COMMON = /var/snap/code/common
# makefile (from '../Makefile.config', line 129)
JPEG_CFLAGS = -I/usr/include
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# makefile (from '../Makefile.config', line 69)
HAVE_DEPRECATED_ATTRIBUTE = yes
# makefile (from '../mk/build.common.mk', line 62)
DEINSTALL_PROG = rm -f
# makefile (from '../Makefile.config', line 140)
MATH_LIBS = -lm
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '../Makefile.config', line 10)
MANDOC = /usr/bin/nroff -Tmandoc
# environment
IM_CONFIG_PHASE = 1
# makefile (from '../Makefile.config', line 184)
SUBDIR_micro = 
# makefile (from '../mk/build.lib.mk', line 100)
PCMODULES = 
# makefile (from '../mk/build.lib.mk', line 96)
DATAFILES_SRC = 
# makefile (from '../mk/build.lib.mk', line 43)
ADAPREPFLAGS = 
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile (from '../mk/build.lib.mk', line 32)
LIB_PROFILE = No
# makefile (from '../Makefile.config', line 67)
HAVE_DB4 = no
# makefile
CURDIR := /home/yyf/Documents/agar-1.6.0/core
# makefile (from '../Makefile.config', line 191)
VERSION = 1.6.0
# makefile
SHELL = /bin/sh
# environment
SNAP_DATA = /var/snap/code/95
# makefile (from '../Makefile.config', line 110)
HAVE_SSE = yes
# makefile (from '../mk/build.man.mk', line 36)
MAN6 = 
# makefile (from '../Makefile.config', line 130)
JPEG_LIBS = -L/usr/lib -ljpeg
# makefile (from '../Makefile.config', line 71)
HAVE_FLOAT = yes
# makefile (from '../Makefile.config', line 178)
SSE_CFLAGS = -msse
# makefile (from '../Makefile.config', line 55)
HAVE_CC65 = no
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from '../Makefile.config', line 175)
SRCS_NET = net_bsd.c
# makefile (from '../mk/build.lib.mk', line 33)
LIB_MODULE = No
# makefile (from '../Makefile.config', line 187)
SUBDIR_sk = sk
# makefile (from '../Makefile.config', line 117)
HAVE_WARN_UNUSED_RESULT_ATTRIBUTE = yes
# environment
JOURNAL_STREAM = 8:387942
# makefile (from '../Makefile.config', line 16)
ALTIVEC_CHECK_CFLAGS = 
# makefile (from '../Makefile.config', line 202)
_MK_HAVE_STDLIB_H = yes
# makefile (from '../mk/build.common.mk', line 65)
DEINSTALL_INCL = rm -f
# makefile (from '../Makefile.config', line 192)
X11_CFLAGS = 
# makefile (from '../Makefile.config', line 104)
HAVE_PTHREAD_MUTEX_T_POINTER = no
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from '../Makefile.config', line 114)
HAVE_SYS_UIO_H = 
# makefile (from '../Makefile.config', line 51)
HAVE_ALTIVEC = no
# makefile (from '../mk/build.lib.mk', line 58)
ADAFLAGS = 
# makefile (from '../Makefile.config', line 196)
ZLIB_CFLAGS = 
# makefile (from '../Makefile.config', line 88)
HAVE_MATH = yes
# makefile (from '../Makefile.config', line 47)
GLU_LIBS = -L/usr/lib -lGLU
 
# makefile (from '../mk/build.common.mk', line 1)
MAKEFILE_LIST :=  Makefile ../Makefile.config ../core/Makefile.inc .manlinks.mk ../mk/build.lib.mk ../mk/build.common.mk ../mk/build.proj.mk ../mk/build.subdir.mk .depend ../mk/build.man.mk ../mk/build.common.mk
# makefile (from '../mk/build.lib.mk', line 94)
CLEANDIRFILES = 
# makefile (from '../Makefile.config', line 30)
DB4_CFLAGS = 
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from '../Makefile.config', line 151)
PNG_CFLAGS = -I/home/yyf/anaconda3/include/libpng16
# makefile (from '../Makefile.config', line 141)
MEMORY_MODEL = LARGE
# makefile (from '../Makefile.config', line 193)
X11_LIBS = -lX11
# environment
USERNAME = yyf
# makefile (from '../mk/build.lib.mk', line 86)
LIBTOOLOPTS_STATIC = 
# makefile (from 'Makefile', line 1)
TOP = ..
# makefile (from '../Makefile.config', line 81)
HAVE_JPEG = yes
# makefile (from '../Makefile.config', line 28)
CXXFLAGS = -D_AGAR_INTERNAL -D_DEFAULT_SOURCE -D_BSD_SOURCE -I/home/yyf/Documents/agar-1.6.0/include
# environment
MAKELEVEL := 2
# makefile (from '../Makefile.config', line 100)
HAVE_PTHREADS_XOPEN = yes
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# makefile (from '../Makefile.config', line 5)
CROSS_COMPILING = no
# makefile (from '../Makefile.config', line 145)
OPENGL_CFLAGS = 
# makefile (from '../Makefile.config', line 32)
DB5_CFLAGS = 
# makefile (from '../Makefile.config', line 173)
SRCS_CORE = time_posix.c time_renderer.c time_gettimeofday.c user_posix.c
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from '../Makefile.config', line 98)
HAVE_PORTAUDIO = no
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from '../Makefile.config', line 161)
PROG_SUFFIX = 
# makefile (from '../Makefile.config', line 122)
HAVE_XINERAMA = yes
# makefile (from '../Makefile.config', line 31)
DB4_LIBS = 
# environment
_ = /snap/code/95/usr/share/code/code
# makefile (from '../mk/build.lib.mk', line 89)
CONF_OVERWRITE = No
# makefile (from '../Makefile.config', line 102)
HAVE_PTHREAD_MUTEX_RECURSIVE = yes
# makefile (from '../Makefile.config', line 143)
MYSQL_CFLAGS = 
# makefile (from '../mk/build.common.mk', line 45)
AWK = awk
# makefile (from '../Makefile.config', line 80)
HAVE_INT64_T = yes
# environment
MANAGERPID = 22346
# makefile (from '../mk/build.common.mk', line 57)
INSTALL_LIB_DIR = mkdir -p
# makefile (from '../mk/build.man.mk', line 39)
MAN9 = 
# makefile (from '../mk/build.lib.mk', line 104)
WINRES = 
# makefile (from '../Makefile.config', line 61)
HAVE_CLOCK_GETTIME = yes
# makefile (from '../Makefile.config', line 146)
OPENGL_LIBS = -L/usr/local/lib -lGL
# makefile (from '../Makefile.config', line 33)
DB5_LIBS = 
# makefile (from '../mk/build.lib.mk', line 40)
ADA = ada
# makefile (from '../mk/build.proj.mk', line 42)
CLEANFILES =  ${PREMAKEOUT}
# makefile (from '../Makefile.config', line 46)
GLU_CFLAGS = -I/usr/include
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
LC_NAME = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 54)
HAVE_CC = yes
# environment
VSCODE_CWD = /home/yyf
# makefile (from '../Makefile.config', line 77)
HAVE_GLU = yes
# makefile (from '../Makefile.config', line 82)
HAVE_LD_NO_UNDEFINED = 
# makefile (from '../mk/build.lib.mk', line 78)
LTCONFIG_DEPS = ${LTBASE}/config.guess ${LTBASE}/config.sub ${LTBASE}/aclocal.m4 ${LTBASE}/ltmain.sh
# makefile (from '../mk/build.lib.mk', line 60)
ASMFLAGS = -g -w-orphan-labels
# makefile (from '../Makefile.config', line 97)
HAVE_PNG = yes
# makefile (from '../mk/build.lib.mk', line 42)
ADAPREP = gnatprep
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/95/usr/share/glib-2.0/schemas
# makefile (from '.manlinks.mk', line 570)
MANLINKS = AG_ByteSwap.3:AG_Swap16.3 AG_ByteSwap.3:AG_Swap32.3 AG_ByteSwap.3:AG_Swap64.3 AG_ByteSwap.3:AG_SwapLE16.3 AG_ByteSwap.3:AG_SwapLE32.3 AG_ByteSwap.3:AG_SwapLE64.3 AG_ByteSwap.3:AG_SwapBE16.3 AG_ByteSwap.3:AG_SwapBE32.3 AG_ByteSwap.3:AG_SwapBE64.3 AG_CPUInfo.3:AG_GetCPUInfo.3 AG_Config.3:AG_ConfigObject.3 AG_Config.3:AG_ConfigLoad.3 AG_Config.3:AG_ConfigSave.3 AG_Config.3:AG_ConfigFind.3 AG_Config.3:AG_ConfigAddPath.3 AG_Config.3:AG_ConfigAddPathS.3 AG_Config.3:AG_ConfigSetPath.3 AG_Config.3:AG_ConfigSetPathS.3 AG_Config.3:AG_ConfigDelPath.3 AG_Config.3:AG_ConfigDelPathS.3 AG_Core.3:AG_InitCore.3 AG_Core.3:AG_AtExitFunc.3 AG_Core.3:AG_Quit.3 AG_Core.3:AG_Destroy.3 AG_Core.3:AG_AgarVersion.3 AG_Core.3:AG_GetVersion.3 AG_Core.3:AG_VERSION_ATLEAST.3 AG_DSO.3:AG_LoadDSO.3 AG_DSO.3:AG_SymDSO.3 AG_DSO.3:AG_LockDSO.3 AG_DSO.3:AG_UnlockDSO.3 AG_DSO.3:AG_UnloadDSO.3 AG_DSO.3:AG_LookupDSO.3 AG_DataSource.3:AG_OpenFile.3 AG_DataSource.3:AG_OpenFileHandle.3 AG_DataSource.3:AG_OpenCore.3 AG_DataSource.3:AG_OpenConstCore.3 AG_DataSource.3:AG_OpenAutoCore.3 AG_DataSource.3:AG_OpenNetSocket.3 AG_DataSource.3:AG_CloseDataSource.3 AG_DataSource.3:AG_Read.3 AG_DataSource.3:AG_ReadAt.3 AG_DataSource.3:AG_Write.3 AG_DataSource.3:AG_WriteAt.3 AG_DataSource.3:AG_ReadP.3 AG_DataSource.3:AG_ReadAtP.3 AG_DataSource.3:AG_WriteP.3 AG_DataSource.3:AG_WriteAtP.3 AG_DataSource.3:AG_Tell.3 AG_DataSource.3:AG_Seek.3 AG_DataSource.3:AG_LockDataSource.3 AG_DataSource.3:AG_UnlockDataSource.3 AG_DataSource.3:AG_SetByteOrder.3 AG_DataSource.3:AG_SetSourceDebug.3 AG_DataSource.3:AG_DataSourceInit.3 AG_DataSource.3:AG_DataSourceDestroy.3 AG_DataSource.3:AG_DataSourceSetErrorFn.3 AG_DataSource.3:AG_DataSourceError.3 AG_DataSource.3:AG_DataSourceRealloc.3 AG_DataSource.3:AG_ReadUint8.3 AG_DataSource.3:AG_ReadSint8.3 AG_DataSource.3:AG_ReadUint16.3 AG_DataSource.3:AG_ReadSint16.3 AG_DataSource.3:AG_ReadUint32.3 AG_DataSource.3:AG_ReadSint32.3 AG_DataSource.3:AG_ReadSint32.3 AG_DataSource.3:AG_ReadUint64.3 AG_DataSource.3:AG_ReadSint64.3 AG_DataSource.3:AG_WriteUint8.3 AG_DataSource.3:AG_WriteSint8.3 AG_DataSource.3:AG_WriteUint16.3 AG_DataSource.3:AG_WriteSint16.3 AG_DataSource.3:AG_WriteUint32.3 AG_DataSource.3:AG_WriteSint32.3 AG_DataSource.3:AG_WriteUint64.3 AG_DataSource.3:AG_WriteSint64.3 AG_DataSource.3:AG_WriteUint8At.3 AG_DataSource.3:AG_WriteSint8At.3 AG_DataSource.3:AG_WriteUint16At.3 AG_DataSource.3:AG_WriteSint16At.3 AG_DataSource.3:AG_WriteUint32At.3 AG_DataSource.3:AG_WriteSint32At.3 AG_DataSource.3:AG_WriteUint64At.3 AG_DataSource.3:AG_WriteSint64At.3 AG_DataSource.3:AG_ReadFloat.3 AG_DataSource.3:AG_ReadDouble.3 AG_DataSource.3:AG_WriteFloat.3 AG_DataSource.3:AG_WriteFloatAt.3 AG_DataSource.3:AG_WriteDouble.3 AG_DataSource.3:AG_WriteDoubleAt.3 AG_DataSource.3:AG_ReadString.3 AG_DataSource.3:AG_ReadStringLen.3 AG_DataSource.3:AG_CopyString.3 AG_DataSource.3:AG_ReadStringPadded.3 AG_DataSource.3:AG_CopyStringPadded.3 AG_DataSource.3:AG_ReadNulString.3 AG_DataSource.3:AG_ReadNulStringLen.3 AG_DataSource.3:AG_CopyNulString.3 AG_DataSource.3:AG_SkipString.3 AG_DataSource.3:AG_SkipStringPadded.3 AG_DataSource.3:AG_WriteString.3 AG_DataSource.3:AG_WriteStringPadded.3 AG_Db.3:AG_Dbt.3 AG_Db.3:AG_DbNew.3 AG_Db.3:AG_DbOpen.3 AG_Db.3:AG_DbClose.3 AG_Db.3:AG_DbExists.3 AG_Db.3:AG_DbDel.3 AG_Db.3:AG_DbGet.3 AG_Db.3:AG_DbPut.3 AG_Db.3:AG_DbSync.3 AG_Error.3:AG_SetError.3 AG_Error.3:AG_SetErrorV.3 AG_Error.3:AG_GetError.3 AG_Error.3:AG_FatalError.3 AG_Error.3:AG_FatalErrorV.3 AG_Error.3:AG_SetFatalCallback.3 AG_Error.3:AG_Strerror.3 AG_Error.3:AG_Verbose.3 AG_Error.3:AG_Debug.3 AG_Error.3:AG_SetVerboseCallback.3 AG_Error.3:AG_SetDebugCallback.3 AG_Error.3:AG_Malloc.3 AG_Error.3:AG_TryMalloc.3 AG_Error.3:AG_Realloc.3 AG_Error.3:AG_TryRealloc.3 AG_Error.3:AG_Free.3 AG_Event.3:AG_SetEvent.3 AG_Event.3:AG_AddEvent.3 AG_Event.3:AG_FindEventHandler.3 AG_Event.3:AG_UnsetEvent.3 AG_Event.3:AG_UnsetEventByPtr.3 AG_Event.3:AG_PostEvent.3 AG_Event.3:AG_PostEventByPtr.3 AG_Event.3:AG_SchedEvent.3 AG_Event.3:AG_SELF.3 AG_Event.3:AG_CONST_SELF.3 AG_Event.3:AG_PTR.3 AG_Event.3:AG_CONST_PTR.3 AG_Event.3:AG_EventInit.3 AG_Event.3:AG_EventArgs.3 AG_Event.3:AG_EventCopy.3 AG_Event.3:AG_EventDup.3 AG_Event.3:AG_EventPushPointer.3 AG_Event.3:AG_EventPushConstPointer.3 AG_Event.3:AG_EventPushString.3 AG_Event.3:AG_EventPushInt.3 AG_Event.3:AG_EventPushUint.3 AG_Event.3:AG_EventPushLong.3 AG_Event.3:AG_EventPushUlong.3 AG_Event.3:AG_EventPushFloat.3 AG_Event.3:AG_EventPushDouble.3 AG_Event.3:AG_EVENT_PUSH_ARG.3 AG_Event.3:AG_EventPopPointer.3 AG_Event.3:AG_EventPopConstPointer.3 AG_Event.3:AG_EventPopString.3 AG_Event.3:AG_EventPopInt.3 AG_Event.3:AG_EventPopUint.3 AG_Event.3:AG_EventPopLong.3 AG_Event.3:AG_EventPopUlong.3 AG_Event.3:AG_EventPopFloat.3 AG_Event.3:AG_EventPopDouble.3 AG_EventLoop.3:AG_Terminate.3 AG_EventLoop.3:AG_TerminateEv.3 AG_EventLoop.3:AG_EventSink.3 AG_EventLoop.3:AG_AddEventSink.3 AG_EventLoop.3:AG_DelEventSink.3 AG_EventLoop.3:AG_DelEventsSinkByIdent.3 AG_EventLoop.3:AG_AddEventPrologue.3 AG_EventLoop.3:AG_AddEventEpilogue.3 AG_EventLoop.3:AG_AddEventSpinner.3 AG_EventLoop.3:AG_DelEventPrologue.3 AG_EventLoop.3:AG_DelEventEpilogue.3 AG_EventLoop.3:AG_DelEventSpinner.3 AG_Execute.3:AG_WaitOnProcess.3 AG_Execute.3:AG_Kill.3 AG_File.3:AG_FileInfo.3 AG_File.3:AG_GetFileInfo.3 AG_File.3:AG_GetSystemTempDir.3 AG_File.3:AG_FileExists.3 AG_File.3:AG_FileDelete.3 AG_File.3:AG_Dir.3 AG_File.3:AG_MkDir.3 AG_File.3:AG_MkPath.3 AG_File.3:AG_RmDir.3 AG_File.3:AG_ChDir.3 AG_File.3:AG_GetCWD.3 AG_File.3:AG_OpenDir.3 AG_File.3:AG_CloseDir.3 AG_File.3:AG_FileExtMapping.3 AG_File.3:AG_ShortFilename.3 AG_File.3:AG_RegisterFileExtMappings.3 AG_Object.3:AG_ObjectNew.3 AG_Object.3:AG_ObjectInit.3 AG_Object.3:AG_ObjectAttach.3 AG_Object.3:AG_ObjectDetach.3 AG_Object.3:AG_ObjectMoveToHead.3 AG_Object.3:AG_ObjectMoveToTail.3 AG_Object.3:AG_ObjectMoveUp.3 AG_Object.3:AG_ObjectMoveDown.3 AG_Object.3:AG_ObjectDelete.3 AG_Object.3:AG_ObjectRoot.3 AG_Object.3:AG_ObjectParent.3 AG_Object.3:AG_ObjectFind.3 AG_Object.3:AG_ObjectFindS.3 AG_Object.3:AG_ObjectFindParent.3 AG_Object.3:AG_ObjectFindChild.3 AG_Object.3:AG_ObjectGetName.3 AG_Object.3:AG_ObjectCopyName.3 AG_Object.3:AG_ObjectLock.3 AG_Object.3:AG_ObjectUnlock.3 AG_Object.3:AG_LockVFS.3 AG_Object.3:AG_UnlockVFS.3 AG_Object.3:AG_ObjectSetName.3 AG_Object.3:AG_ObjectSetNameS.3 AG_Object.3:AG_ObjectGenName.3 AG_Object.3:AG_ObjectGenNamePfx.3 AG_Object.3:AGOBJECT_FOREACH_CHILD.3 AG_Object.3:AG_RegisterClass.3 AG_Object.3:AG_UnregisterClass.3 AG_Object.3:AG_CreateClass.3 AG_Object.3:AG_ClassSetInit.3 AG_Object.3:AG_ClassSetReset.3 AG_Object.3:AG_ClassSetDestroy.3 AG_Object.3:AG_ClassSetLoad.3 AG_Object.3:AG_ClassSetSave.3 AG_Object.3:AG_ClassSetEdit.3 AG_Object.3:AG_DestroyClass.3 AG_Object.3:AG_RegisterNamespace.3 AG_Object.3:AG_UnregisterNamespace.3 AG_Object.3:AG_LookupClass.3 AG_Object.3:AG_LoadClass.3 AG_Object.3:AG_RegisterModuleDirectory.3 AG_Object.3:AG_UnregisterModuleDirectory.3 AG_Object.3:AG_OfClass.3 AG_Object.3:AG_ObjectGetClassName.3 AG_Object.3:AG_ObjectSuperclass.3 AG_Object.3:AG_ObjectGetInheritHier.3 AG_Object.3:AGOBJECT_FOREACH_CLASS.3 AG_Object.3:AG_Class.3 AG_Object.3:AG_Classes.3 AG_Object.3:AG_ObjectClass.3 AG_Object.3:AG_ObjectDestroy.3 AG_Object.3:AG_ObjectReset.3 AG_Object.3:AG_ObjectFreeEvents.3 AG_Object.3:AG_ObjectFreeVariables.3 AG_Object.3:AG_ObjectFreeChildren.3 AG_Object.3:AG_ObjectLoad.3 AG_Object.3:AG_ObjectLoadFromFile.3 AG_Object.3:AG_ObjectLoadFromDB.3 AG_Object.3:AG_ObjectLoadData.3 AG_Object.3:AG_ObjectLoadDataFromFile.3 AG_Object.3:AG_ObjectLoadGeneric.3 AG_Object.3:AG_ObjectLoadGenericFromFile.3 AG_Object.3:AG_ObjectSave.3 AG_Object.3:AG_ObjectSaveAll.3 AG_Object.3:AG_ObjectSaveToFile.3 AG_Object.3:AG_ObjectSaveToDB.3 AG_Object.3:AG_ObjectSerialize.3 AG_Object.3:AG_ObjectUnserialize.3 AG_Object.3:AG_ObjectReadHeader.3 AG_Object.3:AG_ObjectPageIn.3 AG_Object.3:AG_ObjectPageOut.3 AG_Object.3:AG_ObjectHeader.3 AG_Queue.3:AG_SLIST_ENTRY.3 AG_Queue.3:AG_SLIST_HEAD.3 AG_Queue.3:AG_SLIST_HEAD_.3 AG_Queue.3:AG_SLIST_HEAD_INITIALIZER.3 AG_Queue.3:AG_SLIST_FIRST.3 AG_Queue.3:AG_SLIST_NEXT.3 AG_Queue.3:AG_SLIST_END.3 AG_Queue.3:AG_SLIST_EMPTY.3 AG_Queue.3:AG_SLIST_FOREACH.3 AG_Queue.3:AG_SLIST_FOREACH_PREVPTR.3 AG_Queue.3:AG_SLIST_INIT.3 AG_Queue.3:AG_SLIST_INSERT_AFTER.3 AG_Queue.3:AG_SLIST_INSERT_HEAD.3 AG_Queue.3:AG_SLIST_REMOVE_HEAD.3 AG_Queue.3:AG_SLIST_REMOVE_NEXT.3 AG_Queue.3:AG_SLIST_REMOVE.3 AG_Queue.3:AG_LIST_ENTRY.3 AG_Queue.3:AG_LIST_HEAD.3 AG_Queue.3:AG_LIST_HEAD_.3 AG_Queue.3:AG_LIST_HEAD_INITIALIZER.3 AG_Queue.3:AG_LIST_FIRST.3 AG_Queue.3:AG_LIST_NEXT.3 AG_Queue.3:AG_LIST_END.3 AG_Queue.3:AG_LIST_EMPTY.3 AG_Queue.3:AG_LIST_FOREACH.3 AG_Queue.3:AG_LIST_INIT.3 AG_Queue.3:AG_LIST_INSERT_AFTER.3 AG_Queue.3:AG_LIST_INSERT_BEFORE.3 AG_Queue.3:AG_LIST_INSERT_HEAD.3 AG_Queue.3:AG_LIST_REMOVE.3 AG_Queue.3:AG_LIST_REPLACE.3 AG_Queue.3:AG_SIMPLEQ_ENTRY.3 AG_Queue.3:AG_SIMPLEQ_HEAD.3 AG_Queue.3:AG_SIMPLEQ_HEAD_.3 AG_Queue.3:AG_SIMPLEQ_HEAD_INITIALIZER.3 AG_Queue.3:AG_SIMPLEQ_FIRST.3 AG_Queue.3:AG_SIMPLEQ_NEXT.3 AG_Queue.3:AG_SIMPLEQ_END.3 AG_Queue.3:AG_SIMPLEQ_INIT.3 AG_Queue.3:AG_SIMPLEQ_INSERT_HEAD.3 AG_Queue.3:AG_SIMPLEQ_INSERT_TAIL.3 AG_Queue.3:AG_SIMPLEQ_INSERT_AFTER.3 AG_Queue.3:AG_SIMPLEQ_REMOVE_HEAD.3 AG_Queue.3:AG_TAILQ_ENTRY.3 AG_Queue.3:AG_TAILQ_HEAD.3 AG_Queue.3:AG_TAILQ_HEAD_.3 AG_Queue.3:AG_TAILQ_HEAD_INITIALIZER.3 AG_Queue.3:AG_TAILQ_FIRST.3 AG_Queue.3:AG_TAILQ_NEXT.3 AG_Queue.3:AG_TAILQ_END.3 AG_Queue.3:AG_TAILQ_LAST.3 AG_Queue.3:AG_TAILQ_PREV.3 AG_Queue.3:AG_TAILQ_EMPTY.3 AG_Queue.3:AG_TAILQ_FOREACH.3 AG_Queue.3:AG_TAILQ_FOREACH_REVERSE.3 AG_Queue.3:AG_TAILQ_INIT.3 AG_Queue.3:AG_TAILQ_INSERT_AFTER.3 AG_Queue.3:AG_TAILQ_INSERT_BEFORE.3 AG_Queue.3:AG_TAILQ_INSERT_HEAD.3 AG_Queue.3:AG_TAILQ_INSERT_TAIL.3 AG_Queue.3:AG_TAILQ_REMOVE.3 AG_Queue.3:AG_CIRCLEQ_ENTRY.3 AG_Queue.3:AG_CIRCLEQ_HEAD.3 AG_Queue.3:AG_CIRCLEQ_HEAD_.3 AG_Queue.3:AG_CIRCLEQ_HEAD_INITIALIZER.3 AG_Queue.3:AG_CIRCLEQ_FIRST.3 AG_Queue.3:AG_CIRCLEQ_LAST.3 AG_Queue.3:AG_CIRCLEQ_END.3 AG_Queue.3:AG_CIRCLEQ_NEXT.3 AG_Queue.3:AG_CIRCLEQ_PREV.3 AG_Queue.3:AG_CIRCLEQ_EMPTY.3 AG_Queue.3:AG_CIRCLEQ_FOREACH.3 AG_Queue.3:AG_CIRCLEQ_FOREACH_REVERSE.3 AG_Queue.3:AG_CIRCLEQ_INIT.3 AG_Queue.3:AG_CIRCLEQ_INSERT_AFTER.3 AG_Queue.3:AG_CIRCLEQ_INSERT_BEFORE.3 AG_Queue.3:AG_CIRCLEQ_INSERT_HEAD.3 AG_Queue.3:AG_CIRCLEQ_INSERT_TAIL.3 AG_Queue.3:AG_CIRCLEQ_REMOVE.3 AG_String.3:AG_Printf.3 AG_String.3:AG_PrintfN.3 AG_String.3:AG_PrintfP.3 AG_String.3:AG_FreeFmtString.3 AG_String.3:AG_ProcessFmtString.3 AG_String.3:AG_RegisterFmtStringExt.3 AG_String.3:AG_FMTSTRING_ARG.3 AG_String.3:AG_UnregisterFmtStringExt.3 AG_String.3:AG_FmtString.3 AG_String.3:AG_FmtStringExtFn.3 AG_String.3:AG_Strsep.3 AG_String.3:AG_Strdup.3 AG_String.3:AG_TryStrdup.3 AG_String.3:AG_Strlcpy.3 AG_String.3:AG_Strlcat.3 AG_String.3:AG_StrlcpyInt.3 AG_String.3:AG_StrlcatInt.3 AG_String.3:AG_StrlcpyUint.3 AG_String.3:AG_StrlcatUint.3 AG_String.3:AG_ImportUnicode.3 AG_String.3:AG_ExportUnicode.3 AG_String.3:AG_LengthUTF8.3 AG_String.3:AG_CharLengthUTF8.3 AG_String.3:AG_LengthUCS4.3 AG_String.3:AG_LengthUTF8FromUCS4.3 AG_String.3:AG_CharLengthUTF8FromUCS4.3 AG_String.3:AG_Strcasecmp.3 AG_String.3:AG_Strncasecmp.3 AG_String.3:AG_Strcasestr.3 AG_String.3:AG_StrReverse.3 AG_Tbl.3:AG_TblNew.3 AG_Tbl.3:AG_TblInit.3 AG_Tbl.3:AG_TblDestroy.3 AG_Tbl.3:AG_TblLookup.3 AG_Tbl.3:AG_TblLookupPointer.3 AG_Tbl.3:AG_TblExists.3 AG_Tbl.3:AG_TblInsert.3 AG_Tbl.3:AG_TblInsertPointer.3 AG_Tbl.3:AG_TblDelete.3 AG_Tbl.3:AG_TBL_FOREACH.3 AG_Tbl.3:AG_TblHash.3 AG_Tbl.3:AG_TblLookupHash.3 AG_Tbl.3:AG_TblExistsHash.3 AG_Tbl.3:AG_TblInsertHash.3 AG_Tbl.3:AG_TblDeleteHash.3 AG_TextElement.3:AG_TextEnt.3 AG_TextElement.3:AG_TextNew.3 AG_TextElement.3:AG_TextInit.3 AG_TextElement.3:AG_TextSetLimit.3 AG_TextElement.3:AG_TextDestroy.3 AG_TextElement.3:AG_TextClear.3 AG_TextElement.3:AG_TextSetLang.3 AG_TextElement.3:AG_TextGetLang.3 AG_TextElement.3:AG_TextSetLangISO.3 AG_TextElement.3:AG_TextGetLangISO.3 AG_TextElement.3:AG_TextSet.3 AG_TextElement.3:AG_TextSetS.3 AG_TextElement.3:AG_TextSetEnt.3 AG_TextElement.3:AG_TextSetEntS.3 AG_TextElement.3:AG_TextDup.3 AG_TextElement.3:AG_TextLoad.3 AG_TextElement.3:AG_TextSave.3 AG_Threads.3:AG_Mutex.3 AG_Threads.3:AG_MutexInit.3 AG_Threads.3:AG_MutexTryInit.3 AG_Threads.3:AG_MutexInitRecursive.3 AG_Threads.3:AG_MutexTryInitRecursive.3 AG_Threads.3:AG_MutexDestroy.3 AG_Threads.3:AG_MutexLock.3 AG_Threads.3:AG_MutexTryLock.3 AG_Threads.3:AG_MutexUnlock.3 AG_Threads.3:AG_Cond.3 AG_Threads.3:AG_CondInit.3 AG_Threads.3:AG_CondTryInit.3 AG_Threads.3:AG_CondDestroy.3 AG_Threads.3:AG_CondBroadcast.3 AG_Threads.3:AG_CondSignal.3 AG_Threads.3:AG_CondWait.3 AG_Threads.3:AG_CondTimedWait.3 AG_Threads.3:AG_Thread.3 AG_Threads.3:AG_ThreadCreate.3 AG_Threads.3:AG_ThreadTryCreate.3 AG_Threads.3:AG_ThreadCancel.3 AG_Threads.3:AG_ThreadTryCancel.3 AG_Threads.3:AG_ThreadJoin.3 AG_Threads.3:AG_ThreadTryJoin.3 AG_Threads.3:AG_ThreadExit.3 AG_Threads.3:AG_ThreadKill.3 AG_Threads.3:AG_ThreadSelf.3 AG_Threads.3:AG_ThreadEqual.3 AG_Threads.3:AG_ThreadKey.3 AG_Threads.3:AG_ThreadKeyCreate.3 AG_Threads.3:AG_ThreadKeyTryCreate.3 AG_Threads.3:AG_ThreadKeyDelete.3 AG_Threads.3:AG_ThreadKeyTryDelete.3 AG_Threads.3:AG_ThreadKeyGet.3 AG_Threads.3:AG_ThreadKeySet.3 AG_Threads.3:AG_ThreadKeyTrySet.3 AG_Time.3:AG_GetTicks.3 AG_Time.3:AG_Delay.3 AG_Time.3:AG_SetTimeOps.3 AG_Time.3:AG_TimeOps.3 AG_Timer.3:AG_Timeout.3 AG_Timer.3:AG_Timers.3 AG_Timer.3:AG_TimerFn.3 AG_Timer.3:AG_InitTimer.3 AG_Timer.3:AG_AddTimer.3 AG_Timer.3:AG_AddTimerAuto.3 AG_Timer.3:AG_DelTimer.3 AG_Timer.3:AG_DelTimers.3 AG_Timer.3:AG_ResetTimer.3 AG_Timer.3:AG_LockTimers.3 AG_Timer.3:AG_UnlockTimers.3 AG_Timer.3:AG_TimerIsRunning.3 AG_Timer.3:AG_ExecTimer.3 AG_Timer.3:AG_ProcessTimeouts.3 AG_User.3:AG_UserNew.3 AG_User.3:AG_GetUserByName.3 AG_User.3:AG_GetUserByUID.3 AG_User.3:AG_GetRealUser.3 AG_User.3:AG_GetEffectiveUser.3 AG_User.3:AG_UserFree.3 AG_User.3:AG_SetUserOps.3 AG_User.3:AG_UserOps.3 AG_Variable.3:AG_Defined.3 AG_Variable.3:AG_GetVariable.3 AG_Variable.3:AG_AccessVariable.3 AG_Variable.3:AG_FetchVariable.3 AG_Variable.3:AG_FetchVariableOfType.3 AG_Variable.3:AG_LockVariable.3 AG_Variable.3:AG_UnlockVariable.3 AG_Variable.3:AG_PrintVariable.3 AG_Variable.3:AG_CopyVariable.3 AG_Variable.3:AG_DerefVariable.3 AG_Variable.3:AG_CompareVariables.3 AG_Variable.3:AG_Set.3 AG_Variable.3:AG_Unset.3 AG_Variable.3:AG_VariableSubst.3 AG_Variable.3:AG_GetUint.3 AG_Variable.3:AG_InitUint.3 AG_Variable.3:AG_SetUint.3 AG_Variable.3:AG_BindUint.3 AG_Variable.3:AG_BindUintMp.3 AG_Variable.3:AG_GetInt.3 AG_Variable.3:AG_InitInt.3 AG_Variable.3:AG_SetInt.3 AG_Variable.3:AG_BindInt.3 AG_Variable.3:AG_BindIntMp.3 AG_Variable.3:AG_GetUint8.3 AG_Variable.3:AG_InitUint8.3 AG_Variable.3:AG_SetUint8.3 AG_Variable.3:AG_BindUint8.3 AG_Variable.3:AG_BindUint8Mp.3 AG_Variable.3:AG_GetSint8.3 AG_Variable.3:AG_InitSint8.3 AG_Variable.3:AG_SetSint8.3 AG_Variable.3:AG_BindSint8.3 AG_Variable.3:AG_BindSint8Mp.3 AG_Variable.3:AG_GetUint16.3 AG_Variable.3:AG_InitUint16.3 AG_Variable.3:AG_SetUint16.3 AG_Variable.3:AG_BindUint16.3 AG_Variable.3:AG_BindUint16Mp.3 AG_Variable.3:AG_GetSint16.3 AG_Variable.3:AG_InitSint16.3 AG_Variable.3:AG_SetSint16.3 AG_Variable.3:AG_BindSint16.3 AG_Variable.3:AG_BindSint16Mp.3 AG_Variable.3:AG_GetUint32.3 AG_Variable.3:AG_InitUint32.3 AG_Variable.3:AG_SetUint32.3 AG_Variable.3:AG_BindUint32.3 AG_Variable.3:AG_BindUint32Mp.3 AG_Variable.3:AG_GetSint32.3 AG_Variable.3:AG_InitSint32.3 AG_Variable.3:AG_SetSint32.3 AG_Variable.3:AG_BindSint32.3 AG_Variable.3:AG_BindSint32Mp.3 AG_Variable.3:AG_GetUint64.3 AG_Variable.3:AG_InitUint64.3 AG_Variable.3:AG_SetUint64.3 AG_Variable.3:AG_BindUint64.3 AG_Variable.3:AG_BindUint64Mp.3 AG_Variable.3:AG_GetSint64.3 AG_Variable.3:AG_InitSint64.3 AG_Variable.3:AG_SetSint64.3 AG_Variable.3:AG_BindSint64.3 AG_Variable.3:AG_BindSint64Mp.3 AG_Variable.3:AG_GetFloat.3 AG_Variable.3:AG_InitFloat.3 AG_Variable.3:AG_SetFloat.3 AG_Variable.3:AG_BindFloat.3 AG_Variable.3:AG_BindFloatMp.3 AG_Variable.3:AG_GetDouble.3 AG_Variable.3:AG_InitDouble.3 AG_Variable.3:AG_SetDouble.3 AG_Variable.3:AG_BindDouble.3 AG_Variable.3:AG_BindDoubleMp.3 AG_Variable.3:AG_GetString.3 AG_Variable.3:AG_GetStringDup.3 AG_Variable.3:AG_GetStringP.3 AG_Variable.3:AG_InitString.3 AG_Variable.3:AG_SetString.3 AG_Variable.3:AG_SetStringF.3 AG_Variable.3:AG_SetStringNODUP.3 AG_Variable.3:AG_BindString.3 AG_Variable.3:AG_BindStringMp.3 AG_Variable.3:AG_GetPointer.3 AG_Variable.3:AG_InitPointer.3 AG_Variable.3:AG_SetPointer.3 AG_Variable.3:AG_BindPointer.3 AG_Variable.3:AG_BindPointerMp.3 AG_Variable.3:AG_BindFlag.3 AG_Variable.3:AG_BindFlagMp.3 AG_Variable.3:AG_BindFlag8.3 AG_Variable.3:AG_BindFlag8Mp.3 AG_Variable.3:AG_BindFlag16.3 AG_Variable.3:AG_BindFlag16Mp.3 AG_Variable.3:AG_BindFlag32.3 AG_Variable.3:AG_BindFlag32Mp.3 AG_Variable.3:AG_BindObject.3 AG_Variable.3:AG_BindVariable.3 AG_Version.3:AG_ReadVersion.3 AG_Version.3:AG_WriteVersion.3 AG_Version.3:AG_ReadObjectVersion.3 AG_Version.3:AG_WriteObjectVersion.3
# makefile (from 'Makefile', line 11)
LIB_GUID = "9d6bb497-1d2a-4ac0-9f7b-7be68b9077e8"
# makefile (from '../Makefile.config', line 144)
MYSQL_LIBS = 
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from '../Makefile.config', line 167)
RELEASE = Nullability Complete
# environment
PATH = /home/yyf/anaconda3/bin:/home/yyf/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from '../mk/build.proj.mk', line 29)
PREMAKEOUT = premake.lua
# makefile (from '../Makefile.config', line 158)
PROG_GUI_CFLAGS = 
# makefile (from '../mk/build.common.mk', line 54)
INSTALL_INCL = install -c -m 644
# makefile (from '../mk/build.common.mk', line 44)
FIND = find
# makefile (from '../Makefile.config', line 36)
ENABLE_GUI_LIBS = -L../gui -lag_gui
# makefile (from '../mk/build.proj.mk', line 35)
PROJFILELIST = .projfiles2.out
# makefile (from '../Makefile.config', line 118)
HAVE_WEB = no
 
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# makefile (from '../mk/build.lib.mk', line 56)
YACC = yacc
# makefile (from '../mk/build.lib.mk', line 77)
LTCONFIG = ${LTBASE}/configure
# environment
SESSION_MANAGER = local/yyf-MS-7A54:@/tmp/.ICE-unix/22561,unix/yyf-MS-7A54:/tmp/.ICE-unix/22561
# makefile (from '../Makefile.config', line 96)
HAVE_PACKED_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 103)
HAVE_PTHREAD_MUTEX_RECURSIVE_NP = yes
# makefile (from '../Makefile.config', line 155)
PROG_BUNDLE = 
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from '../Makefile.config', line 126)
ICONV_CFLAGS = 
# environment
GDK_PIXBUF_MODULE_FILE = /home/yyf/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# makefile (from 'Makefile', line 30)
CFLAGS = -D_AGAR_INTERNAL -D_DEFAULT_SOURCE -D_BSD_SOURCE -g  -I/home/yyf/Documents/agar-1.6.0/include ${CORE_CFLAGS} -D_AGAR_CORE_INTERNAL
# makefile (from '../Makefile.config', line 91)
HAVE_NETWORK = yes
# makefile (from '../Makefile.config', line 95)
HAVE_OPENGL = yes
# makefile (from '../mk/build.proj.mk', line 32)
PROJECT = 
# environment
SNAP = /snap/code/95
# makefile (from '../Makefile.config', line 132)
LIBEXECDIR = /usr/local/libexec
# makefile (from '../Makefile.config', line 169)
SDL_LIBS = -L/usr/lib/x86_64-linux-gnu -lSDL
# makefile (from '../Makefile.config', line 113)
HAVE_SYS_PARAM_H = 
# makefile (from '../Makefile.config', line 65)
HAVE_CSIDL = no
# makefile (from '../mk/build.common.mk', line 60)
INSTALL_MAN_DIR = mkdir -p
# makefile (from '../Makefile.config', line 90)
HAVE_MYSQL = no
# environment
SNAP_VERSION = 57fd6d01
# environment
CONDA_PREFIX = /home/yyf/anaconda3
# makefile (from '../mk/build.lib.mk', line 45)
AR = ar
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
DISABLE_WAYLAND = 1
# makefile (from '../Makefile.config', line 162)
PROG_TRANSFORM = s,x,x,
# makefile (from '../mk/build.common.mk', line 69)
DEINSTALL_DATA_DIR = rmdir -p
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from '../Makefile.config', line 84)
HAVE_LIBOPENGL32 = 
# environment
INVOCATION_ID = 608a15c5f3024d3baf231a0898605c0b
# makefile (from '../Makefile.config', line 15)
LDFLAGS = 
# makefile (from '../Makefile.config', line 174)
SRCS_GUI = drv_sdl_common.c drv_sdlfb.c drv_sdlgl.c drv_gl_common.c drv_glx.c
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/95/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# makefile (from '../Makefile.config', line 57)
HAVE_CC_GCC = no
# makefile (from '../Makefile.config', line 176)
SSE2_CFLAGS = -msse2
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from '../mk/build.man.mk', line 34)
MAN4 = 
# makefile (from '../mk/build.common.mk', line 51)
INSTALL_PROG = install -c -m 755
# makefile (from '../mk/build.lib.mk', line 65)
LIBL = -ll
# makefile (from '../Makefile.config', line 53)
HAVE_BOUNDED_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 8)
ECHO_N = /bin/echo -n
# environment
LS_COLORS = 
# makefile (from '../Makefile.config', line 86)
HAVE_LONG_DOUBLE = yes
# makefile (from '../Makefile.config', line 34)
DSO_CFLAGS = 
# makefile (from '../Makefile.config', line 185)
SUBDIR_net = net
# makefile (from '../Makefile.config', line 127)
ICONV_LIBS = 
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 64633
# makefile (from '../mk/build.lib.mk', line 38)
LIB_BUNDLE = 
# automatic
%F = $(notdir $%)
# makefile (from '../Makefile.config', line 156)
PROG_CLI_CFLAGS = 
# environment
DISPLAY = :1
# environment
CONDA_EXE = /home/yyf/anaconda3/bin/conda
# makefile (from '../mk/build.lib.mk', line 76)
LIBTOOL = ${LTBASE}/libtool
# makefile (from '../Makefile.config', line 7)
BLDDIR = /home/yyf/Documents/agar-1.6.0
# makefile (from '../Makefile.config', line 6)
SRCDIR = /home/yyf/Documents/agar-1.6.0
# makefile (from '../Makefile.config', line 157)
PROG_CLI_FLAGS = 
# makefile (from '../mk/build.lib.mk', line 64)
LFLAGS = 
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'Makefile', line 12)
LIB_LINKS = ${CORE_LIBS}
# makefile (from '../mk/build.lib.mk', line 99)
OBJS = 
# environment
SNAP_INSTANCE_KEY = 
# environment
PWD = /home/yyf/Documents/agar-1.6.0/core
# makefile (from '../Makefile.config', line 116)
HAVE_VASPRINTF = yes
# makefile (from '../mk/build.lib.mk', line 59)
ADABFLAGS = -x
# default
.LOADED := 
# makefile (from '../Makefile.config', line 142)
MODULEDIR = /usr/local/lib
# environment
SSH_AGENT_PID = 22520
# makefile (from '../mk/build.lib.mk', line 53)
RANLIB = ranlib
# makefile (from '../Makefile.config', line 24)
CLOCK_CFLAGS = 
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# makefile (from '../mk/build.lib.mk', line 88)
CONF = 
# makefile (from '../Makefile.config', line 101)
HAVE_PTHREAD_COND_T_POINTER = no
# makefile (from '../Makefile.config', line 186)
SUBDIR_sg = sg
# makefile (from '../Makefile.config', line 94)
HAVE_OBJC_WARNINGS = yes
# environment
GTK_MODULES = gail:atk-bridge
# makefile (from '../Makefile.config', line 63)
HAVE_COCOA = no
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/yyf
# makefile (from '../mk/build.proj.mk', line 26)
ZIP = zip
# makefile (from '../Makefile.config', line 198)
_MK_BYTE_ORDER = LE
# makefile (from '../Makefile.config', line 62)
HAVE_CLOCK_WIN32 = no
# makefile (from '../mk/build.lib.mk', line 66)
MKDEP = sh ${TOP}/mk/mkdep
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# makefile (from '../mk/build.lib.mk', line 62)
CPPFLAGS = 
# makefile (from '../Makefile.config', line 42)
FREETYPE_CFLAGS = -I/usr/include/freetype2 -I/usr/include/libpng16
# environment
VSCODE_CODE_CACHE_PATH = /home/yyf/.config/Code/CachedData/57fd6d0195bb9b9d1b49f6da5db789060795de47
# makefile (from '../Makefile.config', line 105)
HAVE_PTHREAD_T_POINTER = yes
# makefile (from '../Makefile.config', line 25)
CLOCK_LIBS = 
# environment
LOGNAME = yyf
# makefile (from '../mk/build.man.mk', line 32)
MAN2 = 
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = Bx-AkJMwqp53F8JwmcA_kCyZNudDIHbMfRP3bs0BlIaoBbuFVsOJ
# environment
CONDA_PROMPT_MODIFIER = (base) 
# automatic
+F = $(notdir $+)
# makefile (from '../Makefile.config', line 52)
HAVE_ASPRINTF = yes
# makefile (from '../mk/build.proj.mk', line 37)
PROJNOCLEAN = no
# makefile (from '../Makefile.config', line 154)
PORTAUDIO_LIBS = 
# makefile (from '../Makefile.config', line 29)
DATADIR = /usr/local/share/agar
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
SNAP_USER_COMMON = /home/yyf/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
 
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from '../mk/build.proj.mk', line 25)
PREMAKE = premake
# makefile (from '../core/Makefile.inc', line 12)
CORE_LINKS = ag_core ${CORE_LIBS}
# makefile (from '../Makefile.config', line 43)
FREETYPE_LIBS = -lfreetype
# makefile (from '../Makefile.config', line 109)
HAVE_SNDFILE = no
# makefile (from '../Makefile.config', line 179)
STATEDIR = /usr/local/var
# makefile (from '../Makefile.config', line 83)
HAVE_LD_STATIC_LIBGCC = 
# makefile (from '../Makefile.config', line 139)
MATH_CFLAGS = 
# makefile (from '../Makefile.config', line 148)
PATH_SEPARATOR = :
# environment
LC_TIME = zh_CN.UTF-8
# environment
SNAP_REAL_HOME = /home/yyf
# makefile (from 'Makefile', line 15)
MAN3 = AG_ByteSwap.3 AG_CPUInfo.3 AG_Config.3 AG_Core.3 AG_DSO.3 AG_DataSource.3 AG_Db.3 AG_Error.3 AG_Event.3 AG_EventLoop.3 AG_Execute.3 AG_File.3 AG_Getopt.3 AG_Intro.3 AG_Limits.3 AG_Object.3 AG_Queue.3 AG_String.3 AG_Tbl.3 AG_TextElement.3 AG_Threads.3 AG_Time.3 AG_Timer.3 AG_User.3 AG_Variable.3 AG_Version.3
# makefile (from '../mk/build.common.mk', line 64)
DEINSTALL_DATA = rm -f
# environment
CONDA_DEFAULT_ENV = base
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := byteswap.o class.o config.o core.o cpuinfo.o data_source.o db.o dir.o dso.o error.o event.o exec.o file.o getopt.o load_integral.o load_real.o load_string.o load_version.o object.o string.o tbl.o text.o time.o time_dummy.o timeout.o threads.o vasprintf.o vsnprintf.o user.o user_dummy.o user_getenv.o variable.o vec.o time_posix.o time_renderer.o time_gettimeofday.o user_posix.o
# makefile (from '../Makefile.config', line 135)
LOCALEDIR = /usr/local/share/agar/locale
# environment
QT_IM_MODULE = ibus
# makefile (from '../Makefile.config', line 199)
_MK_HAVE_FLOAT_H = yes
# makefile (from 'Makefile', line 22)
SRCS = byteswap.c class.c config.c core.c cpuinfo.c data_source.c db.c dir.c dso.c error.c event.c exec.c file.c getopt.c load_integral.c load_real.c load_string.c load_version.c object.c string.c tbl.c text.c time.c time_dummy.c timeout.c threads.c vasprintf.c vsnprintf.c user.c user_dummy.c user_getenv.c variable.c vec.c ${SRCS_CORE}
# environment
SNAP_USER_DATA = /home/yyf/snap/code/95
# makefile (from '../Makefile.config', line 180)
SUBDIR_au = 
# environment
SHLVL = 0
# makefile (from '../mk/build.lib.mk', line 52)
OBJC = cc
# makefile (from '../mk/build.lib.mk', line 46)
ASM = nasm
# makefile (from '../Makefile.config', line 20)
BINDIR = /usr/local/bin
# makefile (from '../mk/build.lib.mk', line 75)
LIBTOOL_COOKIE = ${TOP}/mk/libtool.ok
# makefile (from '../Makefile.config', line 106)
HAVE_PURE_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 21)
CC = /usr/bin/clang
# makefile (from '../mk/build.proj.mk', line 30)
PREMAKEFLAGS = 
# makefile (from '../Makefile.config', line 39)
EXECSUFFIX = 
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from '../mk/build.lib.mk', line 44)
ADAPREPFILE = 
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-f21f5cbd-4dad-4a27-91af-4a52b861063e.sock
# makefile (from '../mk/build.lib.mk', line 71)
YFLAGS = -d
# default
MAKE_VERSION := 4.2.1
# environment
USER = yyf
# environment
SNAP_REVISION = 95
# makefile (from '../Makefile.config', line 205)
_MK_HAVE_UNISTD_H = yes
# makefile (from '../Makefile.config', line 26)
COCOA_CFLAGS = 
# makefile (from '../Makefile.config', line 150)
PKGCONFIG_LIBDIR = ${PREFIX}/lib/pkgconfig
# environment
LC_MONETARY = zh_CN.UTF-8
# makefile
.DEFAULT_GOAL := all
# makefile (from '../Makefile.config', line 203)
_MK_HAVE_SYS_STAT_H = yes
# makefile (from '../Makefile.config', line 38)
ENABLE_NLS = no
# makefile (from '../Makefile.config', line 108)
HAVE_SHL_LOAD = no
# environment
XDG_CURRENT_DESKTOP = Unity
# makefile (from '../core/Makefile.inc', line 13)
CORE_LINKS_STATIC = ag_core_static ${CORE_LIBS}
# makefile (from '../Makefile.config', line 73)
HAVE_FORMAT_ATTRIBUTE = yes
# makefile (from '../mk/build.common.mk', line 63)
DEINSTALL_LIB = rm -f
# makefile (from '../Makefile.config', line 159)
PROG_GUI_FLAGS = 
# makefile (from '../Makefile.config', line 152)
PNG_LIBS = -L/home/yyf/anaconda3/lib -lpng16
# command line
REL = core/
# makefile (from '../mk/build.common.mk', line 32)
DESTDIR = 
# makefile (from '../mk/build.man.mk', line 35)
MAN5 = 
# makefile (from '../Makefile.config', line 112)
HAVE_SSE3 = yes
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from '../Makefile.config', line 13)
USE_LIBTOOL = No
# environment
LC_TELEPHONE = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 27)
COCOA_LIBS = 
# makefile (from '../mk/build.common.mk', line 70)
DEINSTALL_INCL_DIR = rmdir -p
# makefile (from '../Makefile.config', line 164)
PTHREADS_LIBS = -lpthread
# makefile (from '../Makefile.config', line 182)
SUBDIR_map = 
# makefile (from '../mk/build.lib.mk', line 70)
PICFLAGS = -fPIC
# environment
CONDA_SHLVL = 1
 
# makefile (from '../mk/build.lib.mk', line 68)
MKDEP_ADAFLAGS = -M -u -v
# default
MAKE_COMMAND := make
# makefile (from 'Makefile', line 8)
LIB_REVISION = 0
# environment
OLDPWD = /home/yyf/Documents/agar-1.6.0
# makefile (from '../Makefile.config', line 131)
LIBDIR = /usr/local/lib
# makefile (from '../Makefile.config', line 170)
SNDFILE_CFLAGS = 
# makefile (from '../mk/build.lib.mk', line 97)
INCL = 
# makefile (from '../Makefile.config', line 183)
SUBDIR_math = math
# makefile (from '../mk/build.lib.mk', line 41)
ADABIND = gnatbind
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile (from '../Makefile.config', line 107)
HAVE_SDL = yes
# makefile (from '../Makefile.config', line 44)
GETTEXT_CFLAGS = 
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-6e94e96f-1.67.0-main.sock
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from '../mk/build.man.mk', line 38)
MAN8 = 
# makefile (from '../Makefile.config', line 75)
HAVE_GETTEXT = no
# makefile (from '../Makefile.config', line 35)
DSO_LIBS = -ldl
# makefile (from '../core/Makefile.inc', line 8)
CORE_CFLAGS = ${PTHREADS_XOPEN_CFLAGS} ${ALTIVEC_CHECK_CFLAGS} ${GETTEXT_CFLAGS} ${DSO_CFLAGS} ${DB4_CFLAGS} ${DB5_CFLAGS} ${MYSQL_CFLAGS} ${CLOCK_CFLAGS} ${ZLIB_CFLAGS}
# makefile (from '../mk/build.lib.mk', line 50)
LEX = lex
# makefile (from '../Makefile.config', line 40)
FONTCONFIG_CFLAGS = -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
# makefile (from '../Makefile.config', line 119)
HAVE_WGL = no
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# makefile (from '../mk/build.common.mk', line 58)
INSTALL_DATA_DIR = mkdir -p
# makefile (from '../mk/build.lib.mk', line 103)
SHOBJS = 
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from '../Makefile.config', line 171)
SNDFILE_LIBS = 
# makefile (from '../Makefile.config', line 136)
MANDIR = /usr/local/man
# makefile (from '../mk/build.man.mk', line 42)
NOMAN = 
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '../mk/build.common.mk', line 52)
INSTALL_LIB = install -c -m 644
# makefile (from '../Makefile.config', line 45)
GETTEXT_LIBS = 
# makefile (from '../mk/build.man.mk', line 40)
MANS = ${MAN1} ${MAN2} ${MAN3} ${MAN4} ${MAN5} ${MAN6} ${MAN7} ${MAN8} ${MAN9}
# environment
GDK_BACKEND = x11
# makefile (from '../Makefile.config', line 137)
MATH_C99_CFLAGS = 
# makefile (from '../Makefile.config', line 64)
HAVE_CONST_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 189)
SYSCONFDIR = /usr/local/etc
# makefile (from '../core/Makefile.inc', line 3)
CORE_LIBS = ${PTHREADS_XOPEN_LIBS} ${GETTEXT_LIBS} ${DSO_LIBS} ${DB4_LIBS} ${DB5_LIBS} ${MYSQL_LIBS} ${CLOCK_LIBS} ${WINSOCK1_LIBS} ${WINSOCK2_LIBS} ${ZLIB_LIBS}
# makefile (from '../Makefile.config', line 125)
HAVE___INT64 = no
# makefile (from '../Makefile.config', line 68)
HAVE_DB5 = no
# environment
LC_PAPER = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 41)
FONTCONFIG_LIBS = -lfontconfig -lfreetype
# makefile (from '../Makefile.config', line 200)
_MK_HAVE_LIMITS_H = yes
# makefile (from '../mk/build.lib.mk', line 67)
MKDEP_ADA = gnatmake
# makefile (from '../mk/build.man.mk', line 31)
MAN1 = 
# environment
LC_IDENTIFICATION = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 197)
ZLIB_LIBS = 
# makefile (from '../Makefile.config', line 72)
HAVE_FONTCONFIG = yes
# environment
QT_ACCESSIBILITY = 1
# makefile (from '../Makefile.config', line 163)
PTHREADS_CFLAGS = 
# makefile (from '../Makefile.config', line 22)
CC_COMPILE = -c
# makefile (from '../mk/build.common.mk', line 49)
INSTALL_DESTDIR = mkdir -p
# makefile (from '../Makefile.config', line 172)
SRCS_AU = 
# makefile (from '../Makefile.config', line 138)
MATH_C99_LIBS = -lm
# makefile (from '../mk/build.lib.mk', line 90)
CONFIGSCRIPTS = 
# makefile (from '../Makefile.config', line 177)
SSE3_CFLAGS = -msse3
# default
MAKEFILES := 
# makefile (from '../Makefile.config', line 19)
AVAIL_PCMODULES = agar-core.pc agar.pc agar-math.pc agar-net.pc agar-sg.pc agar-sk.pc agar-vg.pc
# makefile (from '../Makefile.config', line 160)
PROG_PREFIX = 
# environment
SNAP_COOKIE = Bx-AkJMwqp53F8JwmcA_kCyZNudDIHbMfRP3bs0BlIaoBbuFVsOJ
 
# makefile (from '../Makefile.config', line 58)
HAVE_CC_MCONSOLE = no
# makefile (from '../mk/build.lib.mk', line 74)
LTBASE = ${TOP}/mk/libtool
# environment
LC_NUMERIC = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 17)
ALTIVEC_CFLAGS = 
# makefile (from '../Makefile.config', line 3)
BUILD = x86_64-unknown-linux-gnu
# makefile (from '../Makefile.config', line 11)
NOMANLINKS = yes
# automatic
<F = $(notdir $<)
# makefile (from '../mk/build.lib.mk', line 54)
SH = sh
# makefile (from '../mk/build.common.mk', line 67)
DEINSTALL_PROG_DIR = rmdir -p
# makefile (from '../mk/build.common.mk', line 68)
DEINSTALL_LIB_DIR = rmdir -p
# makefile (from '../Makefile.config', line 111)
HAVE_SSE2 = yes
# makefile (from '../mk/build.proj.mk', line 33)
PROJDIR = ProjectFiles
# makefile (from '../mk/build.lib.mk', line 49)
CXX = c++
# environment
LC_MEASUREMENT = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 48)
GLX_CFLAGS = 
# makefile (from '../Makefile.config', line 99)
HAVE_PTHREADS = yes
# makefile (from '../Makefile.config', line 60)
HAVE_CC_WARNINGS = yes
# environment
SNAP_NAME = code
# makefile (from '../Makefile.config', line 93)
HAVE_OBJC = yes
# makefile (from '../Makefile.config', line 76)
HAVE_GLEXT = yes
# makefile (from 'Makefile', line 6)
LIB = ag_core
# makefile (from '../mk/build.man.mk', line 30)
PAGER = more
# makefile (from '../Makefile.config', line 78)
HAVE_GLX = yes
# environment
LC_ALL = C
# makefile (from '../Makefile.config', line 89)
HAVE_MATH_C99 = yes
# makefile (from '../Makefile.config', line 194)
XINERAMA_CFLAGS = 
# makefile (from '../Makefile.config', line 56)
HAVE_CC_CLANG = yes
# makefile (from '../Makefile.config', line 87)
HAVE_MALLOC_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 18)
AVAIL_CONFIGSCRIPTS = agar-core-config agar-config agar-math-config agar-net-config agar-sg-config agar-sk-config agar-vg-config
# environment
CONDA_PYTHON_EXE = /home/yyf/anaconda3/bin/python
# makefile (from '../mk/build.proj.mk', line 36)
PROJCONFIGDIR = 
# makefile (from '../Makefile.config', line 128)
INCLDIR = /usr/local/include/agar
# makefile (from '../Makefile.config', line 134)
LIB_SHARED = Yes
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# makefile (from '../Makefile.config', line 49)
GLX_LIBS = -L/usr/local/lib -lGL -lX11
# makefile (from '../mk/build.lib.mk', line 82)
LTCONFIG_LOG = ${LTBASE}/config.log
# automatic
^F = $(notdir $^)
# makefile (from '../Makefile.config', line 133)
LIBTOOLOPTS_SHARED = 
# makefile (from '../mk/build.proj.mk', line 28)
MKPROJFILES = mkprojfiles
# makefile (from '../Makefile.config', line 74)
HAVE_FREETYPE = yes
# makefile (from '../mk/build.proj.mk', line 34)
PROJFILESEXTRA = 
# makefile (from '../Makefile.config', line 195)
XINERAMA_LIBS = -lXinerama
# default
SUFFIXES := 
# makefile (from '../mk/build.lib.mk', line 51)
LN = ln
# makefile (from '../Makefile.config', line 66)
HAVE_CYGWIN = no
# environment
SNAP_REEXEC = 
# environment
_CE_M = 
# makefile (from 'Makefile', line 13)
LIBS = ${CORE_LIBS}
# environment
CHROME_DESKTOP = code-url-handler.desktop
# makefile (from '../Makefile.config', line 79)
HAVE_ICONV = no
# environment
WINDOWPATH = 2
# makefile (from '../mk/build.common.mk', line 56)
INSTALL_PROG_DIR = mkdir -p
# makefile (from '../Makefile.config', line 121)
HAVE_XF86MISC = no
# makefile (from '../mk/build.lib.mk', line 102)
SRCS_GENERATED = 
# makefile (from '../Makefile.config', line 50)
HAVE_ALIGNED_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 168)
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT  -I/usr/include
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'Makefile', line 10)
 
LIB_INSTALL = Yes
# makefile (from '../mk/build.common.mk', line 53)
INSTALL_DATA = install -c -m 644
# makefile (from '../mk/build.proj.mk', line 39)
PROJFILES = windows:vs2005:: windows-xp:vs2005::
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from '../Makefile.config', line 181)
SUBDIR_gui = gui
# makefile (from '../mk/build.common.mk', line 29)
BSDBUILD_VERSION = 3.2
# makefile (from '../Makefile.config', line 165)
PTHREADS_XOPEN_CFLAGS = -U_XOPEN_SOURCE -D_XOPEN_SOURCE=600
# makefile (from '../Makefile.config', line 9)
HAVE_MANDOC = yes
# default
.RECIPEPREFIX := 
# makefile (from '../Makefile.config', line 85)
HAVE_LIBPNG14 = yes
# makefile (from '../Makefile.config', line 153)
PORTAUDIO_CFLAGS = 
# environment
LC_ADDRESS = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 120)
HAVE_X11 = yes
# makefile (from '../mk/build.lib.mk', line 55)
WINDRES = 
# makefile (from '../Makefile.config', line 147)
PACKAGE = Agar
# environment
LANG = C
# makefile (from '../mk/build.man.mk', line 37)
MAN7 = 
# makefile (from '../Makefile.config', line 12)
CTAGS = 
# makefile (from '../Makefile.config', line 59)
HAVE_CC_MWINDOWS = no
# makefile (from '../Makefile.config', line 115)
HAVE_UNUSED_VARIABLE_ATTRIBUTE = yes
# makefile (from '../mk/build.lib.mk', line 83)
LIBTOOLFLAGS = 
# environment
VSCODE_PID = 64681
# makefile (from '../mk/build.proj.mk', line 27)
ZIPFLAGS = -r
# makefile (from '../mk/build.lib.mk', line 69)
OBJCFLAGS = 
# makefile (from '../Makefile.config', line 166)
PTHREADS_XOPEN_LIBS = -lpthread
# makefile (from 'Makefile', line 7)
LIB_CURRENT = 6
# makefile (from '../mk/build.lib.mk', line 92)
CTAGSFLAGS = 
# environment
_CE_CONDA = 
# makefile (from '../Makefile.config', line 37)
ENABLE_MICRO_LIBS = 
# makefile (from '../Makefile.config', line 4)
HOST = x86_64-unknown-linux-gnu
# makefile (from '../mk/build.common.mk', line 42)
SUDO = 
# makefile (from '../Makefile.config', line 123)
HAVE_XKB = yes
# makefile (from '../Makefile.config', line 149)
PKGCONFIG = /usr/bin/pkg-config
# variable set hash-table stats:
# Load=460/1024=45%, Rehash=0, Collisions=1468/1905=77%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2051, inode 156896223): 182 files, 8 impossibilities.
# ../mk (device 2051, inode 156896231): 33 files, 10 impossibilities.
# ../core (device 2051, inode 156896223): 182 files, 8 impossibilities.
# .. (device 2051, inode 156896222): 52 files, 2 impossibilities.

# 449 files, 28 impossibilities in 4 directories.

# Implicit Rules

%.ads:

%.o: %.ads
#  recipe to execute (from '../mk/build.lib.mk', line 124):
	@_cflags="${CFLAGS}"; FB=`echo "$<" |sed 's/.ads$$//'`; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="$$_cflags ${PICFLAGS}"; fi; \
	if [ -e "$$FB.adb" ]; then \
	    echo "${ADA} ${ADAFLAGS} $$_cflags -c $$FB.adb"; \
	    ${ADA} ${ADAFLAGS} $$_cflags -c $$FB.adb; \
	else \
	    echo "${ADA} ${ADAFLAGS} $$_cflags -c $<"; \
	    ${ADA} ${ADAFLAGS} $$_cflags -c $<; \
	fi

%.adb:

%.o: %.adb
#  recipe to execute (from '../mk/build.lib.mk', line 118):
	@_cflags="${CFLAGS}"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="$$_cflags ${PICFLAGS}"; fi; \
	echo "${ADA} ${ADAFLAGS} $$_cflags -c $<"; \
 
	${ADA} ${ADAFLAGS} $$_cflags -c $<

%.asm:

%.o: %.asm
#  recipe to execute (from '../mk/build.lib.mk', line 136):
	${ASM} ${ASMFLAGS} ${CPPFLAGS} -o $@ $<

%.c:

%.lo: %.c
#  recipe to execute (from '../mk/build.lib.mk', line 158):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CC} ${LIBTOOLFLAGS} ${CFLAGS} ${CPPFLAGS} -o $@ ${CC_COMPILE} $<

%.o: %.c
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

%.cc:

%.lo: %.cc
#  recipe to execute (from '../mk/build.lib.mk', line 180):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CXX} ${LIBTOOLFLAGS} ${CXXFLAGS} ${CPPFLAGS} -o $@ -c $<

%.o: %.cc
#  recipe to execute (from '../mk/build.lib.mk', line 174):
	@_cxxflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cxxflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cxxflags="$$_cxxflags -pg -DPROF"; fi; \
	echo "${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<"; \
	${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<

%.cpp:

%.lo: %.cpp
#  recipe to execute (from '../mk/build.lib.mk', line 180):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CXX} ${LIBTOOLFLAGS} ${CXXFLAGS} ${CPPFLAGS} -o $@ -c $<

%.o: %.cpp
#  recipe to execute (from '../mk/build.lib.mk', line 174):
	@_cxxflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cxxflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cxxflags="$$_cxxflags -pg -DPROF"; fi; \
	echo "${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<"; \
	${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<

%.l:

%: %.l
#  recipe to execute (from '../mk/build.lib.mk', line 185):
	${LEX} ${LFLAGS} -o$@.yy.c $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.yy.c ${LIBL} ${LIBS}"; 
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.yy.c ${LIBL} ${LIBS}
	@rm -f $@.yy.c

%.o: %.l
#  recipe to execute (from '../mk/build.lib.mk', line 193):
	${LEX} ${LFLAGS} -o$@.yy.c $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.yy.c"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.yy.c
	@mv -f $@.yy.o $@
	@rm -f $@.yy.c

%.lo:

%.m:

%.lo: %.m
#  recipe to execute (from '../mk/build.lib.mk', line 169):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${OBJC} ${LIBTOOLFLAGS} ${CFLAGS} ${OBJCFLAGS} ${CPPFLAGS} -o $@ -c $<

%.o: %.m
#  recipe to execute (from '../mk/build.lib.mk', line 163):
	@_objcflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _objcflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _objcflags="$$_objcflags -pg -DPROF"; fi; \
	echo "${OBJC} ${CFLAGS} ${OBJCFLAGS} $$_objcflags ${CPPFLAGS} -o $@ -c $<"; \
	${OBJC} ${CFLAGS} ${OBJCFLAGS} $$_objcflags ${CPPFLAGS} -o $@ -c $<

%.o:

%.y:

%: %.y
#  recipe to execute (from '../mk/build.lib.mk', line 204):
	${YACC} ${YFLAGS} -b $@ $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.tab.c ${LIBS}"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.tab.c ${LIBS}
	@rm -f $@.tab.c

%.o: %.y
#  recipe to execute (from '../mk/build.lib.mk', line 212):
 
	${YACC} ${YFLAGS} -b $@ $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.tab.c"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.tab.c
	@mv -f $@.tab.o $@
	@rm -f $@.tab.c

# 26 implicit rules, 0 (0.0%) terminal.

# Files

user.o: user.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'user'
#  Last modified 2022-05-10 11:02:28.76086495
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

deinstall-lib: check-libtool
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 793):
	@if [ "${LIB}" != "" ]; then \
	    if [ "${USE_LIBTOOL}" = "Yes" ]; then \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --mode=uninstall rm -f ${LIBDIR}/lib${LIB}.la"; \
	        ${SUDO} ${LIBTOOL} ${LIBTOOLOPTS} --mode=uninstall rm -f ${DESTDIR}${LIBDIR}/lib${LIB}.la; \
	    else \
	    	if [ "${LIB_SHARED}" = "Yes" ]; then \
	            case "${HOST}" in \
	            *-darwin*) \
	                _libout="lib${LIB}.${LIB_CURRENT}.dylib"; \
	                _libnames="$$_libout lib${LIB}.dylib"; \
		        ;; \
	            *-mingw*) \
	                _libout="${LIB}.dll"; \
	                _libnames="$$_libout"; \
		        ;; \
	            *) \
	                _libout="lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE}"; \
	                _libnames="$$_libout lib${LIB}.so.${LIB_CURRENT} lib${LIB}.so"; \
	                ;; \
	            esac; \
		    for F in $$_libnames; do \
	                echo "${DEINSTALL_LIB} ${LIBDIR}/$$F"; \
	                ${SUDO} ${DEINSTALL_LIB} ${DESTDIR}${LIBDIR}/$$F; \
		    done; \
		fi; \
	        if [ "${HAVE_CC65}" = "yes" ]; then \
	            echo "${DEINSTALL_LIB} ${LIBDIR}/${LIB}.lib"; \
	            ${SUDO} ${DEINSTALL_LIB} ${DESTDIR}${LIBDIR}/${LIB}.lib; \
	        else \
	            echo "${DEINSTALL_LIB} ${LIBDIR}/lib${LIB}.a"; \
	            ${SUDO} ${DEINSTALL_LIB} ${DESTDIR}${LIBDIR}/lib${LIB}.a; \
	        fi; \
	        echo "${DEINSTALL_LIB} ${LIBDIR}/lib${LIB}.la"; \
	        ${SUDO} ${DEINSTALL_LIB} ${DESTDIR}${LIBDIR}/lib${LIB}.la; \
	    fi; \
	    for F in ${SRCS}; do \
	        if echo $$F | grep -q '.ad[bs]$$'; then \
		    FB=`echo "$$F" | sed 's/.ad[bs]$$//'`; \
	            if [ -e "$$FB.ads" ]; then \
	                echo "${DEINSTALL_INCL} ${INCLDIR}/$$FB.ads"; \
	                ${SUDO} ${DEINSTALL_INCL} ${DESTDIR}${INCLDIR}/$$FB.ads; \
		    fi; \
	            echo "${DEINSTALL_DATA} ${INCLDIR}/$$FB.ali"; \
	            ${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${INCLDIR}/$$FB.ali; \
                fi; \
	    done; \
	fi
	@if [ "${DATAFILES}" != "" ]; then \
	    for F in ${DATAFILES}; do \
	        echo "${DEINSTALL_DATA} ${DATADIR}/$$F"; \
	        ${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${DATADIR}/$$F; \
	    done; \
	fi
	@if [ "${DATAFILES_SRC}" != "" ]; then \
	    for F in ${DATAFILES_SRC}; do \
	        echo "${DEINSTALL_DATA} ${DATADIR}/$$F"; \
	        ${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${DATADIR}/$$F; \
	    done; \
	fi
	@if [ "${CONF}" != "" ]; then \
	    echo "+----------------"; \
	    echo "| To completely deinstall lib${LIB} you need to perform."; \
	    echo "| the following steps as root:"; \
	    echo "|"; \
	    for F in ${CONF}; do \
	        if [ -e "${DESTDIR}${SYSCONFDIR}/$$F" ]; then \
	            echo "| rm -f $$F"; \
	        fi; \
	    done; \
	    echo "|"; \
	    echo "| Do not do this if you plan on re-installing lib${LIB}"; \
	    echo "| at some future time."; \
	    echo "+----------------"; \
	fi
	@if [ "${CONFIGSCRIPTS}" != "" ]; then \
            for F in ${CONFIGSCRIPTS}; do \
                echo "${DEINSTALL_PROG} ${BINDIR}/$$F"; \
                ${SUDO} ${DEINSTALL_PROG} ${DESTDIR}${BINDIR}/$$F; \
            done; \
	fi
	@if [ "${PKGCONFIG}" != "" -a "${PCMODULES}" != "" ]; then \
	    for F in ${PCMODULES}; do \
	        echo "${DEINSTALL_DATA} ${PKGCONFIG_LIBDIR}/$$F"; \
	        ${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${PKGCONFIG_LIBDIR}/$$F; \
	    done; \
	fi

# Not a target:
../mk/build.proj.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

# Not a target:
variable.c:
#  Implicit rule search has been done.
#  Last modified 2020-02-11 13:08:45
#  File has been updated.
#  Successfully updated.

clean-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 66):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ clean); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

lib-tags:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 907):
	-@if [ "${CTAGS}" != "" ]; then \
	    if [ "${SRC}" != "" ]; then \
	        (cd ${SRC}; \
		 echo "${CTAGS} ${CTAGSFLAGS} -R"; \
	         ${CTAGS} ${CTAGSFLAGS} -R); \
	    else \
	        echo "${CTAGS} ${CTAGSFLAGS} -R"; \
	        ${CTAGS} ${CTAGSFLAGS} -R; \
	    fi; \
	fi

lint-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 372):
	@if [ "${HAVE_MANDOC}" != "yes" ]; then \
		echo "Cannot find mandoc (re-run ./configure?)"; \
		exit 1; \
	fi
	@if [ "${MAN1}" != "" ]; then for F in ${MAN1}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN2}" != "" ]; then for F in ${MAN2}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN3}" != "" ]; then for F in ${MAN3}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN4}" != "" ]; then for F in ${MAN4}; do ${MANDOC} -Tlint $$F; done; fi
 
	@if [ "${MAN5}" != "" ]; then for F in ${MAN5}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN6}" != "" ]; then for F in ${MAN6}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN7}" != "" ]; then for F in ${MAN7}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN8}" != "" ]; then for F in ${MAN8}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN9}" != "" ]; then for F in ${MAN9}; do ${MANDOC} -Tlint $$F; done; fi

# Not a target:
data_source.c:
#  Implicit rule search has been done.
#  Last modified 2019-12-22 19:51:35
#  File has been updated.
#  Successfully updated.

clean-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 82):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ clean); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

# Not a target:
vec.c:
#  Implicit rule search has been done.
#  Last modified 2019-08-24 19:08:53
#  File has been updated.
#  Successfully updated.

# Not a target:
user_posix.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-13 12:04:39
#  File has been updated.
#  Successfully updated.

clean-lib:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 494):
	@if [ "${LIB}" != "" -a "${SRCS}" != "" ]; then \
	    if [ "${USE_LIBTOOL}" = "Yes" ]; then \
	        _objs="${SHOBJS}"; \
	        if [ "$$_objs" = "" ]; then \
                    for F in ${SRCS}; do \
	    	        F=`echo $$F | sed 's/.ad[bs]$$/.lo/'`; \
	    	        F=`echo $$F | sed 's/.asm$$/.lo/'`; \
	    	        F=`echo $$F | sed 's/.[clym]$$/.lo/'`; \
	    	        F=`echo $$F | sed 's/.cc$$/.lo/'`; \
	    	        F=`echo $$F | sed 's/.cpp$$/.lo/'`; \
			_objs="$$_objs $$F"; \
	    	        F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.asm$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.cc$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.cpp$$/.o/'`; \
			_objs="$$_objs $$F"; \
                    done; \
		else \
		    if [ "${SHOBJS}" != "" ]; then \
		        for F in ${SHOBJS}; do \
	    	            F=`echo $$F | sed 's/.lo$$/.o/'`; \
			    _objs="$$_objs $$F"; \
                        done; \
		    fi; \
		fi; \
	    	echo "rm -f lib${LIB}.la $$_objs"; \
	    	rm -f lib${LIB}.la $$_objs; \
		if [ -e ".libs" ]; then \
		    echo "rm -fR .libs"; \
		    rm -fR .libs; \
		fi; \
	    else \
	        _objs="${OBJS}"; \
	        if [ "$$_objs" = "" ]; then \
                    for F in ${SRCS}; do \
			if echo $$F | grep -q '.ad[bs]$$'; then \
			    FB=`echo "$$F" | sed 's/.ad[bs]$$//'`; \
			    _objs="$$_objs $$FB.ali"; \
			fi; \
	    	        F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	    	    	F=`echo $$F | sed 's/.asm$$/.o/'`; \
	   	        F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.cc$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.cpp$$/.o/'`; \
			_objs="$$_objs $$F"; \
                    done; \
	    	fi; \
		if [ "$$_objs" != "" ]; then \
	    	    echo "rm -f $$_objs"; \
	    	    rm -f $$_objs; \
		fi; \
		case "${HOST}" in \
		*-darwin*) \
	   	    echo "rm -f lib${LIB}.a lib${LIB}.${LIB_CURRENT}.dylib lib${LIB}.dylib lib${LIB}.la"; \
	   	    rm -f lib${LIB}.a lib${LIB}.${LIB_CURRENT}.dylib \
		          lib${LIB}.dylib lib${LIB}.la; \
		    ;; \
		*-mingw*) \
	   	    echo "rm -f lib${LIB}.a lib${LIB}_dll.lib ${LIB}.dll lib${LIB}.la"; \
	   	    rm -f lib${LIB}.a lib${LIB}_dll.lib ${LIB}.dll lib${LIB}.la; \
		    ;; \
		*) \
		    echo "rm -f lib${LIB}.a lib${LIB}.so lib${LIB}.so.${LIB_CURRENT} lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE} lib${LIB}.la"; \
		    rm -f lib${LIB}.a lib${LIB}.so lib${LIB}.so.${LIB_CURRENT} \
		          lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE} \
			  lib${LIB}.la; \
		    ;; \
		esac; \
	    fi; \
	fi
	@if [ "${CLEANFILES}" != "" ]; then \
	    _cleanfiles=""; \
	    for F in ${CLEANFILES}; do \
	        if [ -e $$F ]; then _cleanfiles="$$_cleanfiles $$F"; fi; \
	    done; \
	    if [ "$$_cleanfiles" != "" ]; then \
	        echo "rm -f ${CLEANFILES}"; \
	        rm -f ${CLEANFILES}; \
	    fi; \
	fi
	@if [ "${SRCS_GENERATED}" != "" ]; then \
	    echo "rm -f ${SRCS_GENERATED}"; \
	    rm -f ${SRCS_GENERATED}; \
	fi
	@if [ "${HAVE_CC65}" = "yes" ]; then \
	    echo "rm -f ${LIB}.lib *.s"; \
	    rm -f ${LIB}.lib *.s; \
	fi

cpuinfo.o: cpuinfo.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'cpuinfo'
#  Last modified 2022-05-10 11:02:28.616864119
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

.adb.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 118):
	@_cflags="${CFLAGS}"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="$$_cflags ${PICFLAGS}"; fi; \
	echo "${ADA} ${ADAFLAGS} $$_cflags -c $<"; \
	${ADA} ${ADAFLAGS} $$_cflags -c $<

# Not a target:
vasprintf.c:
 
#  Implicit rule search has been done.
#  Last modified 2018-12-11 22:25:58
#  File has been updated.
#  Successfully updated.

includes:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 881):
	(cd ${TOP} && ${MAKE} install-includes)

# Not a target:
.adb:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

core.o: core.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'core'
#  Last modified 2022-05-10 11:02:28.572863866
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

all: all-subdir libag_core.a libag_core.so libag_core.la all-subdir
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.m:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

config.o: config.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'config'
#  Last modified 2022-05-10 11:02:28.640864258
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

proj-package:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.proj.mk', line 47):
	@if [ "${PROJECT}" = "" ]; then \
	    echo "cat Makefile | ${MKPROJFILES} > ${PREMAKEOUT}"; \
	    cat Makefile | \
	        env PROJTARGET="${PROJTARGET}" PROJOS="${PROJOS}" \
		PROJFLAVOR="" PROJINCLUDES="${TOP}/configure.lua" \
	        ${MKPROJFILES} > ${PREMAKEOUT}; \
	fi

# Not a target:
getopt.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-08 20:54:34
#  File has been updated.
#  Successfully updated.

byteswap.o: byteswap.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'byteswap'
 
#  Last modified 2022-05-10 11:02:28.488863382
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

.y:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 204):
	${YACC} ${YFLAGS} -b $@ $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.tab.c ${LIBS}"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.tab.c ${LIBS}
	@rm -f $@.tab.c

user_dummy.o: user_dummy.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'user_dummy'
#  Last modified 2022-05-10 11:02:28.744864858
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

.PHONY: install deinstall includes clean cleandir regress depend configure install-lib deinstall-lib clean-lib cleandir-lib configure-lib _lib_objs _lib_ltobjs lib-tags check-libtool none proj configure-proj all-subdir clean-subdir cleandir-subdir install-subdir deinstall-subdir configure-subdir depend-subdir regress-subdir all-subdir-ifexists clean-subdir-ifexists cleandir-subdir-ifexists install-subdir-ifexists deinstall-subdir-ifexists configure-subdir-ifexists depend-subdir-ifexists regress-subdir-ifexists proj-package-subdir proj-clean-subdir install deinstall clean cleandir regress depend lint install-man deinstall-man clean-man man manlinks all-manlinks lint-man
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
string.c:
#  Implicit rule search has been done.
#  Last modified 2019-08-11 16:44:44
#  File has been updated.
#  Successfully updated.

# Not a target:
.manlinks.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-17 21:34:38
#  File has been updated.
#  Successfully updated.

cleandir-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 237):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ cleandir); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

# Not a target:
timeout.c:
#  Implicit rule search has been done.
#  Last modified 2020-02-19 23:12:41
 
#  File has been updated.
#  Successfully updated.

manlinks: Makefile
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 349):
	echo > .manlinks.mk
	@if [ "${MANS}" != "       " ]; then \
		for F in ${MANS}; do \
			echo "cat $$F |manlinks.pl $$F >>.manlinks.mk"; \
			cat $$F |perl ${TOP}/mk/manlinks.pl $$F >>.manlinks.mk; \
		done; \
	fi

# Not a target:
event.c:
#  Implicit rule search has been done.
#  Last modified 2020-05-16 15:15:28
#  File has been updated.
#  Successfully updated.

cleandir-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 253):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ cleandir); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

user_getenv.o: user_getenv.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'user_getenv'
#  Last modified 2022-05-10 11:02:28.720864719
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

string.o: string.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'string'
#  Last modified 2022-05-10 11:02:28.744864858
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

object.o: object.c
 
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'object'
#  Last modified 2022-05-10 11:02:28.736864812
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

install-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 62):
	@if [ "${NOMAN}" != "yes" ]; then \
		if [ "${MANS}" != "       " ]; then \
			if [ "${DESTDIR}" != "" ]; then \
				echo "# Installing under DESTDIR=${DESTDIR}:"; \
				if [ ! -e "${DESTDIR}" ]; then \
					echo "${INSTALL_DESTDIR} ${DESTDIR}"; \
					${SUDO} ${INSTALL_DESTDIR} ${DESTDIR}; \
				fi; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man1" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man1"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man1; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man2" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man2"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man2; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man3" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man3"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man3; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man4" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man4"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man4; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man5" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man5"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man5; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man6" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man6"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man6; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man7" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man7"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man7; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man8" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man8"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man8; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man9" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man9"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man9; \
			fi; \
		fi; \
		if [ "${MAN1}" != "" ]; then \
			for F in ${MAN1}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man1"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man1; \
			done; \
		fi; \
		if [ "${MAN2}" != "" ]; then \
			for F in ${MAN2}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man2"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man2; \
			done; \
		fi; \
		if [ "${MAN3}" != "" ]; then \
			for F in ${MAN3}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man3"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man3; \
			done; \
		fi; \
		if [ "${MAN4}" != "" ]; then \
			for F in ${MAN4}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man4"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man4; \
			done; \
		fi; \
		if [ "${MAN5}" != "" ]; then \
			for F in ${MAN5}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man5"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man5; \
			done; \
		fi; \
		if [ "${MAN6}" != "" ]; then \
			for F in ${MAN6}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man6"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man6; \
			done; \
		fi; \
		if [ "${MAN7}" != "" ]; then \
			for F in ${MAN7}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man7"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man7; \
			done; \
		fi; \
		if [ "${MAN8}" != "" ]; then \
			for F in ${MAN8}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man8"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man8; \
			done; \
		fi; \
		if [ "${MAN9}" != "" ]; then \
			for F in ${MAN9}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man9"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man9; \
			done; \
		fi; \
		if [ "${NOMANLINKS}" != "yes" -a "${MANLINKS}" != "" ]; then \
			${ECHO_N} "# Installing manlinks ( "; \
			(cd ${DESTDIR}${MANDIR} && \
			 for L in ${MANLINKS}; do \
				MPG=`echo $$L | sed 's/:.*//'`; \
				MLNK=`echo $$L | sed 's/.*://'`; \
				MS=`echo $$L | sed 's/.*\.//'`; \
				${ECHO_N} "$$MLNK "; \
				${SUDO} ${LN} -fs $$MPG man$$MS/$$MLNK; \
			 done); \
			 echo " )."; \
		fi; \
	fi

# Not a target:
text.c:
#  Implicit rule search has been done.
#  Last modified 2019-07-27 21:33:59
#  File has been updated.
#  Successfully updated.

cleandir-lib:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 585):
	rm -f ${LIBTOOL} ${LIBTOOL_COOKIE} ${LTCONFIG_LOG} config.log config.status tags
	@if [ -e "./config/prefix.h" ]; then \
	    echo "rm -fr ./config"; \
	    rm -fr ./config; \
	fi
	@if [ -e "Makefile.config" ]; then \
	    echo "echo >Makefile.config"; \
	    echo >Makefile.config; \
	fi
	@if [ "${CONFIGSCRIPTS}" != "" ]; then \
	    echo "rm -f ${CONFIGSCRIPTS}"; \
	    rm -f ${CONFIGSCRIPTS}; \
	fi
	@if [ "${PCMODULES}" != "" ]; then \
	    echo "rm -f ${PCMODULES}"; \
	    rm -f ${PCMODULES}; \
	fi
	@if [ "${CLEANDIRFILES}" != "" ]; then \
	    echo "rm -f ${CLEANDIRFILES}"; \
	    rm -f ${CLEANDIRFILES}; \
	fi
	@if [ -e ".depend" ]; then \
	    echo "echo >.depend"; \
	    echo >.depend; \
	fi

.m.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 163):
	@_objcflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _objcflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _objcflags="$$_objcflags -pg -DPROF"; fi; \
	echo "${OBJC} ${CFLAGS} ${OBJCFLAGS} $$_objcflags ${CPPFLAGS} -o $@ -c $<"; \
	${OBJC} ${CFLAGS} ${OBJCFLAGS} $$_objcflags ${CPPFLAGS} -o $@ -c $<

time_posix.o: time_posix.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'time_posix'
 
#  Last modified 2022-05-10 11:02:28.74886488
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
.cc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
dso.c:
#  Implicit rule search has been done.
#  Last modified 2020-03-14 16:37:20
#  File has been updated.
#  Successfully updated.

.cc.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 174):
	@_cxxflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cxxflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cxxflags="$$_cxxflags -pg -DPROF"; fi; \
	echo "${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<"; \
	${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<

# Not a target:
exec.c:
#  Implicit rule search has been done.
#  Last modified 2019-08-17 23:31:23
#  File has been updated.
#  Successfully updated.

load_version.o: load_version.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'load_version'
#  Last modified 2022-05-10 11:02:28.592863982
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
.depend:
#  Implicit rule search has been done.
#  Last modified 2022-05-10 11:01:40.040584157
#  File has been updated.
#  Successfully updated.

.SUFFIXES: .ads .adb .asm .c .cc .cpp .l .lo .m .o .y
#  Implicit rule search has not been done.
 
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2020-03-14 11:20:09
#  File has been updated.
#  Successfully updated.

# Not a target:
load_integral.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-08 16:56:46
#  File has been updated.
#  Successfully updated.

regress-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 271):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ regress); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

regress-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 287):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ regress); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 340):
	@if [ "${MAN}" != "" ]; then \
		echo "${MANDOC} -Tascii ${MAN} | ${PAGER}"; \
		${MANDOC} -Tascii ${MAN} | ${PAGER}; \
	else \
		echo "Usage: ${MAKE} man MAN=(manpage)"; \
		exit 1; \
	fi

# Not a target:
class.c:
#  Implicit rule search has been done.
#  Last modified 2020-05-10 15:26:56
#  File has been updated.
#  Successfully updated.

# Not a target:
 
../mk/build.subdir.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

configure: configure-lib configure-proj
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

install-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 100):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ install); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

.c.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 158):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CC} ${LIBTOOLFLAGS} ${CFLAGS} ${CPPFLAGS} -o $@ ${CC_COMPILE} $<

# Not a target:
user.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-15 15:23:39
#  File has been updated.
#  Successfully updated.

install-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 116):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ install); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

error.o: error.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'error'
 
#  Last modified 2022-05-10 11:02:28.628864189
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

install-lib: check-libtool
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 612):
	@if [ "${DESTDIR}" != "" ]; then \
	    echo "# Installing under DESTDIR=${DESTDIR}:"; \
	    if [ ! -e "${DESTDIR}" ]; then \
	        echo "${INSTALL_DESTDIR} ${DESTDIR}"; \
	        ${SUDO} ${INSTALL_DESTDIR} ${DESTDIR}; \
	    fi; \
	fi
	@if [ "${INCL}" != "" ]; then \
	    if [ ! -d "${DESTDIR}${INCLDIR}" ]; then \
                echo "${INSTALL_INCL_DIR} ${INCLDIR}"; \
                ${SUDO} ${INSTALL_INCL_DIR} ${DESTDIR}${INCLDIR}; \
	    fi; \
	    for F in ${INCL}; do \
	        echo "${INSTALL_INCL} $$F ${INCLDIR}"; \
	        ${SUDO} ${INSTALL_INCL} $$F ${DESTDIR}${INCLDIR}; \
	    done; \
	fi
	@if [ "${LIB}" != "" -a "${LIB_INSTALL}" = "Yes" ]; then \
	    if [ ! -d "${DESTDIR}${LIBDIR}" ]; then \
                echo "${INSTALL_LIB_DIR} ${LIBDIR}"; \
                ${SUDO} ${INSTALL_LIB_DIR} ${DESTDIR}${LIBDIR}; \
	    fi; \
	    if [ ! -d "${DESTDIR}${INCLDIR}" ]; then \
                echo "${INSTALL_INCL_DIR} ${INCLDIR}"; \
                ${SUDO} ${INSTALL_INCL_DIR} ${DESTDIR}${INCLDIR}; \
	    fi; \
	    if [ "${USE_LIBTOOL}" = "Yes" ]; then \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --mode=install ${INSTALL_LIB} lib${LIB}.la ${LIBDIR}"; \
	        ${SUDO} ${LIBTOOL} ${LIBTOOLOPTS} --mode=install ${INSTALL_LIB} lib${LIB}.la ${DESTDIR}${LIBDIR}; \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --finish ${LIBDIR}"; \
	        ${SUDO} ${LIBTOOL} ${LIBTOOLOPTS} --finish ${DESTDIR}${LIBDIR}; \
	    else \
	    	if [ "${LIB_SHARED}" = "Yes" ]; then \
	            sed 's/installed=no/installed=yes/' lib${LIB}.la > lib${LIB}.la.$$$$; \
		    case "${HOST}" in \
		    *-darwin*) \
		        _libout="lib${LIB}.${LIB_CURRENT}.dylib"; \
	    	        echo "${INSTALL_LIB} $$_libout ${LIBDIR}"; \
	                ${SUDO} ${INSTALL_LIB} $$_libout ${DESTDIR}${LIBDIR}; \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.dylib)"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.dylib); \
		    	;; \
		    *-mingw*) \
		        _libout="${LIB}.dll"; \
	    	        echo "${INSTALL_PROG} $$_libout ${BINDIR}"; \
	                ${SUDO} ${INSTALL_PROG} $$_libout ${DESTDIR}${BINDIR}; \
	    	        echo "${INSTALL_LIB} lib${LIB}_dll.lib ${LIBDIR}"; \
	                ${SUDO} ${INSTALL_LIB} lib${LIB}_dll.lib ${DESTDIR}${LIBDIR}; \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.so.${LIB_CURRENT})"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.so.${LIB_CURRENT}); \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.so)"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.so); \
		    	;; \
		    *) \
	                _libout="lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE}"; \
	    	        echo "${INSTALL_LIB} $$_libout ${LIBDIR}"; \
	                ${SUDO} ${INSTALL_LIB} $$_libout ${DESTDIR}${LIBDIR}; \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.so.${LIB_CURRENT})"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.so.${LIB_CURRENT}); \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.so)"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.so); \
			;; \
		    esac; \
	    	    echo "${INSTALL_LIB} lib${LIB}.la ${LIBDIR}"; \
	            ${SUDO} ${INSTALL_LIB} lib${LIB}.la.$$$$ ${DESTDIR}${LIBDIR}/lib${LIB}.la; \
		    rm -f lib${LIB}.la.$$$$; \
		fi; \
	        if [ "${HAVE_CC65}" = "yes" ]; then \
	            echo "${INSTALL_LIB} ${LIB}.lib ${LIBDIR}"; \
	            ${SUDO} ${INSTALL_LIB} ${LIB}.lib ${DESTDIR}${LIBDIR}; \
	        else \
	            echo "${INSTALL_LIB} lib${LIB}.a ${LIBDIR}"; \
	            ${SUDO} ${INSTALL_LIB} lib${LIB}.a ${DESTDIR}${LIBDIR}; \
	        fi; \
	    fi; \
	    for F in ${SRCS}; do \
	        if echo $$F | grep -q '.ad[bs]$$'; then \
		    FB=`echo "$$F" | sed 's/.ad[bs]$$//'`; \
	            if [ -e "$$FB.ads" ]; then \
			if [ "${ADAPREPFILE}" != "" ]; then \
				echo "${ADAPREP} ${ADAPREPFLAGS} $$FB.ads ${INCLDIR}/$$FB.ads ${ADAPREPFILE}"; \
				${SUDO} ${ADAPREP} ${ADAPREPFLAGS} $$FB.ads ${INCLDIR}/$$FB.ads ${ADAPREPFILE}; \
			else \
	                	echo "${INSTALL_INCL} $$FB.ads ${INCLDIR}"; \
	                	${SUDO} ${INSTALL_INCL} $$FB.ads ${DESTDIR}${INCLDIR}; \
			fi; \
		    fi; \
	            echo "${INSTALL_DATA} $$FB.ali ${INCLDIR}"; \
	            ${SUDO} ${INSTALL_DATA} $$FB.ali ${DESTDIR}${INCLDIR}; \
                fi; \
	    done; \
	fi
	@if [ "${DATAFILES}" != "" ]; then \
            if [ ! -d "${DESTDIR}${DATADIR}" ]; then \
                echo "${INSTALL_DATA_DIR} ${DATADIR}"; \
                ${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${DATADIR}; \
            fi; \
            for F in ${DATAFILES}; do \
                echo "${INSTALL_DATA} $$F ${DATADIR}"; \
                ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${DATADIR}; \
            done; \
	fi
	@if [ "${DATAFILES_SRC}" != "" ]; then \
            if [ ! -d "${DESTDIR}${DATADIR}" ]; then \
                echo "${INSTALL_DATA_DIR} ${DATADIR}"; \
                ${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${DATADIR}; \
            fi; \
	    if [ "${SRC}" != "" ]; then \
                for F in ${DATAFILES_SRC}; do \
                    echo "${INSTALL_DATA} $$F ${DATADIR}"; \
                    ${SUDO} ${INSTALL_DATA} ${SRC}/${BUILDREL}/$$F \
		    ${DESTDIR}${DATADIR}; \
                done; \
	    else \
                for F in ${DATAFILES_SRC}; do \
                    echo "${INSTALL_DATA} $$F ${DATADIR}"; \
                    ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${DATADIR}; \
                done; \
	    fi; \
	fi
	@if [ "${CONF}" != "" ]; then \
            if [ ! -d "${DESTDIR}${SYSCONFDIR}" ]; then \
                echo "${INSTALL_DATA_DIR} ${SYSCONFDIR}"; \
                ${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${SYSCONFDIR}; \
            fi; \
	    if [ "${CONF_OVERWRITE}" != "Yes" ]; then \
	        echo "+----------------"; \
	        echo "| The following configuration files exist and "; \
	        echo "| will not be overwritten:"; \
	        echo "|"; \
	        for F in ${CONF}; do \
	            if [ -e "${DESTDIR}${SYSCONFDIR}/$$F" ]; then \
	                echo "| - $$F"; \
	            else \
	                ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${SYSCONFDIR}; \
	            fi; \
	        done; \
	        echo "+----------------"; \
	    else \
	        for F in ${CONF}; do \
	            echo "${INSTALL_DATA} $$F ${SYSCONFDIR}"; \
	            ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${SYSCONFDIR}; \
	        done; \
	    fi; \
	fi
	@if [ "${CONFIGSCRIPTS}" != "" ]; then \
	    if [ ! -e "${DESTDIR}${BINDIR}" ]; then \
	        echo "${INSTALL_PROG_DIR} ${BINDIR}"; \
	        ${SUDO} ${INSTALL_PROG_DIR} ${DESTDIR}${BINDIR}; \
	    fi; \
            for F in ${CONFIGSCRIPTS}; do \
                echo "${INSTALL_PROG} $$F ${BINDIR}"; \
                ${SUDO} ${INSTALL_PROG} $$F ${DESTDIR}${BINDIR}; \
            done; \
	fi
	@if [ "${PKGCONFIG}" != "" -a "${PCMODULES}" != "" ]; then \
	    if [ ! -e "${DESTDIR}${PKGCONFIG_LIBDIR}" ]; then \
	        echo "${INSTALL_DATA_DIR} ${PKGCONFIG_LIBDIR}"; \
	        ${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${PKGCONFIG_LIBDIR}; \
	    fi; \
	    for F in ${PCMODULES}; do \
	        echo "${INSTALL_DATA} $$F ${PKGCONFIG_LIBDIR}"; \
	        ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${PKGCONFIG_LIBDIR}; \
	    done; \
	fi
	@case "${HOST}" in \
	    *-linux*) \
	        if [ "${EUID}" = "0" -o "${USER}" = "root" ]; then \
	            if [ -x "/sbin/ldconfig" ]; then \
	                echo "/sbin/ldconfig"; \
	                /sbin/ldconfig; \
		    fi; \
		else \
		    echo "*"; \
		    echo "* You may need to run /sbin/ldconfig."; \
		    echo "*"; \
		fi; \
		;; \
	esac

# Not a target:
load_string.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-08 16:57:10
#  File has been updated.
#  Successfully updated.

# Not a target:
time_dummy.c:
#  Implicit rule search has been done.
#  Last modified 2018-11-16 16:56:07
#  File has been updated.
#  Successfully updated.

depend-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
 
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 202):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ depend); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

# Not a target:
.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
core.c:
#  Implicit rule search has been done.
#  Last modified 2020-04-09 10:38:52
#  File has been updated.
#  Successfully updated.

all-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 32):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

# Not a target:
.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
byteswap.c:
#  Implicit rule search has been done.
#  Last modified 2018-12-09 15:45:19
#  File has been updated.
#  Successfully updated.

proj-package-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 305):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ proj-package); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

.c.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

_lib_ltobjs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 302):
	@if [ "${LIB}" != "" -a "${SHOBJS}" = "" -a "${SRCS}" != "" \
	      -a "${USE_LIBTOOL}" = "Yes" ]; then \
	    _ltobjs=""; \
	    for F in ${SRCS}; do \
	        F=`echo $$F | sed 's/.ad[bs]$$/.lo/'`; \
	        F=`echo $$F | sed 's/.asm$$/.lo/'`; \
	        F=`echo $$F | sed 's/.[clym]$$/.lo/'`; \
	        F=`echo $$F | sed 's/.cc$$/.lo/'`; \
	        F=`echo $$F | sed 's/.cpp$$/.lo/'`; \
		_ltobjs="$$_ltobjs $$F"; \
	    done; \
	    ${MAKE} $$_ltobjs; \
	    if [ $$? != 0 ]; then \
	        echo "${MAKE}: failure"; \
	        exit 1; \
	    fi; \
	fi

all-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 48):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
 
	fi)

file.o: file.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'file'
#  Last modified 2022-05-10 11:02:28.556863774
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

.ads.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 124):
	@_cflags="${CFLAGS}"; FB=`echo "$<" |sed 's/.ads$$//'`; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="$$_cflags ${PICFLAGS}"; fi; \
	if [ -e "$$FB.adb" ]; then \
	    echo "${ADA} ${ADAFLAGS} $$_cflags -c $$FB.adb"; \
	    ${ADA} ${ADAFLAGS} $$_cflags -c $$FB.adb; \
	else \
	    echo "${ADA} ${ADAFLAGS} $$_cflags -c $<"; \
	    ${ADA} ${ADAFLAGS} $$_cflags -c $<; \
	fi

db.o: db.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'db'
#  Last modified 2022-05-10 11:02:28.556863774
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
../core/Makefile.inc:
#  Implicit rule search has been done.
#  Last modified 2018-11-28 13:51:59
#  File has been updated.
#  Successfully updated.

time.o: time.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'time'
#  Last modified 2022-05-10 11:02:28.600864027
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

dir.o: dir.c
#  Command line target.
#  Implicit rule search has been done.
 
#  Implicit/static pattern stem: 'dir'
#  Last modified 2022-05-10 11:02:28.560863797
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
user_dummy.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-13 12:02:28
#  File has been updated.
#  Successfully updated.

# Not a target:
user_getenv.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-13 12:02:48
#  File has been updated.
#  Successfully updated.

none:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
object.c:
#  Implicit rule search has been done.
#  Last modified 2020-05-10 21:17:38
#  File has been updated.
#  Successfully updated.

depend: check-libtool lib-tags depend-subdir depend-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 223):
	@echo > .depend
	@_srcs="${SRCS}"; \
	if [ "$$_srcs" != "" -a "$$_srcs" != "none" ]; then \
	    _srcs_ada=""; \
	    _srcs_c=""; \
            for F in $$_srcs; do \
	        if echo $$F | grep -q '.ad[bs]$$'; then \
		    FB=`echo "$$F" | sed 's/.ad[bs]$$//'`; \
		    if [ ! -e "$$FB.o" ]; then \
		        echo "${MAKE} $$FB.o"; \
		        ${MAKE} $$FB.o; \
			if [ $$? != 0 ]; then \
			    echo "${MAKE} $$FB.o failed"; \
			    exit 1; \
			fi; \
	            fi; \
		    _srcs_ada="$$_srcs_ada $$F"; \
	        else \
		    _srcs_c="$$_srcs_c $$F"; \
		fi; \
	    done; \
	    if [ "${BUILD}" != "" ]; then \
	        export _mkdep_cflags="${CFLAGS} -I${BUILD}"; \
	    else \
	        export _mkdep_cflags="${CFLAGS}"; \
	    fi; \
	    if [ "$$_srcs_c" != "" ]; then \
	        echo "${MKDEP} $$_mkdep_cflags $$_srcs_c"; \
	        env CC=${CC} ${MKDEP} $$_mkdep_cflags $$_srcs_c; \
	        if [ "${USE_LIBTOOL}" = "Yes" ]; then \
	            echo "${MKDEP} -a -l $$_mkdep_cflags $$_srcs_c"; \
	            env CC=${CC} ${MKDEP} -a -l $$_mkdep_cflags $$_srcs_c; \
	        fi; \
	    fi; \
	    if [ "$$_srcs_ada" != "" ]; then \
	        echo "${MKDEP_ADA} ${MKDEP_ADAFLAGS} ${CFLAGS} $$_srcs_ada >>.depend"; \
	        env ADA=${ADA} ${MKDEP_ADA} ${MKDEP_ADAFLAGS} ${CFLAGS} $$_srcs_ada 1>.ada_depend 2>.ada_errors; \
		if [ $$? != 0 ]; then \
		    echo "${MKDEP_ADA} failed"; \
		    cat .ada_errors; rm -f .ada_errors; \
		    exit 1; \
		fi; \
		if grep -q "must be recompiled" .ada_errors; then \
		    echo "${MKDEP_ADA} failed:"; \
		    cat .ada_errors; rm -f .ada_errors; \
		    exit 1; \
		fi; \
		cat .ada_depend >> .depend; \
		rm -f .ada_depend .ada_errors; \
	    fi; \
	fi

proj:
 
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.proj.mk', line 60):
	@if [ ! -d "${PROJDIR}" ]; then \
		echo "mkdir -p ${PROJDIR}"; \
		mkdir -p ${PROJDIR}; \
	fi
	@for TGT in ${PROJFILES}; do \
		_tgtos=`echo $$TGT |awk -F: '{print $$1}' `; \
		_tgtproj=`echo $$TGT |awk -F: '{print $$2}' `; \
		_tgtflav=`echo $$TGT |awk -F: '{print $$3}' `; \
		_tgtopts=`echo $$TGT |awk -F: '{print $$4}'|sed 's/,/ /g'`; \
		echo "*"; \
		echo "* Target: $$_tgtos ($$_tgtproj)"; \
		echo "* Target flavor: $$_tgtflav"; \
		echo "* Target options: $$_tgtopts"; \
		echo "*"; \
		\
		echo "mkconfigure --emul-env=$$_tgtproj --emul-os=$$_tgtos \
		    --output-lua=${TOP}/configure.lua > configure.tmp"; \
		cat configure.in | \
		    mkconfigure --emul-env=$$_tgtproj --emul-os=$$_tgtos \
		    --output-lua=${TOP}/configure.lua > configure.tmp; \
		if [ $$? != 0 ]; then \
			echo "mkconfigure failed"; \
			rm -fR configure.tmp ${TOP}/configure.lua; \
			exit 1; \
		fi; \
		echo "./configure.tmp $$_tgtopts --with-proj-generation --emul-os=$$_tgtos"; \
		${SH} ./configure.tmp $$_tgtopts --with-proj-generation --emul-os=$$_tgtos; \
		if [ $$? != 0 ]; then \
			echo "configure failed"; \
			echo > Makefile.config; \
			exit 1; \
		fi; \
		echo "${MAKE} proj-package-subdir"; \
		env PROJTARGET="$$_tgtproj" PROJOS="$$_tgtos" \
		    ${MAKE} proj-package-subdir; \
		\
		if [ "${PROJNOCLEAN}" = "no" ]; then \
			echo "rm -f configure.tmp config.log config.status"; \
			rm -f configure.tmp config.log config.status; \
		fi; \
		\
	        echo "cat Makefile | ${MKPROJFILES} > ${PREMAKEOUT}"; \
	        cat Makefile | \
		    env PROJFLAVOR="$$_tgtflav" \
		    PROJOS="$$_tgtos" \
		    PROJINCLUDES="${TOP}/configure.lua" \
		    ${MKPROJFILES} > ${PREMAKEOUT}; \
	        perl ${TOP}/mk/cmpfiles.pl; \
		_premakeos="$$_tgtos"; \
		case "$$_tgtos" in \
		windows-*) \
		    _premakeos="windows"; \
		    ;; \
		esac; \
	        echo "${PREMAKE} ${PREMAKEFLAGS} --file ${PREMAKEOUT} \
		    --os $$_premakeos --target $$_tgtproj"; \
	        ${PREMAKE} ${PREMAKEFLAGS} --file ${PREMAKEOUT} \
		    --os $$_premakeos --target $$_tgtproj; \
		if [ $$? != 0 ]; then \
			echo "premake failed"; \
			exit 1; \
		fi; \
	        perl ${TOP}/mk/cmpfiles.pl added > .projfiles.out; \
		echo "* Generated files: "; \
		cat .projfiles.out; \
		cp -f .projfiles.out ${PROJFILELIST}; \
	        rm .cmpfiles.out; \
		if [ "${PROJFILESEXTRA}" != "" ]; then \
	            for EXTRA in ${PROJFILESEXTRA}; do \
		        echo "+ $$EXTRA: "; \
		        echo "$$EXTRA" >> ${PROJFILELIST}; \
		    done; \
		fi; \
		if [ -e "${PROJCONFIGDIR}" ]; then \
			echo "+ ${PROJCONFIGDIR}"; \
	        	echo "${PROJCONFIGDIR}" >> ${PROJFILELIST}; \
		fi; \
		echo "rm -f ${PROJDIR}/$$_tgtproj-$$_tgtos$$_tgtflav.zip"; \
		rm -f "${PROJDIR}/$$_tgtproj-$$_tgtos$$_tgtflav.zip"; \
		echo "* Creating $$_tgtproj-$$_tgtos$$_tgtflav.zip";\
		cat ${PROJFILELIST} | ${ZIP} ${ZIPFLAGS} \
		    ${PROJDIR}/$$_tgtproj-$$_tgtos$$_tgtflav.zip -@;\
		if [ "${PROJNOCLEAN}" = "no" ]; then \
			echo "cat .projfiles.out | perl ${TOP}/mk/cleanfiles.pl"; \
			cat .projfiles.out | perl ${TOP}/mk/cleanfiles.pl; \
			echo "rm -fR ${PROJCONFIGDIR} ${PROJFILELIST}"; \
			rm -fR ${PROJCONFIGDIR} ${PROJFILELIST}; \
			echo "rm -f .projfiles.out ${TOP}/configure.lua"; \
			rm -f .projfiles.out ${TOP}/configure.lua; \
		fi; \
	done
	@echo "* Done"

vsnprintf.o: vsnprintf.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'vsnprintf'
#  Last modified 2022-05-10 11:02:28.692864558
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

../mk/libtool/ltmain.sh:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

tbl.o: tbl.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'tbl'
#  Last modified 2022-05-10 11:02:28.612864097
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

.cpp.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 180):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CXX} ${LIBTOOLFLAGS} ${CXXFLAGS} ${CPPFLAGS} -o $@ -c $<

threads.o: threads.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'threads'
 
#  Last modified 2022-05-10 11:02:28.740864834
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
time_posix.c:
#  Implicit rule search has been done.
#  Last modified 2018-11-28 22:07:24
#  File has been updated.
#  Successfully updated.

load_string.o: load_string.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'load_string'
#  Last modified 2022-05-10 11:02:28.608864073
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

vec.o: vec.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'vec'
#  Last modified 2022-05-10 11:02:28.712864673
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
load_version.c:
#  Implicit rule search has been done.
#  Last modified 2019-10-05 21:58:26
#  File has been updated.
#  Successfully updated.

../mk/libtool/aclocal.m4:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

deinstall: deinstall-lib deinstall-subdir deinstall-man deinstall-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
 
#  File has not been updated.

vasprintf.o: vasprintf.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'vasprintf'
#  Last modified 2022-05-10 11:02:28.704864627
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

.y.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 212):
	${YACC} ${YFLAGS} -b $@ $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.tab.c"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.tab.c
	@mv -f $@.tab.o $@
	@rm -f $@.tab.c

time_dummy.o: time_dummy.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'time_dummy'
#  Last modified 2022-05-10 11:02:28.656864351
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

time_gettimeofday.o: time_gettimeofday.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'time_gettimeofday'
#  Last modified 2022-05-10 11:02:28.744864858
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
../Makefile.config:
#  Implicit rule search has been done.
 
#  Last modified 2022-05-10 11:01:57.548685045
#  File has been updated.
#  Successfully updated.

time_renderer.o: time_renderer.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'time_renderer'
#  Last modified 2022-05-10 11:02:28.74886488
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

../mk/libtool/configure:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

libag_core.a: _lib_objs
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 322):
	@if [ "${LIB}" != "" -a "${USE_LIBTOOL}" = "No" -a \
	      "${SRCS}" != "" -a "${.TARGETS}" != "install" ]; then \
	    _objs="${OBJS}"; \
	    if [ "$$_objs" = "" ]; then \
	        for F in ${SRCS}; do \
	    	    F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.asm$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.cc$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.cpp$$/.o/'`; \
	    	    _objs="$$_objs $$F"; \
                done; \
	    fi; \
	    if [ "${HAVE_CC65}" = "yes" ]; then \
	        echo "ar65 a ${LIB}.lib $$_objs"; \
	        ar65 a ${LIB}.lib $$_objs; \
		echo "cp ${LIB}.lib lib${LIB}.a"; \
		cp ${LIB}.lib lib${LIB}.a; \
	    else \
	        echo "${AR} -cru lib${LIB}.a $$_objs"; \
	        ${AR} -cru lib${LIB}.a $$_objs; \
	        echo "${RANLIB} lib${LIB}.a"; \
	        (${RANLIB} lib${LIB}.a || exit 0); \
	    fi; \
	fi

.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 174):
	@_cxxflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cxxflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cxxflags="$$_cxxflags -pg -DPROF"; fi; \
	echo "${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<"; \
	${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<

# Not a target:
.cpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

variable.o: variable.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'variable'
#  Last modified 2022-05-10 11:02:28.824865319
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

clean: clean-lib clean-subdir clean-man clean-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
 
#  File does not exist.
#  File has not been updated.

.m.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 169):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${OBJC} ${LIBTOOLFLAGS} ${CFLAGS} ${OBJCFLAGS} ${CPPFLAGS} -o $@ -c $<

configure-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 168):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ configure); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

data_source.o: data_source.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'data_source'
#  Last modified 2022-05-10 11:02:28.664864397
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
../mk/build.common.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

configure-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 184):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ configure); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

user_posix.o: user_posix.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'user_posix'
#  Last modified 2022-05-10 11:02:28.740864834
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

 
# Not a target:
error.c:
#  Implicit rule search has been done.
#  Last modified 2020-02-24 13:13:21
#  File has been updated.
#  Successfully updated.

../mk/libtool/config.guess:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

configure-lib:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 921):
	@if [ "${LIB}" != "" ]; then \
		if [ -e "configure.in" ]; then \
			echo "cat configure.in | mkconfigure > configure"; \
			cat configure.in | mkconfigure > configure; \
			if [ ! -e configure ]; then \
				echo "mkconfigure (BSDBuild) failed."; \
				exit 1; \
			fi; \
			if [ ! -x configure ]; then \
				echo "chmod 755 configure"; \
				chmod 755 configure; \
			fi; \
		fi; \
	fi

# Not a target:
../mk/build.man.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

.l.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 193):
	${LEX} ${LFLAGS} -o$@.yy.c $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.yy.c"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.yy.c
	@mv -f $@.yy.o $@
	@rm -f $@.yy.c

getopt.o: getopt.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'getopt'
#  Last modified 2022-05-10 11:02:28.496863428
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
 
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

libag_core.la: check-libtool _lib_ltobjs
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 457):
	@if [ "${LIB}" != "" -a "${USE_LIBTOOL}" = "Yes" -a \
	      "${SRCS}" != "" -a "${.TARGETS}" != "install" ]; then \
	    _ltobjs="${SHOBJS}"; \
	    _moduleopts=""; \
	    if [ "$$_ltobjs" = "" ]; then \
	        for F in ${SRCS}; do \
	    	    F=`echo $$F | sed 's/.ad[bs]$$/.lo/'`; \
	    	    F=`echo $$F | sed 's/.asm$$/.lo/'`; \
	    	    F=`echo $$F | sed 's/.[clym]$$/.lo/'`; \
	    	    F=`echo $$F | sed 's/.cc$$/.lo/'`; \
	    	    F=`echo $$F | sed 's/.cpp$$/.lo/'`; \
	    	    _ltobjs="$$_ltobjs $$F"; \
                done; \
	    fi; \
	    if [ "${LIB_MODULE}" = "Yes" ]; then \
	        _moduleopts="-module";  \
	    fi; \
	    if [ "${LIB_SHARED}" = "Yes" ]; then \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --mode=link ${CC} -o lib${LIB}.la ${LIBTOOLOPTS_SHARED} -rpath ${PREFIX}/lib $$_moduleopts -version-info ${LIB_CURRENT}:${LIB_REVISION}:${LIB_AGE} ${LDFLAGS} $$_ltobjs ${LIBS}"; \
	        ${LIBTOOL} ${LIBTOOLOPTS} --mode=link \
		    ${CC} -o lib${LIB}.la ${LIBTOOLOPTS_SHARED} \
		    -rpath ${PREFIX}/lib $$_moduleopts \
		    -version-info ${LIB_CURRENT}:${LIB_REVISION}:${LIB_AGE} \
		    ${LDFLAGS} $$_ltobjs ${LIBS}; \
	    else \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --mode=link ${CC} -o lib${LIB}.la -static ${LIBTOOLOPTS_STATIC} ${LDFLAGS} $$_ltobjs ${LIBS}"; \
	        ${LIBTOOL} ${LIBTOOLOPTS} --mode=link \
		    ${CC} -o lib${LIB}.la -static ${LIBTOOLOPTS_STATIC} \
		    ${LDFLAGS} $$_ltobjs ${LIBS}; \
	    fi; \
	    if [ "${LIB_BUNDLE}" != "" ]; then \
	        echo "perl ${TOP}/mk/gen-bundle.pl lib ${LIB_BUNDLE}"; \
	        perl ${TOP}/mk/gen-bundle.pl lib ${LIB_BUNDLE}; \
	    fi; \
	fi

_lib_objs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 277):
	@if [ "${LIB}" != "" -a "${OBJS}" = "" -a "${SRCS}" != "" \
	      -a "${USE_LIBTOOL}" = "No" ]; then \
	    _objs=""; \
	    for F in ${SRCS}; do \
	        F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	        F=`echo $$F | sed 's/.asm$$/.o/'`; \
	        F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	        F=`echo $$F | sed 's/.cc$$/.o/'`; \
	        F=`echo $$F | sed 's/.cpp$$/.o/'`; \
		_objs="$$_objs $$F"; \
            done; \
	    echo "${MAKE} $$_objs"; \
	    ${MAKE} $$_objs; \
	    if [ $$? != 0 ]; then \
	        echo "${MAKE}: failure"; \
	        exit 1; \
	    fi; \
	fi
	@if [ "${WINRES}" != "" -a "${WINDRES}" != "" ]; then \
	    echo "${WINDRES} -o ${WINRES}.o ${WINRES}"; \
	    ${WINDRES} -o ${WINRES}.o ${WINRES}; \
	fi

timeout.o: timeout.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'timeout'
#  Last modified 2022-05-10 11:02:28.616864119
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

cleandir: clean-lib clean-subdir cleandir-lib cleandir-subdir clean-man clean-subdir cleandir-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 

../mk/libtool/config.sub:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

proj-clean-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 321):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ proj-clean); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

configure-proj:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.proj.mk', line 154):
	@if [ "${PROG}" = "" -a "${LIB}" = "" ]; then \
		if [ -e "configure.in" ]; then \
			echo "cat configure.in | mkconfigure > configure"; \
			cat configure.in | mkconfigure > configure; \
			if [ ! -e configure ]; then \
				echo "mkconfigure failed."; \
				echo "Note: mkconfigure is part of BSDBuild"; \
				echo "(http://bsdbuild.hypertriton.com/)"; \
				exit 1; \
			fi; \
			if [ ! -x configure ]; then \
				echo "chmod 755 configure"; \
				chmod 755 configure; \
			fi; \
		fi; \
	fi

event.o: event.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'event'
#  Last modified 2022-05-10 11:02:28.672864443
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

deinstall-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 181):
	@if [ "${NOMAN}" != "yes" ]; then \
		if [ "${MAN1}" != "" ]; then \
			for F in ${MAN1}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man1/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man1/$$FL; \
			done; \
		fi; \
		if [ "${MAN2}" != "" ]; then \
			for F in ${MAN2}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man2/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man2/$$FL; \
			done; \
		fi; \
		if [ "${MAN3}" != "" ]; then \
			for F in ${MAN3}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man3/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man3/$$FL; \
			done; \
		fi; \
		if [ "${MAN4}" != "" ]; then \
			for F in ${MAN4}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man4/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man4/$$FL; \
			done; \
		fi; \
		if [ "${MAN5}" != "" ]; then \
			for F in ${MAN5}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man5/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man5/$$FL; \
			done; \
		fi; \
		if [ "${MAN6}" != "" ]; then \
			for F in ${MAN6}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man6/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man6/$$FL; \
			done; \
		fi; \
		if [ "${MAN7}" != "" ]; then \
			for F in ${MAN7}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man7/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man7/$$FL; \
			done; \
		fi; \
		if [ "${MAN8}" != "" ]; then \
			for F in ${MAN8}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man8/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man8/$$FL; \
			done; \
		fi; \
		if [ "${MAN9}" != "" ]; then \
			for F in ${MAN9}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man9/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man9/$$FL; \
			done; \
		fi; \
		if [ "${NOMANLINKS}" != "yes" -a "${MANLINKS}" != "" ]; then \
			if [ "${MAN1}" != "" -a -e "${DESTDIR}${MANDIR}/man1" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man1 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN2}" != "" -a -e "${DESTDIR}${MANDIR}/man2" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man2 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN3}" != "" -a -e "${DESTDIR}${MANDIR}/man3" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man3 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN4}" != "" -a -e "${DESTDIR}${MANDIR}/man4" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man4 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN5}" != "" -a -e "${DESTDIR}${MANDIR}/man5" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man5 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN6}" != "" -a -e "${DESTDIR}${MANDIR}/man6" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man6 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
 
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN7}" != "" -a -e "${DESTDIR}${MANDIR}/man7" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man7 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN8}" != "" -a -e "${DESTDIR}${MANDIR}/man8" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man8 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN9}" != "" -a -e "${DESTDIR}${MANDIR}/man9" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man9 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
		fi; \
	fi
	

# Not a target:
file.c:
#  Implicit rule search has been done.
#  Last modified 2019-06-18 23:14:09
#  File has been updated.
#  Successfully updated.

lint: lint-man
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
cpuinfo.c:
#  Implicit rule search has been done.
#  Last modified 2019-08-12 03:48:24
#  File has been updated.
#  Successfully updated.

check-libtool:
#  Phony target (prerequisite of .PHONY).
 
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 884):
	@if [ "${USE_LIBTOOL}" = "Yes" -a "${LIBTOOL_BUNDLED}" = "yes" ]; then \
	    if [ ! -e "${LIBTOOL_COOKIE}" ]; then \
	        echo "(cd ${LTBASE} && \
	            ${SH} ./configure --build=${BUILD} --host=${HOST})"; \
	        (cd ${LTBASE} && env CC="${CC}" OBJC="${OBJC}" CXX="${CXX}" \
	            CFLAGS="${CFLAGS}" OBJCFLAGS="${OBJCFLAGS}" CXXFLAGS="${CXXFLAGS}" \
		    ${SH} ./configure --build=${BUILD} --host=${HOST}); \
	        if [ $$? != 0 ]; then \
	    	    echo "USE_LIBTOOL=Yes and ${LTCONFIG} failed"; \
	    	    exit 1; \
	        fi; \
	        if [ ! -f "${LIBTOOL}" ]; then \
		    echo "mv libtool ${LIBTOOL}"; \
		    mv libtool ${LIBTOOL}; \
	        fi; \
	        echo "echo "${LIBTOOL}" > ${LIBTOOL_COOKIE}"; \
	        echo "${LIBTOOL}" > ${LIBTOOL_COOKIE}; \
	    fi; \
	fi

all-manlinks:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 358):
	@if [ "${SRC}" != "" ]; then \
		(cd ${SRC} && \
		 for DIR in `find . -name .manlinks.mk |sed 's/\/\.manlinks\.mk//'`; do \
			echo "(cd $$DIR && ${MAKE} manlinks)"; \
			(cd $$DIR && ${MAKE} manlinks); \
		done); \
	else \
		for DIR in `find . -name .manlinks.mk |sed 's/\/\.manlinks\.mk//'`; do \
			echo "(cd $$DIR && ${MAKE} manlinks)"; \
			(cd $$DIR && ${MAKE} manlinks); \
		done; \
	fi

# Not a target:
db.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-12 14:03:36
#  File has been updated.
#  Successfully updated.

text.o: text.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'text'
#  Last modified 2022-05-10 11:02:28.692864558
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
config.c:
#  Implicit rule search has been done.
 
#  Last modified 2020-02-06 11:43:50
#  File has been updated.
#  Successfully updated.

# Not a target:
time.c:
#  Implicit rule search has been done.
#  Last modified 2018-11-16 17:12:00
#  File has been updated.
#  Successfully updated.

# Not a target:
dir.c:
#  Implicit rule search has been done.
#  Last modified 2020-05-14 16:11:45
#  File has been updated.
#  Successfully updated.

.cc.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 180):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CXX} ${LIBTOOLFLAGS} ${CXXFLAGS} ${CPPFLAGS} -o $@ -c $<

dso.o: dso.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'dso'
#  Last modified 2022-05-10 11:02:28.504863474
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
vsnprintf.c:
#  Implicit rule search has been done.
 
#  Last modified 2019-08-26 02:05:46
#  File has been updated.
#  Successfully updated.

clean-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 56):
	@if [ "${CLEANFILES}" != "" ]; then \
		echo "rm -f ${CLEANFILES}"; \
		rm -f ${CLEANFILES}; \
	fi

exec.o: exec.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'exec'
#  Last modified 2022-05-10 11:02:28.596864004
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
load_real.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-08 16:56:44
#  File has been updated.
#  Successfully updated.

# Not a target:
tbl.c:
#  Implicit rule search has been done.
 
#  Last modified 2019-08-11 21:38:33
#  File has been updated.
#  Successfully updated.

# Not a target:
threads.c:
#  Implicit rule search has been done.
#  Last modified 2019-05-09 22:52:11
#  File has been updated.
#  Successfully updated.

depend-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 218):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ depend); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

.l:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 185):
	${LEX} ${LFLAGS} -o$@.yy.c $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.yy.c ${LIBL} ${LIBS}"; 
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.yy.c ${LIBL} ${LIBS}
	@rm -f $@.yy.c

libag_core.so: _lib_objs
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 350):
 
	@if [ "${LIB}" != "" -a "${LIB_SHARED}" = "Yes" -a \
	      "${USE_LIBTOOL}" = "No" -a "${SRCS}" != "" -a \
	      "${.TARGETS}" != "install" ]; then \
	    \
	    case "${HOST}" in \
	    *-darwin*) \
	        _libout="lib${LIB}.${LIB_CURRENT}.dylib"; \
	        _libnames="lib${LIB}.dylib"; \
		;; \
	    *-mingw*) \
	        _libout="${LIB}.dll"; \
	        _libnames=""; \
		;; \
	    *) \
	        _libout="lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE}"; \
	        _libnames="lib${LIB}.so.${LIB_CURRENT} lib${LIB}.so"; \
	        ;; \
	    esac; \
	    \
	    _objs="${OBJS}"; \
	    if [ "$$_objs" = "" ]; then \
	        for F in ${SRCS}; do \
	    	    F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.asm$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.cc$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.cpp$$/.o/'`; \
	    	    _objs="$$_objs $$F"; \
                done; \
	    fi; \
	    \
	    case "${HOST}" in \
	    *-darwin*) \
	        echo "${CC} -shared -o $$_libout -Wl,-rpath,${PREFIX}/lib ${LDFLAGS} -dynamiclib -install_name lib${LIB}.dylib $$_objs ${LIBS}"; \
	        ${CC} -shared -o $$_libout -Wl,-rpath ${PREFIX}/lib ${LDFLAGS} -dynamiclib -install_name lib${LIB}.dylib $$_objs ${LIBS}; \
	        ;; \
	    *-mingw*) \
	        echo "${CC} -shared -o $$_libout -Wl,--out-implib,lib${LIB}_dll.lib -Wl,-rpath ${PREFIX}/lib ${LDFLAGS} $$_objs ${LIBS}"; \
	        ${CC} -shared -o $$_libout -Wl,--out-implib,lib${LIB}_dll.lib -Wl,-rpath ${PREFIX}/lib ${LDFLAGS} $$_objs ${LIBS}; \
	        ;; \
	    *) \
	        echo "${CC} -shared -o $$_libout -Wl,-rpath,${PREFIX}/lib ${LDFLAGS} $$_objs"; \
	        ${CC} -shared -o $$_libout -Wl,-rpath ${PREFIX}/lib ${LDFLAGS} $$_objs; \
	        ;; \
	    esac; \
	    \
	    for LIBNAME in $$_libnames; do \
	        echo "${LN} -fs $$_libout $$LIBNAME"; \
	        ${LN} -fs $$_libout $$LIBNAME; \
	    done; \
	    \
	    echo "# lib${LIB}.la - a libtool library file" > lib${LIB}.la; \
	    echo "# Generated by build.lib.mk(5) from BSDBuild ${BSDBUILD_VERSION}" >> lib${LIB}.la; \
	    echo '# <https://bsdbuild.hypertriton.com/>' >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# The name that we can dlopen(3).' >> lib${LIB}.la; \
	    echo "dlname='$$_libout'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Names of this library.' >> lib${LIB}.la; \
	    echo "library_names='$$_libout $$_libnames'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# The name of the static archive.' >> lib${LIB}.la; \
	    echo "old_library='lib${LIB}.a'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    _linker_flags=""; \
	    _dependency_libs=""; \
	    for F in ${LIBS}; do \
	    	if echo "$$F" | grep -q '^-[lL]'; then \
		    _dependency_libs="$$_dependency_libs $$F"; \
		else \
		    _linker_flags="$$_linker_flags $$F"; \
		fi; \
	    done; \
	    echo '# Linker flags that can not go in dependency_libs.' >> lib${LIB}.la; \
	    echo "inherited_linker_flags='$$_linker_flags'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Libraries that this one depends upon.' >> lib${LIB}.la; \
	    echo "dependency_libs='$$_dependency_libs'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Names of additional weak libraries provided by this library' >> lib${LIB}.la; \
	    echo "weak_library_names=''" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Version information for lib${LIB}.' >> lib${LIB}.la; \
	    echo "current=${LIB_CURRENT}" >> lib${LIB}.la; \
	    echo "age=${LIB_AGE}" >> lib${LIB}.la; \
	    echo "revision=${LIB_REVISION}" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Is this an already installed library?' >> lib${LIB}.la; \
	    echo 'installed=no' >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Should we warn about portability when linking against -modules?' >> lib${LIB}.la; \
	    echo 'shouldnotlink=no' >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Files to dlopen/dlpreopen' >> lib${LIB}.la; \
	    echo "dlopen=''" >> lib${LIB}.la; \
	    echo "dlpreopen=''" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Directory that this library needs to be installed in:' >> lib${LIB}.la; \
	    echo "libdir='${PREFIX}/lib'" >> lib${LIB}.la; \
	    if [ "${LIB_BUNDLE}" != "" ]; then \
	        echo "perl ${TOP}/mk/gen-bundle.pl lib ${LIB_BUNDLE}"; \
	        perl ${TOP}/mk/gen-bundle.pl lib ${LIB_BUNDLE}; \
	    fi; \
	fi

load_integral.o: load_integral.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'load_integral'
#  Last modified 2022-05-10 11:02:28.620864143
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
../mk/build.lib.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

regress: regress-subdir regress-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
 
.asm:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.asm.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 136):
	${ASM} ${ASMFLAGS} ${CPPFLAGS} -o $@ $<

deinstall-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 134):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ deinstall); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

# Not a target:
.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

load_real.o: load_real.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'load_real'
#  Last modified 2022-05-10 11:02:28.560863797
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi
 

class.o: class.c
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'class'
#  Last modified 2022-05-10 11:02:28.624864165
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

# Not a target:
time_gettimeofday.c:
#  Implicit rule search has been done.
#  Last modified 2018-11-16 16:56:07
#  File has been updated.
#  Successfully updated.

deinstall-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 150):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ deinstall); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

install: install-lib install-subdir install-man install-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
time_renderer.c:
#  Implicit rule search has been done.
#  Last modified 2019-09-12 21:40:07
#  File has been updated.
 
#  Successfully updated.

# Not a target:
.ads:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=167/1024=16%, Rehash=0, Collisions=206/707=29%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 544 / storage = 6331 B / avg = 11 B
# current buf: size = 8162 B / used = 6331 B / count = 544 / avg = 11 B

# strcache performance: lookups = 983 / hit rate = 44%
# hash-table stats:
# Load=544/8192=7%, Rehash=0, Collisions=98/983=10%
# Finished Make data base on Tue May 10 13:43:27 2022

 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Tue May 10 13:43:27 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 9)
LIB_AGE = 0
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from '../Makefile.config', line 14)
PREFIX = /usr/local
# automatic
?F = $(notdir $?)
# makefile (from '../Makefile.config', line 92)
HAVE_NORETURN_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 204)
_MK_HAVE_SYS_TYPES_H = yes
# environment
DESKTOP_SESSION = ubuntu
# automatic
-*-command-variables-*- := REL=core/
# makefile (from '../mk/build.lib.mk', line 95)
DATAFILES = 
# default
.SHELLFLAGS := -c
# makefile (from '../mk/build.lib.mk', line 84)
LIBTOOLOPTS = --quiet
# makefile (from '../Makefile.config', line 190)
TTFDIR = /usr/local/share/agar/fonts
# environment
XDG_SESSION_CLASS = user
# makefile (from '../Makefile.config', line 70)
HAVE_DLOPEN = yes
# makefile (from '../mk/build.common.mk', line 59)
INSTALL_INCL_DIR = mkdir -p
# makefile (from '../Makefile.config', line 188)
SUBDIR_vg = vg
# makefile (from '../Makefile.config', line 201)
_MK_HAVE_STDINT_H = yes
# makefile (from '../Makefile.config', line 124)
HAVE_ZLIB = no
# environment
SNAP_COMMON = /var/snap/code/common
# makefile (from '../Makefile.config', line 129)
JPEG_CFLAGS = -I/usr/include
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# makefile (from '../Makefile.config', line 69)
HAVE_DEPRECATED_ATTRIBUTE = yes
# makefile (from '../mk/build.common.mk', line 62)
DEINSTALL_PROG = rm -f
# makefile (from '../Makefile.config', line 140)
MATH_LIBS = -lm
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '../Makefile.config', line 10)
MANDOC = /usr/bin/nroff -Tmandoc
# environment
IM_CONFIG_PHASE = 1
# makefile (from '../Makefile.config', line 184)
SUBDIR_micro = 
# makefile (from '../mk/build.lib.mk', line 100)
PCMODULES = 
# makefile (from '../mk/build.lib.mk', line 96)
 
DATAFILES_SRC = 
# makefile (from '../mk/build.lib.mk', line 43)
ADAPREPFLAGS = 
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile (from '../mk/build.lib.mk', line 32)
LIB_PROFILE = No
# makefile (from '../Makefile.config', line 67)
HAVE_DB4 = no
# makefile
CURDIR := /home/yyf/Documents/agar-1.6.0/core
# makefile (from '../Makefile.config', line 191)
VERSION = 1.6.0
# makefile
SHELL = /bin/sh
# environment
SNAP_DATA = /var/snap/code/95
# makefile (from '../Makefile.config', line 110)
HAVE_SSE = yes
# makefile (from '../mk/build.man.mk', line 36)
MAN6 = 
# makefile (from '../Makefile.config', line 130)
JPEG_LIBS = -L/usr/lib -ljpeg
# makefile (from '../Makefile.config', line 71)
HAVE_FLOAT = yes
# makefile (from '../Makefile.config', line 178)
SSE_CFLAGS = -msse
# makefile (from '../Makefile.config', line 55)
HAVE_CC65 = no
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from '../Makefile.config', line 175)
SRCS_NET = net_bsd.c
# makefile (from '../mk/build.lib.mk', line 33)
LIB_MODULE = No
# makefile (from '../Makefile.config', line 187)
SUBDIR_sk = sk
# makefile (from '../Makefile.config', line 117)
HAVE_WARN_UNUSED_RESULT_ATTRIBUTE = yes
# environment
JOURNAL_STREAM = 8:387942
# makefile (from '../Makefile.config', line 16)
ALTIVEC_CHECK_CFLAGS = 
# makefile (from '../Makefile.config', line 202)
_MK_HAVE_STDLIB_H = yes
# makefile (from '../mk/build.common.mk', line 65)
DEINSTALL_INCL = rm -f
# makefile (from '../Makefile.config', line 192)
X11_CFLAGS = 
# makefile (from '../Makefile.config', line 104)
HAVE_PTHREAD_MUTEX_T_POINTER = no
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from '../Makefile.config', line 114)
HAVE_SYS_UIO_H = 
# makefile (from '../Makefile.config', line 51)
HAVE_ALTIVEC = no
# makefile (from '../mk/build.lib.mk', line 58)
ADAFLAGS = 
# makefile (from '../Makefile.config', line 196)
ZLIB_CFLAGS = 
# makefile (from '../Makefile.config', line 88)
HAVE_MATH = yes
# makefile (from '../Makefile.config', line 47)
GLU_LIBS = -L/usr/lib -lGLU
 
# makefile (from '../mk/build.common.mk', line 1)
MAKEFILE_LIST :=  Makefile ../Makefile.config ../core/Makefile.inc .manlinks.mk ../mk/build.lib.mk ../mk/build.common.mk ../mk/build.proj.mk ../mk/build.subdir.mk .depend ../mk/build.man.mk ../mk/build.common.mk
# makefile (from '../mk/build.lib.mk', line 94)
CLEANDIRFILES = 
# makefile (from '../Makefile.config', line 30)
DB4_CFLAGS = 
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from '../Makefile.config', line 151)
PNG_CFLAGS = -I/home/yyf/anaconda3/include/libpng16
# makefile (from '../Makefile.config', line 141)
MEMORY_MODEL = LARGE
# makefile (from '../Makefile.config', line 193)
X11_LIBS = -lX11
# environment
USERNAME = yyf
# makefile (from '../mk/build.lib.mk', line 86)
LIBTOOLOPTS_STATIC = 
# makefile (from 'Makefile', line 1)
TOP = ..
# makefile (from '../Makefile.config', line 81)
HAVE_JPEG = yes
# makefile (from '../Makefile.config', line 28)
CXXFLAGS = -D_AGAR_INTERNAL -D_DEFAULT_SOURCE -D_BSD_SOURCE -I/home/yyf/Documents/agar-1.6.0/include
# environment
MAKELEVEL := 1
# makefile (from '../Makefile.config', line 100)
HAVE_PTHREADS_XOPEN = yes
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# makefile (from '../Makefile.config', line 5)
CROSS_COMPILING = no
# makefile (from '../Makefile.config', line 145)
OPENGL_CFLAGS = 
# makefile (from '../Makefile.config', line 32)
DB5_CFLAGS = 
# makefile (from '../Makefile.config', line 173)
SRCS_CORE = time_posix.c time_renderer.c time_gettimeofday.c user_posix.c
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from '../Makefile.config', line 98)
HAVE_PORTAUDIO = no
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from '../Makefile.config', line 161)
PROG_SUFFIX = 
# makefile (from '../Makefile.config', line 122)
HAVE_XINERAMA = yes
# makefile (from '../Makefile.config', line 31)
DB4_LIBS = 
# environment
_ = /snap/code/95/usr/share/code/code
# makefile (from '../mk/build.lib.mk', line 89)
CONF_OVERWRITE = No
# makefile (from '../Makefile.config', line 102)
HAVE_PTHREAD_MUTEX_RECURSIVE = yes
# makefile (from '../Makefile.config', line 143)
MYSQL_CFLAGS = 
# makefile (from '../mk/build.common.mk', line 45)
AWK = awk
# makefile (from '../Makefile.config', line 80)
HAVE_INT64_T = yes
# environment
MANAGERPID = 22346
# makefile (from '../mk/build.common.mk', line 57)
INSTALL_LIB_DIR = mkdir -p
# makefile (from '../mk/build.man.mk', line 39)
MAN9 = 
# makefile (from '../mk/build.lib.mk', line 104)
WINRES = 
# makefile (from '../Makefile.config', line 61)
HAVE_CLOCK_GETTIME = yes
# makefile (from '../Makefile.config', line 146)
OPENGL_LIBS = -L/usr/local/lib -lGL
# makefile (from '../Makefile.config', line 33)
DB5_LIBS = 
# makefile (from '../mk/build.lib.mk', line 40)
ADA = ada
# makefile (from '../mk/build.proj.mk', line 42)
CLEANFILES =  ${PREMAKEOUT}
# makefile (from '../Makefile.config', line 46)
GLU_CFLAGS = -I/usr/include
 
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
LC_NAME = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 54)
HAVE_CC = yes
# environment
VSCODE_CWD = /home/yyf
# makefile (from '../Makefile.config', line 77)
HAVE_GLU = yes
# makefile (from '../Makefile.config', line 82)
HAVE_LD_NO_UNDEFINED = 
# makefile (from '../mk/build.lib.mk', line 78)
LTCONFIG_DEPS = ${LTBASE}/config.guess ${LTBASE}/config.sub ${LTBASE}/aclocal.m4 ${LTBASE}/ltmain.sh
# makefile (from '../mk/build.lib.mk', line 60)
ASMFLAGS = -g -w-orphan-labels
# makefile (from '../Makefile.config', line 97)
HAVE_PNG = yes
# makefile (from '../mk/build.lib.mk', line 42)
ADAPREP = gnatprep
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/95/usr/share/glib-2.0/schemas
# makefile (from '.manlinks.mk', line 570)
MANLINKS = AG_ByteSwap.3:AG_Swap16.3 AG_ByteSwap.3:AG_Swap32.3 AG_ByteSwap.3:AG_Swap64.3 AG_ByteSwap.3:AG_SwapLE16.3 AG_ByteSwap.3:AG_SwapLE32.3 AG_ByteSwap.3:AG_SwapLE64.3 AG_ByteSwap.3:AG_SwapBE16.3 AG_ByteSwap.3:AG_SwapBE32.3 AG_ByteSwap.3:AG_SwapBE64.3 AG_CPUInfo.3:AG_GetCPUInfo.3 AG_Config.3:AG_ConfigObject.3 AG_Config.3:AG_ConfigLoad.3 AG_Config.3:AG_ConfigSave.3 AG_Config.3:AG_ConfigFind.3 AG_Config.3:AG_ConfigAddPath.3 AG_Config.3:AG_ConfigAddPathS.3 AG_Config.3:AG_ConfigSetPath.3 AG_Config.3:AG_ConfigSetPathS.3 AG_Config.3:AG_ConfigDelPath.3 AG_Config.3:AG_ConfigDelPathS.3 AG_Core.3:AG_InitCore.3 AG_Core.3:AG_AtExitFunc.3 AG_Core.3:AG_Quit.3 AG_Core.3:AG_Destroy.3 AG_Core.3:AG_AgarVersion.3 AG_Core.3:AG_GetVersion.3 AG_Core.3:AG_VERSION_ATLEAST.3 AG_DSO.3:AG_LoadDSO.3 AG_DSO.3:AG_SymDSO.3 AG_DSO.3:AG_LockDSO.3 AG_DSO.3:AG_UnlockDSO.3 AG_DSO.3:AG_UnloadDSO.3 AG_DSO.3:AG_LookupDSO.3 AG_DataSource.3:AG_OpenFile.3 AG_DataSource.3:AG_OpenFileHandle.3 AG_DataSource.3:AG_OpenCore.3 AG_DataSource.3:AG_OpenConstCore.3 AG_DataSource.3:AG_OpenAutoCore.3 AG_DataSource.3:AG_OpenNetSocket.3 AG_DataSource.3:AG_CloseDataSource.3 AG_DataSource.3:AG_Read.3 AG_DataSource.3:AG_ReadAt.3 AG_DataSource.3:AG_Write.3 AG_DataSource.3:AG_WriteAt.3 AG_DataSource.3:AG_ReadP.3 AG_DataSource.3:AG_ReadAtP.3 AG_DataSource.3:AG_WriteP.3 AG_DataSource.3:AG_WriteAtP.3 AG_DataSource.3:AG_Tell.3 AG_DataSource.3:AG_Seek.3 AG_DataSource.3:AG_LockDataSource.3 AG_DataSource.3:AG_UnlockDataSource.3 AG_DataSource.3:AG_SetByteOrder.3 AG_DataSource.3:AG_SetSourceDebug.3 AG_DataSource.3:AG_DataSourceInit.3 AG_DataSource.3:AG_DataSourceDestroy.3 AG_DataSource.3:AG_DataSourceSetErrorFn.3 AG_DataSource.3:AG_DataSourceError.3 AG_DataSource.3:AG_DataSourceRealloc.3 AG_DataSource.3:AG_ReadUint8.3 AG_DataSource.3:AG_ReadSint8.3 AG_DataSource.3:AG_ReadUint16.3 AG_DataSource.3:AG_ReadSint16.3 AG_DataSource.3:AG_ReadUint32.3 AG_DataSource.3:AG_ReadSint32.3 AG_DataSource.3:AG_ReadSint32.3 AG_DataSource.3:AG_ReadUint64.3 AG_DataSource.3:AG_ReadSint64.3 AG_DataSource.3:AG_WriteUint8.3 AG_DataSource.3:AG_WriteSint8.3 AG_DataSource.3:AG_WriteUint16.3 AG_DataSource.3:AG_WriteSint16.3 AG_DataSource.3:AG_WriteUint32.3 AG_DataSource.3:AG_WriteSint32.3 AG_DataSource.3:AG_WriteUint64.3 AG_DataSource.3:AG_WriteSint64.3 AG_DataSource.3:AG_WriteUint8At.3 AG_DataSource.3:AG_WriteSint8At.3 AG_DataSource.3:AG_WriteUint16At.3 AG_DataSource.3:AG_WriteSint16At.3 AG_DataSource.3:AG_WriteUint32At.3 AG_DataSource.3:AG_WriteSint32At.3 AG_DataSource.3:AG_WriteUint64At.3 AG_DataSource.3:AG_WriteSint64At.3 AG_DataSource.3:AG_ReadFloat.3 AG_DataSource.3:AG_ReadDouble.3 AG_DataSource.3:AG_WriteFloat.3 AG_DataSource.3:AG_WriteFloatAt.3 AG_DataSource.3:AG_WriteDouble.3 AG_DataSource.3:AG_WriteDoubleAt.3 AG_DataSource.3:AG_ReadString.3 AG_DataSource.3:AG_ReadStringLen.3 AG_DataSource.3:AG_CopyString.3 AG_DataSource.3:AG_ReadStringPadded.3 AG_DataSource.3:AG_CopyStringPadded.3 AG_DataSource.3:AG_ReadNulString.3 AG_DataSource.3:AG_ReadNulStringLen.3 AG_DataSource.3:AG_CopyNulString.3 AG_DataSource.3:AG_SkipString.3 AG_DataSource.3:AG_SkipStringPadded.3 AG_DataSource.3:AG_WriteString.3 AG_DataSource.3:AG_WriteStringPadded.3 AG_Db.3:AG_Dbt.3 AG_Db.3:AG_DbNew.3 AG_Db.3:AG_DbOpen.3 AG_Db.3:AG_DbClose.3 AG_Db.3:AG_DbExists.3 AG_Db.3:AG_DbDel.3 AG_Db.3:AG_DbGet.3 AG_Db.3:AG_DbPut.3 AG_Db.3:AG_DbSync.3 AG_Error.3:AG_SetError.3 AG_Error.3:AG_SetErrorV.3 AG_Error.3:AG_GetError.3 AG_Error.3:AG_FatalError.3 AG_Error.3:AG_FatalErrorV.3 AG_Error.3:AG_SetFatalCallback.3 AG_Error.3:AG_Strerror.3 AG_Error.3:AG_Verbose.3 AG_Error.3:AG_Debug.3 AG_Error.3:AG_SetVerboseCallback.3 AG_Error.3:AG_SetDebugCallback.3 AG_Error.3:AG_Malloc.3 AG_Error.3:AG_TryMalloc.3 AG_Error.3:AG_Realloc.3 AG_Error.3:AG_TryRealloc.3 AG_Error.3:AG_Free.3 AG_Event.3:AG_SetEvent.3 AG_Event.3:AG_AddEvent.3 AG_Event.3:AG_FindEventHandler.3 AG_Event.3:AG_UnsetEvent.3 AG_Event.3:AG_UnsetEventByPtr.3 AG_Event.3:AG_PostEvent.3 AG_Event.3:AG_PostEventByPtr.3 AG_Event.3:AG_SchedEvent.3 AG_Event.3:AG_SELF.3 AG_Event.3:AG_CONST_SELF.3 AG_Event.3:AG_PTR.3 AG_Event.3:AG_CONST_PTR.3 AG_Event.3:AG_EventInit.3 AG_Event.3:AG_EventArgs.3 AG_Event.3:AG_EventCopy.3 AG_Event.3:AG_EventDup.3 AG_Event.3:AG_EventPushPointer.3 AG_Event.3:AG_EventPushConstPointer.3 AG_Event.3:AG_EventPushString.3 AG_Event.3:AG_EventPushInt.3 AG_Event.3:AG_EventPushUint.3 AG_Event.3:AG_EventPushLong.3 AG_Event.3:AG_EventPushUlong.3 AG_Event.3:AG_EventPushFloat.3 AG_Event.3:AG_EventPushDouble.3 AG_Event.3:AG_EVENT_PUSH_ARG.3 AG_Event.3:AG_EventPopPointer.3 AG_Event.3:AG_EventPopConstPointer.3 AG_Event.3:AG_EventPopString.3 AG_Event.3:AG_EventPopInt.3 AG_Event.3:AG_EventPopUint.3 AG_Event.3:AG_EventPopLong.3 AG_Event.3:AG_EventPopUlong.3 AG_Event.3:AG_EventPopFloat.3 AG_Event.3:AG_EventPopDouble.3 AG_EventLoop.3:AG_Terminate.3 AG_EventLoop.3:AG_TerminateEv.3 AG_EventLoop.3:AG_EventSink.3 AG_EventLoop.3:AG_AddEventSink.3 AG_EventLoop.3:AG_DelEventSink.3 AG_EventLoop.3:AG_DelEventsSinkByIdent.3 AG_EventLoop.3:AG_AddEventPrologue.3 AG_EventLoop.3:AG_AddEventEpilogue.3 AG_EventLoop.3:AG_AddEventSpinner.3 AG_EventLoop.3:AG_DelEventPrologue.3 AG_EventLoop.3:AG_DelEventEpilogue.3 AG_EventLoop.3:AG_DelEventSpinner.3 AG_Execute.3:AG_WaitOnProcess.3 AG_Execute.3:AG_Kill.3 AG_File.3:AG_FileInfo.3 AG_File.3:AG_GetFileInfo.3 AG_File.3:AG_GetSystemTempDir.3 AG_File.3:AG_FileExists.3 AG_File.3:AG_FileDelete.3 AG_File.3:AG_Dir.3 AG_File.3:AG_MkDir.3 AG_File.3:AG_MkPath.3 AG_File.3:AG_RmDir.3 AG_File.3:AG_ChDir.3 AG_File.3:AG_GetCWD.3 AG_File.3:AG_OpenDir.3 AG_File.3:AG_CloseDir.3 AG_File.3:AG_FileExtMapping.3 AG_File.3:AG_ShortFilename.3 AG_File.3:AG_RegisterFileExtMappings.3 AG_Object.3:AG_ObjectNew.3 AG_Object.3:AG_ObjectInit.3 AG_Object.3:AG_ObjectAttach.3 AG_Object.3:AG_ObjectDetach.3 AG_Object.3:AG_ObjectMoveToHead.3 AG_Object.3:AG_ObjectMoveToTail.3 AG_Object.3:AG_ObjectMoveUp.3 AG_Object.3:AG_ObjectMoveDown.3 AG_Object.3:AG_ObjectDelete.3 AG_Object.3:AG_ObjectRoot.3 AG_Object.3:AG_ObjectParent.3 AG_Object.3:AG_ObjectFind.3 AG_Object.3:AG_ObjectFindS.3 AG_Object.3:AG_ObjectFindParent.3 AG_Object.3:AG_ObjectFindChild.3 AG_Object.3:AG_ObjectGetName.3 AG_Object.3:AG_ObjectCopyName.3 AG_Object.3:AG_ObjectLock.3 AG_Object.3:AG_ObjectUnlock.3 AG_Object.3:AG_LockVFS.3 AG_Object.3:AG_UnlockVFS.3 AG_Object.3:AG_ObjectSetName.3 AG_Object.3:AG_ObjectSetNameS.3 AG_Object.3:AG_ObjectGenName.3 AG_Object.3:AG_ObjectGenNamePfx.3 AG_Object.3:AGOBJECT_FOREACH_CHILD.3 AG_Object.3:AG_RegisterClass.3 AG_Object.3:AG_UnregisterClass.3 AG_Object.3:AG_CreateClass.3 AG_Object.3:AG_ClassSetInit.3 AG_Object.3:AG_ClassSetReset.3 AG_Object.3:AG_ClassSetDestroy.3 AG_Object.3:AG_ClassSetLoad.3 AG_Object.3:AG_ClassSetSave.3 AG_Object.3:AG_ClassSetEdit.3 AG_Object.3:AG_DestroyClass.3 AG_Object.3:AG_RegisterNamespace.3 AG_Object.3:AG_UnregisterNamespace.3 AG_Object.3:AG_LookupClass.3 AG_Object.3:AG_LoadClass.3 AG_Object.3:AG_RegisterModuleDirectory.3 AG_Object.3:AG_UnregisterModuleDirectory.3 AG_Object.3:AG_OfClass.3 AG_Object.3:AG_ObjectGetClassName.3 AG_Object.3:AG_ObjectSuperclass.3 AG_Object.3:AG_ObjectGetInheritHier.3 AG_Object.3:AGOBJECT_FOREACH_CLASS.3 AG_Object.3:AG_Class.3 AG_Object.3:AG_Classes.3 AG_Object.3:AG_ObjectClass.3 AG_Object.3:AG_ObjectDestroy.3 AG_Object.3:AG_ObjectReset.3 AG_Object.3:AG_ObjectFreeEvents.3 AG_Object.3:AG_ObjectFreeVariables.3 AG_Object.3:AG_ObjectFreeChildren.3 AG_Object.3:AG_ObjectLoad.3 AG_Object.3:AG_ObjectLoadFromFile.3 AG_Object.3:AG_ObjectLoadFromDB.3 AG_Object.3:AG_ObjectLoadData.3 AG_Object.3:AG_ObjectLoadDataFromFile.3 AG_Object.3:AG_ObjectLoadGeneric.3 AG_Object.3:AG_ObjectLoadGenericFromFile.3 AG_Object.3:AG_ObjectSave.3 AG_Object.3:AG_ObjectSaveAll.3 AG_Object.3:AG_ObjectSaveToFile.3 AG_Object.3:AG_ObjectSaveToDB.3 AG_Object.3:AG_ObjectSerialize.3 AG_Object.3:AG_ObjectUnserialize.3 AG_Object.3:AG_ObjectReadHeader.3 AG_Object.3:AG_ObjectPageIn.3 AG_Object.3:AG_ObjectPageOut.3 AG_Object.3:AG_ObjectHeader.3 AG_Queue.3:AG_SLIST_ENTRY.3 AG_Queue.3:AG_SLIST_HEAD.3 AG_Queue.3:AG_SLIST_HEAD_.3 AG_Queue.3:AG_SLIST_HEAD_INITIALIZER.3 AG_Queue.3:AG_SLIST_FIRST.3 AG_Queue.3:AG_SLIST_NEXT.3 AG_Queue.3:AG_SLIST_END.3 AG_Queue.3:AG_SLIST_EMPTY.3 AG_Queue.3:AG_SLIST_FOREACH.3 AG_Queue.3:AG_SLIST_FOREACH_PREVPTR.3 AG_Queue.3:AG_SLIST_INIT.3 AG_Queue.3:AG_SLIST_INSERT_AFTER.3 AG_Queue.3:AG_SLIST_INSERT_HEAD.3 AG_Queue.3:AG_SLIST_REMOVE_HEAD.3 AG_Queue.3:AG_SLIST_REMOVE_NEXT.3 AG_Queue.3:AG_SLIST_REMOVE.3 AG_Queue.3:AG_LIST_ENTRY.3 AG_Queue.3:AG_LIST_HEAD.3 AG_Queue.3:AG_LIST_HEAD_.3 AG_Queue.3:AG_LIST_HEAD_INITIALIZER.3 AG_Queue.3:AG_LIST_FIRST.3 AG_Queue.3:AG_LIST_NEXT.3 AG_Queue.3:AG_LIST_END.3 AG_Queue.3:AG_LIST_EMPTY.3 AG_Queue.3:AG_LIST_FOREACH.3 AG_Queue.3:AG_LIST_INIT.3 AG_Queue.3:AG_LIST_INSERT_AFTER.3 AG_Queue.3:AG_LIST_INSERT_BEFORE.3 AG_Queue.3:AG_LIST_INSERT_HEAD.3 AG_Queue.3:AG_LIST_REMOVE.3 AG_Queue.3:AG_LIST_REPLACE.3 AG_Queue.3:AG_SIMPLEQ_ENTRY.3 AG_Queue.3:AG_SIMPLEQ_HEAD.3 AG_Queue.3:AG_SIMPLEQ_HEAD_.3 AG_Queue.3:AG_SIMPLEQ_HEAD_INITIALIZER.3 AG_Queue.3:AG_SIMPLEQ_FIRST.3 AG_Queue.3:AG_SIMPLEQ_NEXT.3 AG_Queue.3:AG_SIMPLEQ_END.3 AG_Queue.3:AG_SIMPLEQ_INIT.3 AG_Queue.3:AG_SIMPLEQ_INSERT_HEAD.3 AG_Queue.3:AG_SIMPLEQ_INSERT_TAIL.3 AG_Queue.3:AG_SIMPLEQ_INSERT_AFTER.3 AG_Queue.3:AG_SIMPLEQ_REMOVE_HEAD.3 AG_Queue.3:AG_TAILQ_ENTRY.3 AG_Queue.3:AG_TAILQ_HEAD.3 AG_Queue.3:AG_TAILQ_HEAD_.3 AG_Queue.3:AG_TAILQ_HEAD_INITIALIZER.3 AG_Queue.3:AG_TAILQ_FIRST.3 AG_Queue.3:AG_TAILQ_NEXT.3 AG_Queue.3:AG_TAILQ_END.3 AG_Queue.3:AG_TAILQ_LAST.3 AG_Queue.3:AG_TAILQ_PREV.3 AG_Queue.3:AG_TAILQ_EMPTY.3 AG_Queue.3:AG_TAILQ_FOREACH.3 AG_Queue.3:AG_TAILQ_FOREACH_REVERSE.3 AG_Queue.3:AG_TAILQ_INIT.3 AG_Queue.3:AG_TAILQ_INSERT_AFTER.3 AG_Queue.3:AG_TAILQ_INSERT_BEFORE.3 AG_Queue.3:AG_TAILQ_INSERT_HEAD.3 AG_Queue.3:AG_TAILQ_INSERT_TAIL.3 AG_Queue.3:AG_TAILQ_REMOVE.3 AG_Queue.3:AG_CIRCLEQ_ENTRY.3 AG_Queue.3:AG_CIRCLEQ_HEAD.3 AG_Queue.3:AG_CIRCLEQ_HEAD_.3 AG_Queue.3:AG_CIRCLEQ_HEAD_INITIALIZER.3 AG_Queue.3:AG_CIRCLEQ_FIRST.3 AG_Queue.3:AG_CIRCLEQ_LAST.3 AG_Queue.3:AG_CIRCLEQ_END.3 AG_Queue.3:AG_CIRCLEQ_NEXT.3 AG_Queue.3:AG_CIRCLEQ_PREV.3 AG_Queue.3:AG_CIRCLEQ_EMPTY.3 AG_Queue.3:AG_CIRCLEQ_FOREACH.3 AG_Queue.3:AG_CIRCLEQ_FOREACH_REVERSE.3 AG_Queue.3:AG_CIRCLEQ_INIT.3 AG_Queue.3:AG_CIRCLEQ_INSERT_AFTER.3 AG_Queue.3:AG_CIRCLEQ_INSERT_BEFORE.3 AG_Queue.3:AG_CIRCLEQ_INSERT_HEAD.3 AG_Queue.3:AG_CIRCLEQ_INSERT_TAIL.3 AG_Queue.3:AG_CIRCLEQ_REMOVE.3 AG_String.3:AG_Printf.3 AG_String.3:AG_PrintfN.3 AG_String.3:AG_PrintfP.3 AG_String.3:AG_FreeFmtString.3 AG_String.3:AG_ProcessFmtString.3 AG_String.3:AG_RegisterFmtStringExt.3 AG_String.3:AG_FMTSTRING_ARG.3 AG_String.3:AG_UnregisterFmtStringExt.3 AG_String.3:AG_FmtString.3 AG_String.3:AG_FmtStringExtFn.3 AG_String.3:AG_Strsep.3 AG_String.3:AG_Strdup.3 AG_String.3:AG_TryStrdup.3 AG_String.3:AG_Strlcpy.3 AG_String.3:AG_Strlcat.3 AG_String.3:AG_StrlcpyInt.3 AG_String.3:AG_StrlcatInt.3 AG_String.3:AG_StrlcpyUint.3 AG_String.3:AG_StrlcatUint.3 AG_String.3:AG_ImportUnicode.3 AG_String.3:AG_ExportUnicode.3 AG_String.3:AG_LengthUTF8.3 AG_String.3:AG_CharLengthUTF8.3 AG_String.3:AG_LengthUCS4.3 AG_String.3:AG_LengthUTF8FromUCS4.3 AG_String.3:AG_CharLengthUTF8FromUCS4.3 AG_String.3:AG_Strcasecmp.3 AG_String.3:AG_Strncasecmp.3 AG_String.3:AG_Strcasestr.3 AG_String.3:AG_StrReverse.3 AG_Tbl.3:AG_TblNew.3 AG_Tbl.3:AG_TblInit.3 AG_Tbl.3:AG_TblDestroy.3 AG_Tbl.3:AG_TblLookup.3 AG_Tbl.3:AG_TblLookupPointer.3 AG_Tbl.3:AG_TblExists.3 AG_Tbl.3:AG_TblInsert.3 AG_Tbl.3:AG_TblInsertPointer.3 AG_Tbl.3:AG_TblDelete.3 AG_Tbl.3:AG_TBL_FOREACH.3 AG_Tbl.3:AG_TblHash.3 AG_Tbl.3:AG_TblLookupHash.3 AG_Tbl.3:AG_TblExistsHash.3 AG_Tbl.3:AG_TblInsertHash.3 AG_Tbl.3:AG_TblDeleteHash.3 AG_TextElement.3:AG_TextEnt.3 AG_TextElement.3:AG_TextNew.3 AG_TextElement.3:AG_TextInit.3 AG_TextElement.3:AG_TextSetLimit.3 AG_TextElement.3:AG_TextDestroy.3 AG_TextElement.3:AG_TextClear.3 AG_TextElement.3:AG_TextSetLang.3 AG_TextElement.3:AG_TextGetLang.3 AG_TextElement.3:AG_TextSetLangISO.3 AG_TextElement.3:AG_TextGetLangISO.3 AG_TextElement.3:AG_TextSet.3 AG_TextElement.3:AG_TextSetS.3 AG_TextElement.3:AG_TextSetEnt.3 AG_TextElement.3:AG_TextSetEntS.3 AG_TextElement.3:AG_TextDup.3 AG_TextElement.3:AG_TextLoad.3 AG_TextElement.3:AG_TextSave.3 AG_Threads.3:AG_Mutex.3 AG_Threads.3:AG_MutexInit.3 AG_Threads.3:AG_MutexTryInit.3 AG_Threads.3:AG_MutexInitRecursive.3 AG_Threads.3:AG_MutexTryInitRecursive.3 AG_Threads.3:AG_MutexDestroy.3 AG_Threads.3:AG_MutexLock.3 AG_Threads.3:AG_MutexTryLock.3 AG_Threads.3:AG_MutexUnlock.3 AG_Threads.3:AG_Cond.3 AG_Threads.3:AG_CondInit.3 AG_Threads.3:AG_CondTryInit.3 AG_Threads.3:AG_CondDestroy.3 AG_Threads.3:AG_CondBroadcast.3 AG_Threads.3:AG_CondSignal.3 AG_Threads.3:AG_CondWait.3 AG_Threads.3:AG_CondTimedWait.3 AG_Threads.3:AG_Thread.3 AG_Threads.3:AG_ThreadCreate.3 AG_Threads.3:AG_ThreadTryCreate.3 AG_Threads.3:AG_ThreadCancel.3 AG_Threads.3:AG_ThreadTryCancel.3 AG_Threads.3:AG_ThreadJoin.3 AG_Threads.3:AG_ThreadTryJoin.3 AG_Threads.3:AG_ThreadExit.3 AG_Threads.3:AG_ThreadKill.3 AG_Threads.3:AG_ThreadSelf.3 AG_Threads.3:AG_ThreadEqual.3 AG_Threads.3:AG_ThreadKey.3 AG_Threads.3:AG_ThreadKeyCreate.3 AG_Threads.3:AG_ThreadKeyTryCreate.3 AG_Threads.3:AG_ThreadKeyDelete.3 AG_Threads.3:AG_ThreadKeyTryDelete.3 AG_Threads.3:AG_ThreadKeyGet.3 AG_Threads.3:AG_ThreadKeySet.3 AG_Threads.3:AG_ThreadKeyTrySet.3 AG_Time.3:AG_GetTicks.3 AG_Time.3:AG_Delay.3 AG_Time.3:AG_SetTimeOps.3 AG_Time.3:AG_TimeOps.3 AG_Timer.3:AG_Timeout.3 AG_Timer.3:AG_Timers.3 AG_Timer.3:AG_TimerFn.3 AG_Timer.3:AG_InitTimer.3 AG_Timer.3:AG_AddTimer.3 AG_Timer.3:AG_AddTimerAuto.3 AG_Timer.3:AG_DelTimer.3 AG_Timer.3:AG_DelTimers.3 AG_Timer.3:AG_ResetTimer.3 AG_Timer.3:AG_LockTimers.3 AG_Timer.3:AG_UnlockTimers.3 AG_Timer.3:AG_TimerIsRunning.3 AG_Timer.3:AG_ExecTimer.3 AG_Timer.3:AG_ProcessTimeouts.3 AG_User.3:AG_UserNew.3 AG_User.3:AG_GetUserByName.3 AG_User.3:AG_GetUserByUID.3 AG_User.3:AG_GetRealUser.3 AG_User.3:AG_GetEffectiveUser.3 AG_User.3:AG_UserFree.3 AG_User.3:AG_SetUserOps.3 AG_User.3:AG_UserOps.3 AG_Variable.3:AG_Defined.3 AG_Variable.3:AG_GetVariable.3 AG_Variable.3:AG_AccessVariable.3 AG_Variable.3:AG_FetchVariable.3 AG_Variable.3:AG_FetchVariableOfType.3 AG_Variable.3:AG_LockVariable.3 AG_Variable.3:AG_UnlockVariable.3 AG_Variable.3:AG_PrintVariable.3 AG_Variable.3:AG_CopyVariable.3 AG_Variable.3:AG_DerefVariable.3 AG_Variable.3:AG_CompareVariables.3 AG_Variable.3:AG_Set.3 AG_Variable.3:AG_Unset.3 AG_Variable.3:AG_VariableSubst.3 AG_Variable.3:AG_GetUint.3 AG_Variable.3:AG_InitUint.3 AG_Variable.3:AG_SetUint.3 AG_Variable.3:AG_BindUint.3 AG_Variable.3:AG_BindUintMp.3 AG_Variable.3:AG_GetInt.3 AG_Variable.3:AG_InitInt.3 AG_Variable.3:AG_SetInt.3 AG_Variable.3:AG_BindInt.3 AG_Variable.3:AG_BindIntMp.3 AG_Variable.3:AG_GetUint8.3 AG_Variable.3:AG_InitUint8.3 AG_Variable.3:AG_SetUint8.3 AG_Variable.3:AG_BindUint8.3 AG_Variable.3:AG_BindUint8Mp.3 AG_Variable.3:AG_GetSint8.3 AG_Variable.3:AG_InitSint8.3 AG_Variable.3:AG_SetSint8.3 AG_Variable.3:AG_BindSint8.3 AG_Variable.3:AG_BindSint8Mp.3 AG_Variable.3:AG_GetUint16.3 AG_Variable.3:AG_InitUint16.3 AG_Variable.3:AG_SetUint16.3 AG_Variable.3:AG_BindUint16.3 AG_Variable.3:AG_BindUint16Mp.3 AG_Variable.3:AG_GetSint16.3 AG_Variable.3:AG_InitSint16.3 AG_Variable.3:AG_SetSint16.3 AG_Variable.3:AG_BindSint16.3 AG_Variable.3:AG_BindSint16Mp.3 AG_Variable.3:AG_GetUint32.3 AG_Variable.3:AG_InitUint32.3 AG_Variable.3:AG_SetUint32.3 AG_Variable.3:AG_BindUint32.3 AG_Variable.3:AG_BindUint32Mp.3 AG_Variable.3:AG_GetSint32.3 AG_Variable.3:AG_InitSint32.3 AG_Variable.3:AG_SetSint32.3 AG_Variable.3:AG_BindSint32.3 AG_Variable.3:AG_BindSint32Mp.3 AG_Variable.3:AG_GetUint64.3 AG_Variable.3:AG_InitUint64.3 AG_Variable.3:AG_SetUint64.3 AG_Variable.3:AG_BindUint64.3 AG_Variable.3:AG_BindUint64Mp.3 AG_Variable.3:AG_GetSint64.3 AG_Variable.3:AG_InitSint64.3 AG_Variable.3:AG_SetSint64.3 AG_Variable.3:AG_BindSint64.3 AG_Variable.3:AG_BindSint64Mp.3 AG_Variable.3:AG_GetFloat.3 AG_Variable.3:AG_InitFloat.3 AG_Variable.3:AG_SetFloat.3 AG_Variable.3:AG_BindFloat.3 AG_Variable.3:AG_BindFloatMp.3 AG_Variable.3:AG_GetDouble.3 AG_Variable.3:AG_InitDouble.3 AG_Variable.3:AG_SetDouble.3 AG_Variable.3:AG_BindDouble.3 AG_Variable.3:AG_BindDoubleMp.3 AG_Variable.3:AG_GetString.3 AG_Variable.3:AG_GetStringDup.3 AG_Variable.3:AG_GetStringP.3 AG_Variable.3:AG_InitString.3 AG_Variable.3:AG_SetString.3 AG_Variable.3:AG_SetStringF.3 AG_Variable.3:AG_SetStringNODUP.3 AG_Variable.3:AG_BindString.3 AG_Variable.3:AG_BindStringMp.3 AG_Variable.3:AG_GetPointer.3 AG_Variable.3:AG_InitPointer.3 AG_Variable.3:AG_SetPointer.3 AG_Variable.3:AG_BindPointer.3 AG_Variable.3:AG_BindPointerMp.3 AG_Variable.3:AG_BindFlag.3 AG_Variable.3:AG_BindFlagMp.3 AG_Variable.3:AG_BindFlag8.3 AG_Variable.3:AG_BindFlag8Mp.3 AG_Variable.3:AG_BindFlag16.3 AG_Variable.3:AG_BindFlag16Mp.3 AG_Variable.3:AG_BindFlag32.3 AG_Variable.3:AG_BindFlag32Mp.3 AG_Variable.3:AG_BindObject.3 AG_Variable.3:AG_BindVariable.3 AG_Version.3:AG_ReadVersion.3 AG_Version.3:AG_WriteVersion.3 AG_Version.3:AG_ReadObjectVersion.3 AG_Version.3:AG_WriteObjectVersion.3
# makefile (from 'Makefile', line 11)
LIB_GUID = "9d6bb497-1d2a-4ac0-9f7b-7be68b9077e8"
# makefile (from '../Makefile.config', line 144)
MYSQL_LIBS = 
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from '../Makefile.config', line 167)
RELEASE = Nullability Complete
# environment
PATH = /home/yyf/anaconda3/bin:/home/yyf/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from '../mk/build.proj.mk', line 29)
PREMAKEOUT = premake.lua
# makefile (from '../Makefile.config', line 158)
PROG_GUI_CFLAGS = 
# makefile (from '../mk/build.common.mk', line 54)
INSTALL_INCL = install -c -m 644
# makefile (from '../mk/build.common.mk', line 44)
FIND = find
# makefile (from '../Makefile.config', line 36)
ENABLE_GUI_LIBS = -L../gui -lag_gui
# makefile (from '../mk/build.proj.mk', line 35)
PROJFILELIST = .projfiles2.out
# makefile (from '../Makefile.config', line 118)
HAVE_WEB = no
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# makefile (from '../mk/build.lib.mk', line 56)
YACC = yacc
# makefile (from '../mk/build.lib.mk', line 77)
LTCONFIG = ${LTBASE}/configure
# environment
SESSION_MANAGER = local/yyf-MS-7A54:@/tmp/.ICE-unix/22561,unix/yyf-MS-7A54:/tmp/.ICE-unix/22561
# makefile (from '../Makefile.config', line 96)
HAVE_PACKED_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 103)
HAVE_PTHREAD_MUTEX_RECURSIVE_NP = yes
# makefile (from '../Makefile.config', line 155)
PROG_BUNDLE = 
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from '../Makefile.config', line 126)
ICONV_CFLAGS = 
# environment
GDK_PIXBUF_MODULE_FILE = /home/yyf/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# makefile (from 'Makefile', line 30)
CFLAGS = -D_AGAR_INTERNAL -D_DEFAULT_SOURCE -D_BSD_SOURCE -g  -I/home/yyf/Documents/agar-1.6.0/include ${CORE_CFLAGS} -D_AGAR_CORE_INTERNAL
# makefile (from '../Makefile.config', line 91)
HAVE_NETWORK = yes
 
# makefile (from '../Makefile.config', line 95)
HAVE_OPENGL = yes
# makefile (from '../mk/build.proj.mk', line 32)
PROJECT = 
# environment
SNAP = /snap/code/95
# makefile (from '../Makefile.config', line 132)
LIBEXECDIR = /usr/local/libexec
# makefile (from '../Makefile.config', line 169)
SDL_LIBS = -L/usr/lib/x86_64-linux-gnu -lSDL
# makefile (from '../Makefile.config', line 113)
HAVE_SYS_PARAM_H = 
# makefile (from '../Makefile.config', line 65)
HAVE_CSIDL = no
# makefile (from '../mk/build.common.mk', line 60)
INSTALL_MAN_DIR = mkdir -p
# makefile (from '../Makefile.config', line 90)
HAVE_MYSQL = no
# environment
SNAP_VERSION = 57fd6d01
# environment
CONDA_PREFIX = /home/yyf/anaconda3
# makefile (from '../mk/build.lib.mk', line 45)
AR = ar
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
DISABLE_WAYLAND = 1
# makefile (from '../Makefile.config', line 162)
PROG_TRANSFORM = s,x,x,
# makefile (from '../mk/build.common.mk', line 69)
DEINSTALL_DATA_DIR = rmdir -p
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from '../Makefile.config', line 84)
HAVE_LIBOPENGL32 = 
# environment
INVOCATION_ID = 608a15c5f3024d3baf231a0898605c0b
# makefile (from '../Makefile.config', line 15)
LDFLAGS = 
# makefile (from '../Makefile.config', line 174)
SRCS_GUI = drv_sdl_common.c drv_sdlfb.c drv_sdlgl.c drv_gl_common.c drv_glx.c
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/95/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# makefile (from '../Makefile.config', line 57)
HAVE_CC_GCC = no
# makefile (from '../Makefile.config', line 176)
SSE2_CFLAGS = -msse2
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from '../mk/build.man.mk', line 34)
MAN4 = 
# makefile (from '../mk/build.common.mk', line 51)
INSTALL_PROG = install -c -m 755
# makefile (from '../mk/build.lib.mk', line 65)
LIBL = -ll
# makefile (from '../Makefile.config', line 53)
HAVE_BOUNDED_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 8)
ECHO_N = /bin/echo -n
# environment
LS_COLORS = 
# makefile (from '../Makefile.config', line 86)
HAVE_LONG_DOUBLE = yes
# makefile (from '../Makefile.config', line 34)
DSO_CFLAGS = 
# makefile (from '../Makefile.config', line 185)
SUBDIR_net = net
# makefile (from '../Makefile.config', line 127)
ICONV_LIBS = 
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 64633
# makefile (from '../mk/build.lib.mk', line 38)
LIB_BUNDLE = 
# automatic
%F = $(notdir $%)
# makefile (from '../Makefile.config', line 156)
PROG_CLI_CFLAGS = 
# environment
DISPLAY = :1
# environment
CONDA_EXE = /home/yyf/anaconda3/bin/conda
# makefile (from '../mk/build.lib.mk', line 76)
LIBTOOL = ${LTBASE}/libtool
# makefile (from '../Makefile.config', line 7)
BLDDIR = /home/yyf/Documents/agar-1.6.0
# makefile (from '../Makefile.config', line 6)
SRCDIR = /home/yyf/Documents/agar-1.6.0
# makefile (from '../Makefile.config', line 157)
PROG_CLI_FLAGS = 
# makefile (from '../mk/build.lib.mk', line 64)
LFLAGS = 
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'Makefile', line 12)
LIB_LINKS = ${CORE_LIBS}
# makefile (from '../mk/build.lib.mk', line 99)
OBJS = 
# environment
SNAP_INSTANCE_KEY = 
# environment
PWD = /home/yyf/Documents/agar-1.6.0/core
# makefile (from '../Makefile.config', line 116)
HAVE_VASPRINTF = yes
# makefile (from '../mk/build.lib.mk', line 59)
ADABFLAGS = -x
# default
.LOADED := 
# makefile (from '../Makefile.config', line 142)
MODULEDIR = /usr/local/lib
# environment
SSH_AGENT_PID = 22520
# makefile (from '../mk/build.lib.mk', line 53)
RANLIB = ranlib
# makefile (from '../Makefile.config', line 24)
CLOCK_CFLAGS = 
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# makefile (from '../mk/build.lib.mk', line 88)
CONF = 
# makefile (from '../Makefile.config', line 101)
HAVE_PTHREAD_COND_T_POINTER = no
# makefile (from '../Makefile.config', line 186)
SUBDIR_sg = sg
# makefile (from '../Makefile.config', line 94)
HAVE_OBJC_WARNINGS = yes
# environment
GTK_MODULES = gail:atk-bridge
# makefile (from '../Makefile.config', line 63)
HAVE_COCOA = no
# environment
 
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/yyf
# makefile (from '../mk/build.proj.mk', line 26)
ZIP = zip
# makefile (from '../Makefile.config', line 198)
_MK_BYTE_ORDER = LE
# makefile (from '../Makefile.config', line 62)
HAVE_CLOCK_WIN32 = no
# makefile (from '../mk/build.lib.mk', line 66)
MKDEP = sh ${TOP}/mk/mkdep
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# makefile (from '../mk/build.lib.mk', line 62)
CPPFLAGS = 
# makefile (from '../Makefile.config', line 42)
FREETYPE_CFLAGS = -I/usr/include/freetype2 -I/usr/include/libpng16
# environment
VSCODE_CODE_CACHE_PATH = /home/yyf/.config/Code/CachedData/57fd6d0195bb9b9d1b49f6da5db789060795de47
# makefile (from '../Makefile.config', line 105)
HAVE_PTHREAD_T_POINTER = yes
# makefile (from '../Makefile.config', line 25)
CLOCK_LIBS = 
# environment
LOGNAME = yyf
# makefile (from '../mk/build.man.mk', line 32)
MAN2 = 
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = Bx-AkJMwqp53F8JwmcA_kCyZNudDIHbMfRP3bs0BlIaoBbuFVsOJ
# environment
CONDA_PROMPT_MODIFIER = (base) 
# automatic
+F = $(notdir $+)
# makefile (from '../Makefile.config', line 52)
HAVE_ASPRINTF = yes
# makefile (from '../mk/build.proj.mk', line 37)
PROJNOCLEAN = no
# makefile (from '../Makefile.config', line 154)
PORTAUDIO_LIBS = 
# makefile (from '../Makefile.config', line 29)
DATADIR = /usr/local/share/agar
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
SNAP_USER_COMMON = /home/yyf/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from '../mk/build.proj.mk', line 25)
PREMAKE = premake
# makefile (from '../core/Makefile.inc', line 12)
CORE_LINKS = ag_core ${CORE_LIBS}
# makefile (from '../Makefile.config', line 43)
FREETYPE_LIBS = -lfreetype
# makefile (from '../Makefile.config', line 109)
HAVE_SNDFILE = no
# makefile (from '../Makefile.config', line 179)
STATEDIR = /usr/local/var
# makefile (from '../Makefile.config', line 83)
HAVE_LD_STATIC_LIBGCC = 
# makefile (from '../Makefile.config', line 139)
MATH_CFLAGS = 
# makefile (from '../Makefile.config', line 148)
PATH_SEPARATOR = :
# environment
LC_TIME = zh_CN.UTF-8
# environment
SNAP_REAL_HOME = /home/yyf
# makefile (from 'Makefile', line 15)
MAN3 = AG_ByteSwap.3 AG_CPUInfo.3 AG_Config.3 AG_Core.3 AG_DSO.3 AG_DataSource.3 AG_Db.3 AG_Error.3 AG_Event.3 AG_EventLoop.3 AG_Execute.3 AG_File.3 AG_Getopt.3 AG_Intro.3 AG_Limits.3 AG_Object.3 AG_Queue.3 AG_String.3 AG_Tbl.3 AG_TextElement.3 AG_Threads.3 AG_Time.3 AG_Timer.3 AG_User.3 AG_Variable.3 AG_Version.3
# makefile (from '../mk/build.common.mk', line 64)
DEINSTALL_DATA = rm -f
# environment
CONDA_DEFAULT_ENV = base
# default
MAKE = $(MAKE_COMMAND)
# makefile (from '../Makefile.config', line 135)
LOCALEDIR = /usr/local/share/agar/locale
# environment
QT_IM_MODULE = ibus
# makefile (from '../Makefile.config', line 199)
_MK_HAVE_FLOAT_H = yes
# makefile (from 'Makefile', line 22)
SRCS = byteswap.c class.c config.c core.c cpuinfo.c data_source.c db.c dir.c dso.c error.c event.c exec.c file.c getopt.c load_integral.c load_real.c load_string.c load_version.c object.c string.c tbl.c text.c time.c time_dummy.c timeout.c threads.c vasprintf.c vsnprintf.c user.c user_dummy.c user_getenv.c variable.c vec.c ${SRCS_CORE}
# environment
SNAP_USER_DATA = /home/yyf/snap/code/95
# makefile (from '../Makefile.config', line 180)
SUBDIR_au = 
# environment
SHLVL = 0
 
# makefile (from '../mk/build.lib.mk', line 52)
OBJC = cc
# makefile (from '../mk/build.lib.mk', line 46)
ASM = nasm
# makefile (from '../Makefile.config', line 20)
BINDIR = /usr/local/bin
# makefile (from '../mk/build.lib.mk', line 75)
LIBTOOL_COOKIE = ${TOP}/mk/libtool.ok
# makefile (from '../Makefile.config', line 106)
HAVE_PURE_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 21)
CC = /usr/bin/clang
# makefile (from '../mk/build.proj.mk', line 30)
PREMAKEFLAGS = 
# makefile (from '../Makefile.config', line 39)
EXECSUFFIX = 
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# makefile (from '../mk/build.lib.mk', line 44)
ADAPREPFILE = 
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-f21f5cbd-4dad-4a27-91af-4a52b861063e.sock
# makefile (from '../mk/build.lib.mk', line 71)
YFLAGS = -d
# default
MAKE_VERSION := 4.2.1
# environment
USER = yyf
# environment
SNAP_REVISION = 95
# makefile (from '../Makefile.config', line 205)
_MK_HAVE_UNISTD_H = yes
# makefile (from '../Makefile.config', line 26)
COCOA_CFLAGS = 
# makefile (from '../Makefile.config', line 150)
PKGCONFIG_LIBDIR = ${PREFIX}/lib/pkgconfig
# environment
LC_MONETARY = zh_CN.UTF-8
# makefile
.DEFAULT_GOAL := all
# makefile (from '../Makefile.config', line 203)
_MK_HAVE_SYS_STAT_H = yes
# makefile (from '../Makefile.config', line 38)
ENABLE_NLS = no
# makefile (from '../Makefile.config', line 108)
HAVE_SHL_LOAD = no
# environment
XDG_CURRENT_DESKTOP = Unity
# makefile (from '../core/Makefile.inc', line 13)
CORE_LINKS_STATIC = ag_core_static ${CORE_LIBS}
# makefile (from '../Makefile.config', line 73)
HAVE_FORMAT_ATTRIBUTE = yes
# makefile (from '../mk/build.common.mk', line 63)
DEINSTALL_LIB = rm -f
# makefile (from '../Makefile.config', line 159)
PROG_GUI_FLAGS = 
# makefile (from '../Makefile.config', line 152)
PNG_LIBS = -L/home/yyf/anaconda3/lib -lpng16
# command line
REL = core/
# makefile (from '../mk/build.common.mk', line 32)
DESTDIR = 
# makefile (from '../mk/build.man.mk', line 35)
MAN5 = 
# makefile (from '../Makefile.config', line 112)
HAVE_SSE3 = yes
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from '../Makefile.config', line 13)
USE_LIBTOOL = No
# environment
LC_TELEPHONE = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 27)
COCOA_LIBS = 
# makefile (from '../mk/build.common.mk', line 70)
DEINSTALL_INCL_DIR = rmdir -p
# makefile (from '../Makefile.config', line 164)
PTHREADS_LIBS = -lpthread
# makefile (from '../Makefile.config', line 182)
SUBDIR_map = 
# makefile (from '../mk/build.lib.mk', line 70)
PICFLAGS = -fPIC
# environment
CONDA_SHLVL = 1
# makefile (from '../mk/build.lib.mk', line 68)
MKDEP_ADAFLAGS = -M -u -v
# default
MAKE_COMMAND := make
# makefile (from 'Makefile', line 8)
LIB_REVISION = 0
# environment
OLDPWD = /home/yyf/Documents/agar-1.6.0
# makefile (from '../Makefile.config', line 131)
LIBDIR = /usr/local/lib
# makefile (from '../Makefile.config', line 170)
SNDFILE_CFLAGS = 
# makefile (from '../mk/build.lib.mk', line 97)
INCL = 
# makefile (from '../Makefile.config', line 183)
SUBDIR_math = math
 
# makefile (from '../mk/build.lib.mk', line 41)
ADABIND = gnatbind
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile (from '../Makefile.config', line 107)
HAVE_SDL = yes
# makefile (from '../Makefile.config', line 44)
GETTEXT_CFLAGS = 
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-6e94e96f-1.67.0-main.sock
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from '../mk/build.man.mk', line 38)
MAN8 = 
# makefile (from '../Makefile.config', line 75)
HAVE_GETTEXT = no
# makefile (from '../Makefile.config', line 35)
DSO_LIBS = -ldl
# makefile (from '../core/Makefile.inc', line 8)
CORE_CFLAGS = ${PTHREADS_XOPEN_CFLAGS} ${ALTIVEC_CHECK_CFLAGS} ${GETTEXT_CFLAGS} ${DSO_CFLAGS} ${DB4_CFLAGS} ${DB5_CFLAGS} ${MYSQL_CFLAGS} ${CLOCK_CFLAGS} ${ZLIB_CFLAGS}
# makefile (from '../mk/build.lib.mk', line 50)
LEX = lex
# makefile (from '../Makefile.config', line 40)
FONTCONFIG_CFLAGS = -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
# makefile (from '../Makefile.config', line 119)
HAVE_WGL = no
# makefile
MAKEFLAGS = pqrRw -- $(MAKEOVERRIDES)
# makefile (from '../mk/build.common.mk', line 58)
INSTALL_DATA_DIR = mkdir -p
# makefile (from '../mk/build.lib.mk', line 103)
SHOBJS = 
# environment
MFLAGS = -pqrRw
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from '../Makefile.config', line 171)
SNDFILE_LIBS = 
# makefile (from '../Makefile.config', line 136)
MANDIR = /usr/local/man
# makefile (from '../mk/build.man.mk', line 42)
NOMAN = 
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '../mk/build.common.mk', line 52)
INSTALL_LIB = install -c -m 644
# makefile (from '../Makefile.config', line 45)
GETTEXT_LIBS = 
# makefile (from '../mk/build.man.mk', line 40)
MANS = ${MAN1} ${MAN2} ${MAN3} ${MAN4} ${MAN5} ${MAN6} ${MAN7} ${MAN8} ${MAN9}
# environment
GDK_BACKEND = x11
# makefile (from '../Makefile.config', line 137)
MATH_C99_CFLAGS = 
# makefile (from '../Makefile.config', line 64)
HAVE_CONST_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 189)
SYSCONFDIR = /usr/local/etc
# makefile (from '../core/Makefile.inc', line 3)
CORE_LIBS = ${PTHREADS_XOPEN_LIBS} ${GETTEXT_LIBS} ${DSO_LIBS} ${DB4_LIBS} ${DB5_LIBS} ${MYSQL_LIBS} ${CLOCK_LIBS} ${WINSOCK1_LIBS} ${WINSOCK2_LIBS} ${ZLIB_LIBS}
# makefile (from '../Makefile.config', line 125)
HAVE___INT64 = no
# makefile (from '../Makefile.config', line 68)
HAVE_DB5 = no
# environment
LC_PAPER = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 41)
FONTCONFIG_LIBS = -lfontconfig -lfreetype
# makefile (from '../Makefile.config', line 200)
_MK_HAVE_LIMITS_H = yes
# makefile (from '../mk/build.lib.mk', line 67)
MKDEP_ADA = gnatmake
# makefile (from '../mk/build.man.mk', line 31)
MAN1 = 
# environment
LC_IDENTIFICATION = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 197)
ZLIB_LIBS = 
# makefile (from '../Makefile.config', line 72)
HAVE_FONTCONFIG = yes
# environment
QT_ACCESSIBILITY = 1
# makefile (from '../Makefile.config', line 163)
PTHREADS_CFLAGS = 
# makefile (from '../Makefile.config', line 22)
CC_COMPILE = -c
# makefile (from '../mk/build.common.mk', line 49)
INSTALL_DESTDIR = mkdir -p
# makefile (from '../Makefile.config', line 172)
SRCS_AU = 
# makefile (from '../Makefile.config', line 138)
MATH_C99_LIBS = -lm
# makefile (from '../mk/build.lib.mk', line 90)
CONFIGSCRIPTS = 
# makefile (from '../Makefile.config', line 177)
SSE3_CFLAGS = -msse3
 
# default
MAKEFILES := 
# makefile (from '../Makefile.config', line 19)
AVAIL_PCMODULES = agar-core.pc agar.pc agar-math.pc agar-net.pc agar-sg.pc agar-sk.pc agar-vg.pc
# makefile (from '../Makefile.config', line 160)
PROG_PREFIX = 
# environment
SNAP_COOKIE = Bx-AkJMwqp53F8JwmcA_kCyZNudDIHbMfRP3bs0BlIaoBbuFVsOJ
# makefile (from '../Makefile.config', line 58)
HAVE_CC_MCONSOLE = no
# makefile (from '../mk/build.lib.mk', line 74)
LTBASE = ${TOP}/mk/libtool
# environment
LC_NUMERIC = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 17)
ALTIVEC_CFLAGS = 
# makefile (from '../Makefile.config', line 3)
BUILD = x86_64-unknown-linux-gnu
# makefile (from '../Makefile.config', line 11)
NOMANLINKS = yes
# automatic
<F = $(notdir $<)
# makefile (from '../mk/build.lib.mk', line 54)
SH = sh
# makefile (from '../mk/build.common.mk', line 67)
DEINSTALL_PROG_DIR = rmdir -p
# makefile (from '../mk/build.common.mk', line 68)
DEINSTALL_LIB_DIR = rmdir -p
# makefile (from '../Makefile.config', line 111)
HAVE_SSE2 = yes
# makefile (from '../mk/build.proj.mk', line 33)
PROJDIR = ProjectFiles
# makefile (from '../mk/build.lib.mk', line 49)
CXX = c++
# environment
LC_MEASUREMENT = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 48)
GLX_CFLAGS = 
# makefile (from '../Makefile.config', line 99)
HAVE_PTHREADS = yes
# makefile (from '../Makefile.config', line 60)
HAVE_CC_WARNINGS = yes
# environment
SNAP_NAME = code
# makefile (from '../Makefile.config', line 93)
HAVE_OBJC = yes
# makefile (from '../Makefile.config', line 76)
HAVE_GLEXT = yes
# makefile (from 'Makefile', line 6)
LIB = ag_core
# makefile (from '../mk/build.man.mk', line 30)
PAGER = more
# makefile (from '../Makefile.config', line 78)
HAVE_GLX = yes
# environment
LC_ALL = C
# makefile (from '../Makefile.config', line 89)
HAVE_MATH_C99 = yes
# makefile (from '../Makefile.config', line 194)
XINERAMA_CFLAGS = 
# makefile (from '../Makefile.config', line 56)
HAVE_CC_CLANG = yes
# makefile (from '../Makefile.config', line 87)
HAVE_MALLOC_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 18)
AVAIL_CONFIGSCRIPTS = agar-core-config agar-config agar-math-config agar-net-config agar-sg-config agar-sk-config agar-vg-config
# environment
CONDA_PYTHON_EXE = /home/yyf/anaconda3/bin/python
# makefile (from '../mk/build.proj.mk', line 36)
PROJCONFIGDIR = 
# makefile (from '../Makefile.config', line 128)
INCLDIR = /usr/local/include/agar
# makefile (from '../Makefile.config', line 134)
LIB_SHARED = Yes
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# makefile (from '../Makefile.config', line 49)
GLX_LIBS = -L/usr/local/lib -lGL -lX11
# makefile (from '../mk/build.lib.mk', line 82)
LTCONFIG_LOG = ${LTBASE}/config.log
# automatic
^F = $(notdir $^)
# makefile (from '../Makefile.config', line 133)
LIBTOOLOPTS_SHARED = 
# makefile (from '../mk/build.proj.mk', line 28)
MKPROJFILES = mkprojfiles
# makefile (from '../Makefile.config', line 74)
HAVE_FREETYPE = yes
# makefile (from '../mk/build.proj.mk', line 34)
PROJFILESEXTRA = 
 
# makefile (from '../Makefile.config', line 195)
XINERAMA_LIBS = -lXinerama
# default
SUFFIXES := 
# makefile (from '../mk/build.lib.mk', line 51)
LN = ln
# makefile (from '../Makefile.config', line 66)
HAVE_CYGWIN = no
# environment
SNAP_REEXEC = 
# environment
_CE_M = 
# makefile (from 'Makefile', line 13)
LIBS = ${CORE_LIBS}
# environment
CHROME_DESKTOP = code-url-handler.desktop
# makefile (from '../Makefile.config', line 79)
HAVE_ICONV = no
# environment
WINDOWPATH = 2
# makefile (from '../mk/build.common.mk', line 56)
INSTALL_PROG_DIR = mkdir -p
# makefile (from '../Makefile.config', line 121)
HAVE_XF86MISC = no
# makefile (from '../mk/build.lib.mk', line 102)
SRCS_GENERATED = 
# makefile (from '../Makefile.config', line 50)
HAVE_ALIGNED_ATTRIBUTE = yes
# makefile (from '../Makefile.config', line 168)
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT  -I/usr/include
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'Makefile', line 10)
LIB_INSTALL = Yes
# makefile (from '../mk/build.common.mk', line 53)
INSTALL_DATA = install -c -m 644
# makefile (from '../mk/build.proj.mk', line 39)
PROJFILES = windows:vs2005:: windows-xp:vs2005::
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from '../Makefile.config', line 181)
SUBDIR_gui = gui
# makefile (from '../mk/build.common.mk', line 29)
BSDBUILD_VERSION = 3.2
# makefile (from '../Makefile.config', line 165)
PTHREADS_XOPEN_CFLAGS = -U_XOPEN_SOURCE -D_XOPEN_SOURCE=600
# makefile (from '../Makefile.config', line 9)
HAVE_MANDOC = yes
# default
.RECIPEPREFIX := 
# makefile (from '../Makefile.config', line 85)
HAVE_LIBPNG14 = yes
# makefile (from '../Makefile.config', line 153)
PORTAUDIO_CFLAGS = 
# environment
LC_ADDRESS = zh_CN.UTF-8
# makefile (from '../Makefile.config', line 120)
HAVE_X11 = yes
# makefile (from '../mk/build.lib.mk', line 55)
WINDRES = 
# makefile (from '../Makefile.config', line 147)
PACKAGE = Agar
# environment
LANG = C
# makefile (from '../mk/build.man.mk', line 37)
MAN7 = 
# makefile (from '../Makefile.config', line 12)
CTAGS = 
# makefile (from '../Makefile.config', line 59)
HAVE_CC_MWINDOWS = no
# makefile (from '../Makefile.config', line 115)
HAVE_UNUSED_VARIABLE_ATTRIBUTE = yes
# makefile (from '../mk/build.lib.mk', line 83)
LIBTOOLFLAGS = 
# environment
VSCODE_PID = 64681
# makefile (from '../mk/build.proj.mk', line 27)
ZIPFLAGS = -r
# makefile (from '../mk/build.lib.mk', line 69)
OBJCFLAGS = 
# makefile (from '../Makefile.config', line 166)
PTHREADS_XOPEN_LIBS = -lpthread
# makefile (from 'Makefile', line 7)
LIB_CURRENT = 6
# makefile (from '../mk/build.lib.mk', line 92)
CTAGSFLAGS = 
# environment
_CE_CONDA = 
# makefile (from '../Makefile.config', line 37)
ENABLE_MICRO_LIBS = 
# makefile (from '../Makefile.config', line 4)
HOST = x86_64-unknown-linux-gnu
# makefile (from '../mk/build.common.mk', line 42)
SUDO = 
# makefile (from '../Makefile.config', line 123)
HAVE_XKB = yes
# makefile (from '../Makefile.config', line 149)
 
PKGCONFIG = /usr/bin/pkg-config
# variable set hash-table stats:
# Load=459/1024=45%, Rehash=0, Collisions=1488/1869=80%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2051, inode 156896223): 182 files, 10 impossibilities.
# ../mk (device 2051, inode 156896231): 33 files, 10 impossibilities.
# ../core (device 2051, inode 156896223): 182 files, 10 impossibilities.
# .. (device 2051, inode 156896222): 52 files, 2 impossibilities.

# 449 files, 32 impossibilities in 4 directories.

# Implicit Rules

%.ads:

%.o: %.ads
#  recipe to execute (from '../mk/build.lib.mk', line 124):
	@_cflags="${CFLAGS}"; FB=`echo "$<" |sed 's/.ads$$//'`; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="$$_cflags ${PICFLAGS}"; fi; \
	if [ -e "$$FB.adb" ]; then \
	    echo "${ADA} ${ADAFLAGS} $$_cflags -c $$FB.adb"; \
	    ${ADA} ${ADAFLAGS} $$_cflags -c $$FB.adb; \
	else \
	    echo "${ADA} ${ADAFLAGS} $$_cflags -c $<"; \
	    ${ADA} ${ADAFLAGS} $$_cflags -c $<; \
	fi

%.adb:

%.o: %.adb
#  recipe to execute (from '../mk/build.lib.mk', line 118):
	@_cflags="${CFLAGS}"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="$$_cflags ${PICFLAGS}"; fi; \
	echo "${ADA} ${ADAFLAGS} $$_cflags -c $<"; \
	${ADA} ${ADAFLAGS} $$_cflags -c $<

%.asm:

%.o: %.asm
#  recipe to execute (from '../mk/build.lib.mk', line 136):
	${ASM} ${ASMFLAGS} ${CPPFLAGS} -o $@ $<

%.c:

%.lo: %.c
#  recipe to execute (from '../mk/build.lib.mk', line 158):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CC} ${LIBTOOLFLAGS} ${CFLAGS} ${CPPFLAGS} -o $@ ${CC_COMPILE} $<

%.o: %.c
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

%.cc:

%.lo: %.cc
#  recipe to execute (from '../mk/build.lib.mk', line 180):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CXX} ${LIBTOOLFLAGS} ${CXXFLAGS} ${CPPFLAGS} -o $@ -c $<

%.o: %.cc
#  recipe to execute (from '../mk/build.lib.mk', line 174):
	@_cxxflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cxxflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cxxflags="$$_cxxflags -pg -DPROF"; fi; \
	echo "${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<"; \
	${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<

%.cpp:

%.lo: %.cpp
#  recipe to execute (from '../mk/build.lib.mk', line 180):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CXX} ${LIBTOOLFLAGS} ${CXXFLAGS} ${CPPFLAGS} -o $@ -c $<

%.o: %.cpp
#  recipe to execute (from '../mk/build.lib.mk', line 174):
	@_cxxflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cxxflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cxxflags="$$_cxxflags -pg -DPROF"; fi; \
	echo "${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<"; \
	${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<

%.l:

%: %.l
 
#  recipe to execute (from '../mk/build.lib.mk', line 185):
	${LEX} ${LFLAGS} -o$@.yy.c $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.yy.c ${LIBL} ${LIBS}"; 
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.yy.c ${LIBL} ${LIBS}
	@rm -f $@.yy.c

%.o: %.l
#  recipe to execute (from '../mk/build.lib.mk', line 193):
	${LEX} ${LFLAGS} -o$@.yy.c $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.yy.c"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.yy.c
	@mv -f $@.yy.o $@
	@rm -f $@.yy.c

%.lo:

%.m:

%.lo: %.m
#  recipe to execute (from '../mk/build.lib.mk', line 169):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${OBJC} ${LIBTOOLFLAGS} ${CFLAGS} ${OBJCFLAGS} ${CPPFLAGS} -o $@ -c $<

%.o: %.m
#  recipe to execute (from '../mk/build.lib.mk', line 163):
	@_objcflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _objcflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _objcflags="$$_objcflags -pg -DPROF"; fi; \
	echo "${OBJC} ${CFLAGS} ${OBJCFLAGS} $$_objcflags ${CPPFLAGS} -o $@ -c $<"; \
	${OBJC} ${CFLAGS} ${OBJCFLAGS} $$_objcflags ${CPPFLAGS} -o $@ -c $<

%.o:

%.y:

%: %.y
#  recipe to execute (from '../mk/build.lib.mk', line 204):
	${YACC} ${YFLAGS} -b $@ $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.tab.c ${LIBS}"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.tab.c ${LIBS}
	@rm -f $@.tab.c

%.o: %.y
#  recipe to execute (from '../mk/build.lib.mk', line 212):
	${YACC} ${YFLAGS} -b $@ $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.tab.c"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.tab.c
	@mv -f $@.tab.o $@
	@rm -f $@.tab.c

# 26 implicit rules, 0 (0.0%) terminal.

# Files

deinstall-lib: check-libtool
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 793):
	@if [ "${LIB}" != "" ]; then \
	    if [ "${USE_LIBTOOL}" = "Yes" ]; then \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --mode=uninstall rm -f ${LIBDIR}/lib${LIB}.la"; \
	        ${SUDO} ${LIBTOOL} ${LIBTOOLOPTS} --mode=uninstall rm -f ${DESTDIR}${LIBDIR}/lib${LIB}.la; \
	    else \
	    	if [ "${LIB_SHARED}" = "Yes" ]; then \
	            case "${HOST}" in \
	            *-darwin*) \
	                _libout="lib${LIB}.${LIB_CURRENT}.dylib"; \
	                _libnames="$$_libout lib${LIB}.dylib"; \
		        ;; \
	            *-mingw*) \
	                _libout="${LIB}.dll"; \
	                _libnames="$$_libout"; \
		        ;; \
	            *) \
	                _libout="lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE}"; \
	                _libnames="$$_libout lib${LIB}.so.${LIB_CURRENT} lib${LIB}.so"; \
	                ;; \
	            esac; \
		    for F in $$_libnames; do \
	                echo "${DEINSTALL_LIB} ${LIBDIR}/$$F"; \
	                ${SUDO} ${DEINSTALL_LIB} ${DESTDIR}${LIBDIR}/$$F; \
		    done; \
		fi; \
	        if [ "${HAVE_CC65}" = "yes" ]; then \
	            echo "${DEINSTALL_LIB} ${LIBDIR}/${LIB}.lib"; \
	            ${SUDO} ${DEINSTALL_LIB} ${DESTDIR}${LIBDIR}/${LIB}.lib; \
	        else \
	            echo "${DEINSTALL_LIB} ${LIBDIR}/lib${LIB}.a"; \
	            ${SUDO} ${DEINSTALL_LIB} ${DESTDIR}${LIBDIR}/lib${LIB}.a; \
	        fi; \
	        echo "${DEINSTALL_LIB} ${LIBDIR}/lib${LIB}.la"; \
	        ${SUDO} ${DEINSTALL_LIB} ${DESTDIR}${LIBDIR}/lib${LIB}.la; \
	    fi; \
	    for F in ${SRCS}; do \
	        if echo $$F | grep -q '.ad[bs]$$'; then \
		    FB=`echo "$$F" | sed 's/.ad[bs]$$//'`; \
	            if [ -e "$$FB.ads" ]; then \
	                echo "${DEINSTALL_INCL} ${INCLDIR}/$$FB.ads"; \
	                ${SUDO} ${DEINSTALL_INCL} ${DESTDIR}${INCLDIR}/$$FB.ads; \
		    fi; \
	            echo "${DEINSTALL_DATA} ${INCLDIR}/$$FB.ali"; \
	            ${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${INCLDIR}/$$FB.ali; \
                fi; \
	    done; \
	fi
	@if [ "${DATAFILES}" != "" ]; then \
	    for F in ${DATAFILES}; do \
	        echo "${DEINSTALL_DATA} ${DATADIR}/$$F"; \
	        ${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${DATADIR}/$$F; \
	    done; \
	fi
	@if [ "${DATAFILES_SRC}" != "" ]; then \
	    for F in ${DATAFILES_SRC}; do \
	        echo "${DEINSTALL_DATA} ${DATADIR}/$$F"; \
	        ${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${DATADIR}/$$F; \
	    done; \
	fi
	@if [ "${CONF}" != "" ]; then \
	    echo "+----------------"; \
	    echo "| To completely deinstall lib${LIB} you need to perform."; \
	    echo "| the following steps as root:"; \
	    echo "|"; \
	    for F in ${CONF}; do \
	        if [ -e "${DESTDIR}${SYSCONFDIR}/$$F" ]; then \
	            echo "| rm -f $$F"; \
	        fi; \
	    done; \
	    echo "|"; \
	    echo "| Do not do this if you plan on re-installing lib${LIB}"; \
	    echo "| at some future time."; \
	    echo "+----------------"; \
	fi
	@if [ "${CONFIGSCRIPTS}" != "" ]; then \
            for F in ${CONFIGSCRIPTS}; do \
                echo "${DEINSTALL_PROG} ${BINDIR}/$$F"; \
                ${SUDO} ${DEINSTALL_PROG} ${DESTDIR}${BINDIR}/$$F; \
            done; \
	fi
	@if [ "${PKGCONFIG}" != "" -a "${PCMODULES}" != "" ]; then \
	    for F in ${PCMODULES}; do \
	        echo "${DEINSTALL_DATA} ${PKGCONFIG_LIBDIR}/$$F"; \
	        ${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${PKGCONFIG_LIBDIR}/$$F; \
	    done; \
	fi

# Not a target:
../mk/build.proj.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

clean-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
 
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 66):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ clean); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

lint-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 372):
	@if [ "${HAVE_MANDOC}" != "yes" ]; then \
		echo "Cannot find mandoc (re-run ./configure?)"; \
		exit 1; \
	fi
	@if [ "${MAN1}" != "" ]; then for F in ${MAN1}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN2}" != "" ]; then for F in ${MAN2}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN3}" != "" ]; then for F in ${MAN3}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN4}" != "" ]; then for F in ${MAN4}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN5}" != "" ]; then for F in ${MAN5}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN6}" != "" ]; then for F in ${MAN6}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN7}" != "" ]; then for F in ${MAN7}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN8}" != "" ]; then for F in ${MAN8}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN9}" != "" ]; then for F in ${MAN9}; do ${MANDOC} -Tlint $$F; done; fi

clean-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 82):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ clean); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

clean-lib:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 494):
	@if [ "${LIB}" != "" -a "${SRCS}" != "" ]; then \
	    if [ "${USE_LIBTOOL}" = "Yes" ]; then \
	        _objs="${SHOBJS}"; \
	        if [ "$$_objs" = "" ]; then \
                    for F in ${SRCS}; do \
	    	        F=`echo $$F | sed 's/.ad[bs]$$/.lo/'`; \
	    	        F=`echo $$F | sed 's/.asm$$/.lo/'`; \
	    	        F=`echo $$F | sed 's/.[clym]$$/.lo/'`; \
	    	        F=`echo $$F | sed 's/.cc$$/.lo/'`; \
	    	        F=`echo $$F | sed 's/.cpp$$/.lo/'`; \
			_objs="$$_objs $$F"; \
	    	        F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.asm$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.cc$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.cpp$$/.o/'`; \
			_objs="$$_objs $$F"; \
                    done; \
		else \
		    if [ "${SHOBJS}" != "" ]; then \
		        for F in ${SHOBJS}; do \
	    	            F=`echo $$F | sed 's/.lo$$/.o/'`; \
			    _objs="$$_objs $$F"; \
                        done; \
		    fi; \
		fi; \
	    	echo "rm -f lib${LIB}.la $$_objs"; \
	    	rm -f lib${LIB}.la $$_objs; \
		if [ -e ".libs" ]; then \
		    echo "rm -fR .libs"; \
		    rm -fR .libs; \
		fi; \
	    else \
	        _objs="${OBJS}"; \
	        if [ "$$_objs" = "" ]; then \
                    for F in ${SRCS}; do \
			if echo $$F | grep -q '.ad[bs]$$'; then \
			    FB=`echo "$$F" | sed 's/.ad[bs]$$//'`; \
			    _objs="$$_objs $$FB.ali"; \
			fi; \
	    	        F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	    	    	F=`echo $$F | sed 's/.asm$$/.o/'`; \
	   	        F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.cc$$/.o/'`; \
	    	        F=`echo $$F | sed 's/.cpp$$/.o/'`; \
			_objs="$$_objs $$F"; \
                    done; \
	    	fi; \
		if [ "$$_objs" != "" ]; then \
	    	    echo "rm -f $$_objs"; \
	    	    rm -f $$_objs; \
		fi; \
		case "${HOST}" in \
		*-darwin*) \
	   	    echo "rm -f lib${LIB}.a lib${LIB}.${LIB_CURRENT}.dylib lib${LIB}.dylib lib${LIB}.la"; \
	   	    rm -f lib${LIB}.a lib${LIB}.${LIB_CURRENT}.dylib \
		          lib${LIB}.dylib lib${LIB}.la; \
		    ;; \
		*-mingw*) \
	   	    echo "rm -f lib${LIB}.a lib${LIB}_dll.lib ${LIB}.dll lib${LIB}.la"; \
	   	    rm -f lib${LIB}.a lib${LIB}_dll.lib ${LIB}.dll lib${LIB}.la; \
		    ;; \
		*) \
		    echo "rm -f lib${LIB}.a lib${LIB}.so lib${LIB}.so.${LIB_CURRENT} lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE} lib${LIB}.la"; \
		    rm -f lib${LIB}.a lib${LIB}.so lib${LIB}.so.${LIB_CURRENT} \
		          lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE} \
			  lib${LIB}.la; \
		    ;; \
		esac; \
	    fi; \
	fi
	@if [ "${CLEANFILES}" != "" ]; then \
	    _cleanfiles=""; \
	    for F in ${CLEANFILES}; do \
	        if [ -e $$F ]; then _cleanfiles="$$_cleanfiles $$F"; fi; \
	    done; \
	    if [ "$$_cleanfiles" != "" ]; then \
	        echo "rm -f ${CLEANFILES}"; \
	        rm -f ${CLEANFILES}; \
	    fi; \
	fi
	@if [ "${SRCS_GENERATED}" != "" ]; then \
	    echo "rm -f ${SRCS_GENERATED}"; \
	    rm -f ${SRCS_GENERATED}; \
	fi
	@if [ "${HAVE_CC65}" = "yes" ]; then \
	    echo "rm -f ${LIB}.lib *.s"; \
	    rm -f ${LIB}.lib *.s; \
	fi

includes:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 881):
	(cd ${TOP} && ${MAKE} install-includes)

# Not a target:
.adb:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.adb.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 118):
	@_cflags="${CFLAGS}"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="$$_cflags ${PICFLAGS}"; fi; \
	echo "${ADA} ${ADAFLAGS} $$_cflags -c $<"; \
	${ADA} ${ADAFLAGS} $$_cflags -c $<

all: all-subdir libag_core.a libag_core.so libag_core.la all-subdir
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/40=0%

# Not a target:
.m:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

proj-package:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.proj.mk', line 47):
	@if [ "${PROJECT}" = "" ]; then \
	    echo "cat Makefile | ${MKPROJFILES} > ${PREMAKEOUT}"; \
	    cat Makefile | \
	        env PROJTARGET="${PROJTARGET}" PROJOS="${PROJOS}" \
		PROJFLAVOR="" PROJINCLUDES="${TOP}/configure.lua" \
	        ${MKPROJFILES} > ${PREMAKEOUT}; \
	fi

.y:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 204):
	${YACC} ${YFLAGS} -b $@ $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.tab.c ${LIBS}"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.tab.c ${LIBS}
	@rm -f $@.tab.c

 
.PHONY: install deinstall includes clean cleandir regress depend configure install-lib deinstall-lib clean-lib cleandir-lib configure-lib _lib_objs _lib_ltobjs lib-tags check-libtool none proj configure-proj all-subdir clean-subdir cleandir-subdir install-subdir deinstall-subdir configure-subdir depend-subdir regress-subdir all-subdir-ifexists clean-subdir-ifexists cleandir-subdir-ifexists install-subdir-ifexists deinstall-subdir-ifexists configure-subdir-ifexists depend-subdir-ifexists regress-subdir-ifexists proj-package-subdir proj-clean-subdir install deinstall clean cleandir regress depend lint install-man deinstall-man clean-man man manlinks all-manlinks lint-man
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.manlinks.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-17 21:34:38
#  File has been updated.
#  Successfully updated.

cleandir-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 237):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ cleandir); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

manlinks: Makefile
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 349):
	echo > .manlinks.mk
	@if [ "${MANS}" != "       " ]; then \
		for F in ${MANS}; do \
			echo "cat $$F |manlinks.pl $$F >>.manlinks.mk"; \
			cat $$F |perl ${TOP}/mk/manlinks.pl $$F >>.manlinks.mk; \
		done; \
	fi

cleandir-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 253):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ cleandir); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

install-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 62):
	@if [ "${NOMAN}" != "yes" ]; then \
		if [ "${MANS}" != "       " ]; then \
			if [ "${DESTDIR}" != "" ]; then \
				echo "# Installing under DESTDIR=${DESTDIR}:"; \
				if [ ! -e "${DESTDIR}" ]; then \
					echo "${INSTALL_DESTDIR} ${DESTDIR}"; \
					${SUDO} ${INSTALL_DESTDIR} ${DESTDIR}; \
				fi; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man1" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man1"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man1; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man2" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man2"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man2; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man3" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man3"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man3; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man4" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man4"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man4; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man5" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man5"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man5; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man6" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man6"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man6; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man7" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man7"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man7; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man8" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man8"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man8; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man9" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man9"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man9; \
			fi; \
		fi; \
		if [ "${MAN1}" != "" ]; then \
			for F in ${MAN1}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man1"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man1; \
			done; \
		fi; \
		if [ "${MAN2}" != "" ]; then \
			for F in ${MAN2}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man2"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man2; \
			done; \
		fi; \
		if [ "${MAN3}" != "" ]; then \
			for F in ${MAN3}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man3"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man3; \
			done; \
		fi; \
		if [ "${MAN4}" != "" ]; then \
			for F in ${MAN4}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man4"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man4; \
			done; \
		fi; \
		if [ "${MAN5}" != "" ]; then \
			for F in ${MAN5}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man5"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man5; \
			done; \
		fi; \
		if [ "${MAN6}" != "" ]; then \
			for F in ${MAN6}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man6"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man6; \
			done; \
		fi; \
		if [ "${MAN7}" != "" ]; then \
			for F in ${MAN7}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man7"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man7; \
			done; \
		fi; \
		if [ "${MAN8}" != "" ]; then \
			for F in ${MAN8}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man8"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man8; \
			done; \
		fi; \
		if [ "${MAN9}" != "" ]; then \
			for F in ${MAN9}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man9"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man9; \
			done; \
		fi; \
		if [ "${NOMANLINKS}" != "yes" -a "${MANLINKS}" != "" ]; then \
			${ECHO_N} "# Installing manlinks ( "; \
			(cd ${DESTDIR}${MANDIR} && \
			 for L in ${MANLINKS}; do \
				MPG=`echo $$L | sed 's/:.*//'`; \
				MLNK=`echo $$L | sed 's/.*://'`; \
				MS=`echo $$L | sed 's/.*\.//'`; \
				${ECHO_N} "$$MLNK "; \
				${SUDO} ${LN} -fs $$MPG man$$MS/$$MLNK; \
			 done); \
			 echo " )."; \
		fi; \
	fi

cleandir-lib:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 585):
	rm -f ${LIBTOOL} ${LIBTOOL_COOKIE} ${LTCONFIG_LOG} config.log config.status tags
	@if [ -e "./config/prefix.h" ]; then \
	    echo "rm -fr ./config"; \
	    rm -fr ./config; \
	fi
	@if [ -e "Makefile.config" ]; then \
	    echo "echo >Makefile.config"; \
	    echo >Makefile.config; \
	fi
	@if [ "${CONFIGSCRIPTS}" != "" ]; then \
	    echo "rm -f ${CONFIGSCRIPTS}"; \
	    rm -f ${CONFIGSCRIPTS}; \
	fi
	@if [ "${PCMODULES}" != "" ]; then \
	    echo "rm -f ${PCMODULES}"; \
	    rm -f ${PCMODULES}; \
	fi
	@if [ "${CLEANDIRFILES}" != "" ]; then \
	    echo "rm -f ${CLEANDIRFILES}"; \
	    rm -f ${CLEANDIRFILES}; \
	fi
	@if [ -e ".depend" ]; then \
	    echo "echo >.depend"; \
	    echo >.depend; \
	fi

.m.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 163):
	@_objcflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _objcflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _objcflags="$$_objcflags -pg -DPROF"; fi; \
	echo "${OBJC} ${CFLAGS} ${OBJCFLAGS} $$_objcflags ${CPPFLAGS} -o $@ -c $<"; \
	${OBJC} ${CFLAGS} ${OBJCFLAGS} $$_objcflags ${CPPFLAGS} -o $@ -c $<

# Not a target:
.cc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.cc.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 174):
	@_cxxflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cxxflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cxxflags="$$_cxxflags -pg -DPROF"; fi; \
	echo "${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<"; \
	${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<

# Not a target:
.depend:
#  Implicit rule search has been done.
#  Last modified 2022-05-10 11:01:40.040584157
#  File has been updated.
#  Successfully updated.

.SUFFIXES: .ads .adb .asm .c .cc .cpp .l .lo .m .o .y
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2020-03-14 11:20:09
#  File has been updated.
#  Successfully updated.

regress-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 271):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ regress); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

regress-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 287):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ regress); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 340):
	@if [ "${MAN}" != "" ]; then \
		echo "${MANDOC} -Tascii ${MAN} | ${PAGER}"; \
		${MANDOC} -Tascii ${MAN} | ${PAGER}; \
	else \
		echo "Usage: ${MAKE} man MAN=(manpage)"; \
		exit 1; \
	fi

configure: configure-lib configure-proj
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

install-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 100):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ install); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

.c.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 158):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CC} ${LIBTOOLFLAGS} ${CFLAGS} ${CPPFLAGS} -o $@ ${CC_COMPILE} $<

install-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 116):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ install); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

lib-tags:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 907):
	-@if [ "${CTAGS}" != "" ]; then \
	    if [ "${SRC}" != "" ]; then \
	        (cd ${SRC}; \
		 echo "${CTAGS} ${CTAGSFLAGS} -R"; \
	         ${CTAGS} ${CTAGSFLAGS} -R); \
	    else \
	        echo "${CTAGS} ${CTAGSFLAGS} -R"; \
	        ${CTAGS} ${CTAGSFLAGS} -R; \
	    fi; \
	fi

install-lib: check-libtool
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 612):
	@if [ "${DESTDIR}" != "" ]; then \
	    echo "# Installing under DESTDIR=${DESTDIR}:"; \
	    if [ ! -e "${DESTDIR}" ]; then \
	        echo "${INSTALL_DESTDIR} ${DESTDIR}"; \
	        ${SUDO} ${INSTALL_DESTDIR} ${DESTDIR}; \
	    fi; \
	fi
	@if [ "${INCL}" != "" ]; then \
	    if [ ! -d "${DESTDIR}${INCLDIR}" ]; then \
                echo "${INSTALL_INCL_DIR} ${INCLDIR}"; \
                ${SUDO} ${INSTALL_INCL_DIR} ${DESTDIR}${INCLDIR}; \
	    fi; \
	    for F in ${INCL}; do \
	        echo "${INSTALL_INCL} $$F ${INCLDIR}"; \
	        ${SUDO} ${INSTALL_INCL} $$F ${DESTDIR}${INCLDIR}; \
	    done; \
	fi
	@if [ "${LIB}" != "" -a "${LIB_INSTALL}" = "Yes" ]; then \
	    if [ ! -d "${DESTDIR}${LIBDIR}" ]; then \
                echo "${INSTALL_LIB_DIR} ${LIBDIR}"; \
                ${SUDO} ${INSTALL_LIB_DIR} ${DESTDIR}${LIBDIR}; \
	    fi; \
	    if [ ! -d "${DESTDIR}${INCLDIR}" ]; then \
                echo "${INSTALL_INCL_DIR} ${INCLDIR}"; \
                ${SUDO} ${INSTALL_INCL_DIR} ${DESTDIR}${INCLDIR}; \
	    fi; \
	    if [ "${USE_LIBTOOL}" = "Yes" ]; then \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --mode=install ${INSTALL_LIB} lib${LIB}.la ${LIBDIR}"; \
	        ${SUDO} ${LIBTOOL} ${LIBTOOLOPTS} --mode=install ${INSTALL_LIB} lib${LIB}.la ${DESTDIR}${LIBDIR}; \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --finish ${LIBDIR}"; \
	        ${SUDO} ${LIBTOOL} ${LIBTOOLOPTS} --finish ${DESTDIR}${LIBDIR}; \
	    else \
	    	if [ "${LIB_SHARED}" = "Yes" ]; then \
	            sed 's/installed=no/installed=yes/' lib${LIB}.la > lib${LIB}.la.$$$$; \
		    case "${HOST}" in \
		    *-darwin*) \
		        _libout="lib${LIB}.${LIB_CURRENT}.dylib"; \
	    	        echo "${INSTALL_LIB} $$_libout ${LIBDIR}"; \
	                ${SUDO} ${INSTALL_LIB} $$_libout ${DESTDIR}${LIBDIR}; \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.dylib)"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.dylib); \
		    	;; \
		    *-mingw*) \
		        _libout="${LIB}.dll"; \
	    	        echo "${INSTALL_PROG} $$_libout ${BINDIR}"; \
	                ${SUDO} ${INSTALL_PROG} $$_libout ${DESTDIR}${BINDIR}; \
	    	        echo "${INSTALL_LIB} lib${LIB}_dll.lib ${LIBDIR}"; \
	                ${SUDO} ${INSTALL_LIB} lib${LIB}_dll.lib ${DESTDIR}${LIBDIR}; \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.so.${LIB_CURRENT})"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.so.${LIB_CURRENT}); \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.so)"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.so); \
		    	;; \
		    *) \
	                _libout="lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE}"; \
	    	        echo "${INSTALL_LIB} $$_libout ${LIBDIR}"; \
	                ${SUDO} ${INSTALL_LIB} $$_libout ${DESTDIR}${LIBDIR}; \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.so.${LIB_CURRENT})"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.so.${LIB_CURRENT}); \
			echo "(cd ${LIBDIR} && ${LN} -fs $$_libout lib${LIB}.so)"; \
			(cd ${DESTDIR}${LIBDIR} && ${SUDO} ${LN} -fs $$_libout lib${LIB}.so); \
			;; \
		    esac; \
	    	    echo "${INSTALL_LIB} lib${LIB}.la ${LIBDIR}"; \
	            ${SUDO} ${INSTALL_LIB} lib${LIB}.la.$$$$ ${DESTDIR}${LIBDIR}/lib${LIB}.la; \
		    rm -f lib${LIB}.la.$$$$; \
		fi; \
	        if [ "${HAVE_CC65}" = "yes" ]; then \
	            echo "${INSTALL_LIB} ${LIB}.lib ${LIBDIR}"; \
	            ${SUDO} ${INSTALL_LIB} ${LIB}.lib ${DESTDIR}${LIBDIR}; \
	        else \
	            echo "${INSTALL_LIB} lib${LIB}.a ${LIBDIR}"; \
	            ${SUDO} ${INSTALL_LIB} lib${LIB}.a ${DESTDIR}${LIBDIR}; \
	        fi; \
	    fi; \
	    for F in ${SRCS}; do \
	        if echo $$F | grep -q '.ad[bs]$$'; then \
		    FB=`echo "$$F" | sed 's/.ad[bs]$$//'`; \
	            if [ -e "$$FB.ads" ]; then \
			if [ "${ADAPREPFILE}" != "" ]; then \
				echo "${ADAPREP} ${ADAPREPFLAGS} $$FB.ads ${INCLDIR}/$$FB.ads ${ADAPREPFILE}"; \
				${SUDO} ${ADAPREP} ${ADAPREPFLAGS} $$FB.ads ${INCLDIR}/$$FB.ads ${ADAPREPFILE}; \
			else \
	                	echo "${INSTALL_INCL} $$FB.ads ${INCLDIR}"; \
	                	${SUDO} ${INSTALL_INCL} $$FB.ads ${DESTDIR}${INCLDIR}; \
			fi; \
		    fi; \
	            echo "${INSTALL_DATA} $$FB.ali ${INCLDIR}"; \
	            ${SUDO} ${INSTALL_DATA} $$FB.ali ${DESTDIR}${INCLDIR}; \
                fi; \
	    done; \
	fi
	@if [ "${DATAFILES}" != "" ]; then \
            if [ ! -d "${DESTDIR}${DATADIR}" ]; then \
                echo "${INSTALL_DATA_DIR} ${DATADIR}"; \
                ${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${DATADIR}; \
            fi; \
            for F in ${DATAFILES}; do \
                echo "${INSTALL_DATA} $$F ${DATADIR}"; \
                ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${DATADIR}; \
            done; \
	fi
	@if [ "${DATAFILES_SRC}" != "" ]; then \
            if [ ! -d "${DESTDIR}${DATADIR}" ]; then \
                echo "${INSTALL_DATA_DIR} ${DATADIR}"; \
                ${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${DATADIR}; \
            fi; \
	    if [ "${SRC}" != "" ]; then \
                for F in ${DATAFILES_SRC}; do \
                    echo "${INSTALL_DATA} $$F ${DATADIR}"; \
                    ${SUDO} ${INSTALL_DATA} ${SRC}/${BUILDREL}/$$F \
		    ${DESTDIR}${DATADIR}; \
                done; \
	    else \
                for F in ${DATAFILES_SRC}; do \
                    echo "${INSTALL_DATA} $$F ${DATADIR}"; \
                    ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${DATADIR}; \
                done; \
	    fi; \
	fi
	@if [ "${CONF}" != "" ]; then \
            if [ ! -d "${DESTDIR}${SYSCONFDIR}" ]; then \
                echo "${INSTALL_DATA_DIR} ${SYSCONFDIR}"; \
                ${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${SYSCONFDIR}; \
            fi; \
	    if [ "${CONF_OVERWRITE}" != "Yes" ]; then \
	        echo "+----------------"; \
	        echo "| The following configuration files exist and "; \
	        echo "| will not be overwritten:"; \
	        echo "|"; \
	        for F in ${CONF}; do \
	            if [ -e "${DESTDIR}${SYSCONFDIR}/$$F" ]; then \
	                echo "| - $$F"; \
	            else \
	                ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${SYSCONFDIR}; \
	            fi; \
	        done; \
	        echo "+----------------"; \
	    else \
	        for F in ${CONF}; do \
	            echo "${INSTALL_DATA} $$F ${SYSCONFDIR}"; \
	            ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${SYSCONFDIR}; \
	        done; \
	    fi; \
	fi
	@if [ "${CONFIGSCRIPTS}" != "" ]; then \
	    if [ ! -e "${DESTDIR}${BINDIR}" ]; then \
	        echo "${INSTALL_PROG_DIR} ${BINDIR}"; \
	        ${SUDO} ${INSTALL_PROG_DIR} ${DESTDIR}${BINDIR}; \
	    fi; \
            for F in ${CONFIGSCRIPTS}; do \
                echo "${INSTALL_PROG} $$F ${BINDIR}"; \
                ${SUDO} ${INSTALL_PROG} $$F ${DESTDIR}${BINDIR}; \
            done; \
	fi
	@if [ "${PKGCONFIG}" != "" -a "${PCMODULES}" != "" ]; then \
	    if [ ! -e "${DESTDIR}${PKGCONFIG_LIBDIR}" ]; then \
	        echo "${INSTALL_DATA_DIR} ${PKGCONFIG_LIBDIR}"; \
	        ${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${PKGCONFIG_LIBDIR}; \
	    fi; \
	    for F in ${PCMODULES}; do \
	        echo "${INSTALL_DATA} $$F ${PKGCONFIG_LIBDIR}"; \
	        ${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${PKGCONFIG_LIBDIR}; \
	    done; \
	fi
	@case "${HOST}" in \
	    *-linux*) \
	        if [ "${EUID}" = "0" -o "${USER}" = "root" ]; then \
	            if [ -x "/sbin/ldconfig" ]; then \
	                echo "/sbin/ldconfig"; \
	                /sbin/ldconfig; \
		    fi; \
		else \
		    echo "*"; \
		    echo "* You may need to run /sbin/ldconfig."; \
		    echo "*"; \
		fi; \
		;; \
	esac

.l.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 193):
	${LEX} ${LFLAGS} -o$@.yy.c $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.yy.c"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.yy.c
	@mv -f $@.yy.o $@
	@rm -f $@.yy.c

all-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Successfully updated.
 
# automatic
# @ := all-subdir
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/19=21%
#  recipe to execute (from '../mk/build.subdir.mk', line 32):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

# Not a target:
.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

proj-package-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 305):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ proj-package); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

.c.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 140):
	@_cflags=""; _out="$@"; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then _out=`echo "$@" | sed 's/.o$$/.s/'`; fi; \
	echo "${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<"; \
	${CC} ${CFLAGS} ${CPPFLAGS} $$_cflags -o $$_out ${CC_COMPILE} $<; \
	if [ $$? != 0 ]; then \
		echo "*"; \
		echo "* $$_out compilation failed."; \
		echo "*"; \
		exit 1; \
	fi; \
	if [ "${HAVE_CC65}" = "yes" ]; then \
		echo "ca65 -o $@ $$_out"; \
		ca65 -o $@ $$_out; \
	fi

_lib_ltobjs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 302):
	@if [ "${LIB}" != "" -a "${SHOBJS}" = "" -a "${SRCS}" != "" \
	      -a "${USE_LIBTOOL}" = "Yes" ]; then \
	    _ltobjs=""; \
	    for F in ${SRCS}; do \
	        F=`echo $$F | sed 's/.ad[bs]$$/.lo/'`; \
	        F=`echo $$F | sed 's/.asm$$/.lo/'`; \
	        F=`echo $$F | sed 's/.[clym]$$/.lo/'`; \
	        F=`echo $$F | sed 's/.cc$$/.lo/'`; \
	        F=`echo $$F | sed 's/.cpp$$/.lo/'`; \
		_ltobjs="$$_ltobjs $$F"; \
	    done; \
	    ${MAKE} $$_ltobjs; \
	    if [ $$? != 0 ]; then \
	        echo "${MAKE}: failure"; \
	        exit 1; \
	    fi; \
	fi

all-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 48):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

.ads.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 124):
	@_cflags="${CFLAGS}"; FB=`echo "$<" |sed 's/.ads$$//'`; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="$$_cflags ${PICFLAGS}"; fi; \
	if [ -e "$$FB.adb" ]; then \
	    echo "${ADA} ${ADAFLAGS} $$_cflags -c $$FB.adb"; \
	    ${ADA} ${ADAFLAGS} $$_cflags -c $$FB.adb; \
	else \
	    echo "${ADA} ${ADAFLAGS} $$_cflags -c $<"; \
	    ${ADA} ${ADAFLAGS} $$_cflags -c $<; \
	fi

# Not a target:
.ads:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
../core/Makefile.inc:
#  Implicit rule search has been done.
#  Last modified 2018-11-28 13:51:59
#  File has been updated.
#  Successfully updated.

none:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

depend: check-libtool lib-tags depend-subdir depend-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 223):
	@echo > .depend
	@_srcs="${SRCS}"; \
	if [ "$$_srcs" != "" -a "$$_srcs" != "none" ]; then \
	    _srcs_ada=""; \
	    _srcs_c=""; \
            for F in $$_srcs; do \
	        if echo $$F | grep -q '.ad[bs]$$'; then \
		    FB=`echo "$$F" | sed 's/.ad[bs]$$//'`; \
		    if [ ! -e "$$FB.o" ]; then \
		        echo "${MAKE} $$FB.o"; \
		        ${MAKE} $$FB.o; \
			if [ $$? != 0 ]; then \
			    echo "${MAKE} $$FB.o failed"; \
			    exit 1; \
			fi; \
	            fi; \
		    _srcs_ada="$$_srcs_ada $$F"; \
	        else \
		    _srcs_c="$$_srcs_c $$F"; \
		fi; \
	    done; \
	    if [ "${BUILD}" != "" ]; then \
	        export _mkdep_cflags="${CFLAGS} -I${BUILD}"; \
	    else \
	        export _mkdep_cflags="${CFLAGS}"; \
	    fi; \
	    if [ "$$_srcs_c" != "" ]; then \
	        echo "${MKDEP} $$_mkdep_cflags $$_srcs_c"; \
	        env CC=${CC} ${MKDEP} $$_mkdep_cflags $$_srcs_c; \
	        if [ "${USE_LIBTOOL}" = "Yes" ]; then \
	            echo "${MKDEP} -a -l $$_mkdep_cflags $$_srcs_c"; \
	            env CC=${CC} ${MKDEP} -a -l $$_mkdep_cflags $$_srcs_c; \
	        fi; \
	    fi; \
	    if [ "$$_srcs_ada" != "" ]; then \
	        echo "${MKDEP_ADA} ${MKDEP_ADAFLAGS} ${CFLAGS} $$_srcs_ada >>.depend"; \
	        env ADA=${ADA} ${MKDEP_ADA} ${MKDEP_ADAFLAGS} ${CFLAGS} $$_srcs_ada 1>.ada_depend 2>.ada_errors; \
		if [ $$? != 0 ]; then \
		    echo "${MKDEP_ADA} failed"; \
		    cat .ada_errors; rm -f .ada_errors; \
		    exit 1; \
		fi; \
		if grep -q "must be recompiled" .ada_errors; then \
		    echo "${MKDEP_ADA} failed:"; \
		    cat .ada_errors; rm -f .ada_errors; \
		    exit 1; \
		fi; \
		cat .ada_depend >> .depend; \
		rm -f .ada_depend .ada_errors; \
	    fi; \
	fi

proj:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.proj.mk', line 60):
	@if [ ! -d "${PROJDIR}" ]; then \
		echo "mkdir -p ${PROJDIR}"; \
		mkdir -p ${PROJDIR}; \
	fi
	@for TGT in ${PROJFILES}; do \
		_tgtos=`echo $$TGT |awk -F: '{print $$1}' `; \
		_tgtproj=`echo $$TGT |awk -F: '{print $$2}' `; \
		_tgtflav=`echo $$TGT |awk -F: '{print $$3}' `; \
		_tgtopts=`echo $$TGT |awk -F: '{print $$4}'|sed 's/,/ /g'`; \
		echo "*"; \
		echo "* Target: $$_tgtos ($$_tgtproj)"; \
		echo "* Target flavor: $$_tgtflav"; \
		echo "* Target options: $$_tgtopts"; \
		echo "*"; \
		\
		echo "mkconfigure --emul-env=$$_tgtproj --emul-os=$$_tgtos \
		    --output-lua=${TOP}/configure.lua > configure.tmp"; \
		cat configure.in | \
		    mkconfigure --emul-env=$$_tgtproj --emul-os=$$_tgtos \
		    --output-lua=${TOP}/configure.lua > configure.tmp; \
		if [ $$? != 0 ]; then \
			echo "mkconfigure failed"; \
			rm -fR configure.tmp ${TOP}/configure.lua; \
			exit 1; \
		fi; \
		echo "./configure.tmp $$_tgtopts --with-proj-generation --emul-os=$$_tgtos"; \
		${SH} ./configure.tmp $$_tgtopts --with-proj-generation --emul-os=$$_tgtos; \
		if [ $$? != 0 ]; then \
			echo "configure failed"; \
			echo > Makefile.config; \
			exit 1; \
		fi; \
		echo "${MAKE} proj-package-subdir"; \
		env PROJTARGET="$$_tgtproj" PROJOS="$$_tgtos" \
		    ${MAKE} proj-package-subdir; \
		\
		if [ "${PROJNOCLEAN}" = "no" ]; then \
			echo "rm -f configure.tmp config.log config.status"; \
			rm -f configure.tmp config.log config.status; \
		fi; \
		\
	        echo "cat Makefile | ${MKPROJFILES} > ${PREMAKEOUT}"; \
	        cat Makefile | \
		    env PROJFLAVOR="$$_tgtflav" \
		    PROJOS="$$_tgtos" \
		    PROJINCLUDES="${TOP}/configure.lua" \
		    ${MKPROJFILES} > ${PREMAKEOUT}; \
	        perl ${TOP}/mk/cmpfiles.pl; \
		_premakeos="$$_tgtos"; \
		case "$$_tgtos" in \
		windows-*) \
		    _premakeos="windows"; \
		    ;; \
		esac; \
	        echo "${PREMAKE} ${PREMAKEFLAGS} --file ${PREMAKEOUT} \
		    --os $$_premakeos --target $$_tgtproj"; \
	        ${PREMAKE} ${PREMAKEFLAGS} --file ${PREMAKEOUT} \
		    --os $$_premakeos --target $$_tgtproj; \
		if [ $$? != 0 ]; then \
			echo "premake failed"; \
			exit 1; \
		fi; \
	        perl ${TOP}/mk/cmpfiles.pl added > .projfiles.out; \
		echo "* Generated files: "; \
		cat .projfiles.out; \
		cp -f .projfiles.out ${PROJFILELIST}; \
	        rm .cmpfiles.out; \
		if [ "${PROJFILESEXTRA}" != "" ]; then \
	            for EXTRA in ${PROJFILESEXTRA}; do \
		        echo "+ $$EXTRA: "; \
		        echo "$$EXTRA" >> ${PROJFILELIST}; \
		    done; \
		fi; \
		if [ -e "${PROJCONFIGDIR}" ]; then \
			echo "+ ${PROJCONFIGDIR}"; \
	        	echo "${PROJCONFIGDIR}" >> ${PROJFILELIST}; \
		fi; \
		echo "rm -f ${PROJDIR}/$$_tgtproj-$$_tgtos$$_tgtflav.zip"; \
		rm -f "${PROJDIR}/$$_tgtproj-$$_tgtos$$_tgtflav.zip"; \
		echo "* Creating $$_tgtproj-$$_tgtos$$_tgtflav.zip";\
		cat ${PROJFILELIST} | ${ZIP} ${ZIPFLAGS} \
		    ${PROJDIR}/$$_tgtproj-$$_tgtos$$_tgtflav.zip -@;\
		if [ "${PROJNOCLEAN}" = "no" ]; then \
			echo "cat .projfiles.out | perl ${TOP}/mk/cleanfiles.pl"; \
			cat .projfiles.out | perl ${TOP}/mk/cleanfiles.pl; \
			echo "rm -fR ${PROJCONFIGDIR} ${PROJFILELIST}"; \
			rm -fR ${PROJCONFIGDIR} ${PROJFILELIST}; \
			echo "rm -f .projfiles.out ${TOP}/configure.lua"; \
			rm -f .projfiles.out ${TOP}/configure.lua; \
		fi; \
	done
	@echo "* Done"

../mk/libtool/ltmain.sh:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.cpp.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 180):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CXX} ${LIBTOOLFLAGS} ${CXXFLAGS} ${CPPFLAGS} -o $@ -c $<

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
 
#  File has not been updated.

../mk/libtool/aclocal.m4:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

deinstall: deinstall-lib deinstall-subdir deinstall-man deinstall-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

.y.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 212):
	${YACC} ${YFLAGS} -b $@ $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.tab.c"; \
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} -o $@ ${CC_COMPILE} $@.tab.c
	@mv -f $@.tab.o $@
	@rm -f $@.tab.c

# Not a target:
../Makefile.config:
#  Implicit rule search has been done.
#  Last modified 2022-05-10 11:01:57.548685045
#  File has been updated.
#  Successfully updated.

../mk/libtool/configure:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

libag_core.a: _lib_objs
#  Implicit rule search has not been done.
#  Last modified 2022-05-10 11:02:29.152867209
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/29=0%
#  recipe to execute (from '../mk/build.lib.mk', line 322):
	@if [ "${LIB}" != "" -a "${USE_LIBTOOL}" = "No" -a \
	      "${SRCS}" != "" -a "${.TARGETS}" != "install" ]; then \
	    _objs="${OBJS}"; \
	    if [ "$$_objs" = "" ]; then \
	        for F in ${SRCS}; do \
	    	    F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.asm$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.cc$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.cpp$$/.o/'`; \
	    	    _objs="$$_objs $$F"; \
                done; \
	    fi; \
	    if [ "${HAVE_CC65}" = "yes" ]; then \
	        echo "ar65 a ${LIB}.lib $$_objs"; \
	        ar65 a ${LIB}.lib $$_objs; \
		echo "cp ${LIB}.lib lib${LIB}.a"; \
		cp ${LIB}.lib lib${LIB}.a; \
	    else \
	        echo "${AR} -cru lib${LIB}.a $$_objs"; \
	        ${AR} -cru lib${LIB}.a $$_objs; \
	        echo "${RANLIB} lib${LIB}.a"; \
	        (${RANLIB} lib${LIB}.a || exit 0); \
	    fi; \
	fi

.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 174):
	@_cxxflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cxxflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cxxflags="$$_cxxflags -pg -DPROF"; fi; \
	echo "${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<"; \
	${CXX} ${CXXFLAGS} $$_cxxflags ${CPPFLAGS} -o $@ -c $<

# Not a target:
.cpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean: clean-lib clean-subdir clean-man clean-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

.m.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 169):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${OBJC} ${LIBTOOLFLAGS} ${CFLAGS} ${OBJCFLAGS} ${CPPFLAGS} -o $@ -c $<

configure-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 168):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ configure); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

# Not a target:
../mk/build.common.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

configure-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 184):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ configure); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

all-manlinks:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 358):
	@if [ "${SRC}" != "" ]; then \
		(cd ${SRC} && \
		 for DIR in `find . -name .manlinks.mk |sed 's/\/\.manlinks\.mk//'`; do \
			echo "(cd $$DIR && ${MAKE} manlinks)"; \
			(cd $$DIR && ${MAKE} manlinks); \
		done); \
	else \
		for DIR in `find . -name .manlinks.mk |sed 's/\/\.manlinks\.mk//'`; do \
			echo "(cd $$DIR && ${MAKE} manlinks)"; \
			(cd $$DIR && ${MAKE} manlinks); \
		done; \
	fi

../mk/libtool/config.guess:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

configure-lib:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 921):
	@if [ "${LIB}" != "" ]; then \
		if [ -e "configure.in" ]; then \
			echo "cat configure.in | mkconfigure > configure"; \
			cat configure.in | mkconfigure > configure; \
			if [ ! -e configure ]; then \
				echo "mkconfigure (BSDBuild) failed."; \
				exit 1; \
			fi; \
			if [ ! -x configure ]; then \
				echo "chmod 755 configure"; \
				chmod 755 configure; \
			fi; \
		fi; \
	fi

 
# Not a target:
../mk/build.man.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

libag_core.la: check-libtool _lib_ltobjs
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 457):
	@if [ "${LIB}" != "" -a "${USE_LIBTOOL}" = "Yes" -a \
	      "${SRCS}" != "" -a "${.TARGETS}" != "install" ]; then \
	    _ltobjs="${SHOBJS}"; \
	    _moduleopts=""; \
	    if [ "$$_ltobjs" = "" ]; then \
	        for F in ${SRCS}; do \
	    	    F=`echo $$F | sed 's/.ad[bs]$$/.lo/'`; \
	    	    F=`echo $$F | sed 's/.asm$$/.lo/'`; \
	    	    F=`echo $$F | sed 's/.[clym]$$/.lo/'`; \
	    	    F=`echo $$F | sed 's/.cc$$/.lo/'`; \
	    	    F=`echo $$F | sed 's/.cpp$$/.lo/'`; \
	    	    _ltobjs="$$_ltobjs $$F"; \
                done; \
	    fi; \
	    if [ "${LIB_MODULE}" = "Yes" ]; then \
	        _moduleopts="-module";  \
	    fi; \
	    if [ "${LIB_SHARED}" = "Yes" ]; then \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --mode=link ${CC} -o lib${LIB}.la ${LIBTOOLOPTS_SHARED} -rpath ${PREFIX}/lib $$_moduleopts -version-info ${LIB_CURRENT}:${LIB_REVISION}:${LIB_AGE} ${LDFLAGS} $$_ltobjs ${LIBS}"; \
	        ${LIBTOOL} ${LIBTOOLOPTS} --mode=link \
		    ${CC} -o lib${LIB}.la ${LIBTOOLOPTS_SHARED} \
		    -rpath ${PREFIX}/lib $$_moduleopts \
		    -version-info ${LIB_CURRENT}:${LIB_REVISION}:${LIB_AGE} \
		    ${LDFLAGS} $$_ltobjs ${LIBS}; \
	    else \
	        echo "${LIBTOOL} ${LIBTOOLOPTS} --mode=link ${CC} -o lib${LIB}.la -static ${LIBTOOLOPTS_STATIC} ${LDFLAGS} $$_ltobjs ${LIBS}"; \
	        ${LIBTOOL} ${LIBTOOLOPTS} --mode=link \
		    ${CC} -o lib${LIB}.la -static ${LIBTOOLOPTS_STATIC} \
		    ${LDFLAGS} $$_ltobjs ${LIBS}; \
	    fi; \
	    if [ "${LIB_BUNDLE}" != "" ]; then \
	        echo "perl ${TOP}/mk/gen-bundle.pl lib ${LIB_BUNDLE}"; \
	        perl ${TOP}/mk/gen-bundle.pl lib ${LIB_BUNDLE}; \
	    fi; \
	fi

_lib_objs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := _lib_objs
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=8/37=22%
#  recipe to execute (from '../mk/build.lib.mk', line 277):
	@if [ "${LIB}" != "" -a "${OBJS}" = "" -a "${SRCS}" != "" \
	      -a "${USE_LIBTOOL}" = "No" ]; then \
	    _objs=""; \
	    for F in ${SRCS}; do \
	        F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	        F=`echo $$F | sed 's/.asm$$/.o/'`; \
	        F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	        F=`echo $$F | sed 's/.cc$$/.o/'`; \
	        F=`echo $$F | sed 's/.cpp$$/.o/'`; \
		_objs="$$_objs $$F"; \
            done; \
	    echo "${MAKE} $$_objs"; \
	    ${MAKE} $$_objs; \
	    if [ $$? != 0 ]; then \
	        echo "${MAKE}: failure"; \
	        exit 1; \
	    fi; \
	fi
	@if [ "${WINRES}" != "" -a "${WINDRES}" != "" ]; then \
	    echo "${WINDRES} -o ${WINRES}.o ${WINRES}"; \
	    ${WINDRES} -o ${WINRES}.o ${WINRES}; \
	fi

cleandir: clean-lib clean-subdir cleandir-lib cleandir-subdir clean-man clean-subdir cleandir-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

../mk/libtool/config.sub:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

proj-clean-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 321):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ proj-clean); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

configure-proj:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.proj.mk', line 154):
	@if [ "${PROG}" = "" -a "${LIB}" = "" ]; then \
		if [ -e "configure.in" ]; then \
			echo "cat configure.in | mkconfigure > configure"; \
			cat configure.in | mkconfigure > configure; \
			if [ ! -e configure ]; then \
				echo "mkconfigure failed."; \
				echo "Note: mkconfigure is part of BSDBuild"; \
				echo "(http://bsdbuild.hypertriton.com/)"; \
				exit 1; \
			fi; \
			if [ ! -x configure ]; then \
				echo "chmod 755 configure"; \
				chmod 755 configure; \
			fi; \
		fi; \
	fi

deinstall-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 181):
	@if [ "${NOMAN}" != "yes" ]; then \
		if [ "${MAN1}" != "" ]; then \
			for F in ${MAN1}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man1/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man1/$$FL; \
			done; \
		fi; \
		if [ "${MAN2}" != "" ]; then \
			for F in ${MAN2}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man2/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man2/$$FL; \
			done; \
		fi; \
		if [ "${MAN3}" != "" ]; then \
			for F in ${MAN3}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man3/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man3/$$FL; \
			done; \
		fi; \
		if [ "${MAN4}" != "" ]; then \
			for F in ${MAN4}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man4/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man4/$$FL; \
			done; \
		fi; \
		if [ "${MAN5}" != "" ]; then \
			for F in ${MAN5}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man5/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man5/$$FL; \
			done; \
		fi; \
		if [ "${MAN6}" != "" ]; then \
			for F in ${MAN6}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man6/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man6/$$FL; \
			done; \
		fi; \
		if [ "${MAN7}" != "" ]; then \
			for F in ${MAN7}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man7/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man7/$$FL; \
			done; \
		fi; \
		if [ "${MAN8}" != "" ]; then \
			for F in ${MAN8}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man8/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man8/$$FL; \
			done; \
		fi; \
		if [ "${MAN9}" != "" ]; then \
			for F in ${MAN9}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man9/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man9/$$FL; \
			done; \
		fi; \
		if [ "${NOMANLINKS}" != "yes" -a "${MANLINKS}" != "" ]; then \
			if [ "${MAN1}" != "" -a -e "${DESTDIR}${MANDIR}/man1" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man1 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN2}" != "" -a -e "${DESTDIR}${MANDIR}/man2" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man2 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN3}" != "" -a -e "${DESTDIR}${MANDIR}/man3" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man3 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN4}" != "" -a -e "${DESTDIR}${MANDIR}/man4" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man4 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN5}" != "" -a -e "${DESTDIR}${MANDIR}/man5" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man5 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN6}" != "" -a -e "${DESTDIR}${MANDIR}/man6" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man6 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN7}" != "" -a -e "${DESTDIR}${MANDIR}/man7" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man7 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN8}" != "" -a -e "${DESTDIR}${MANDIR}/man8" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man8 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN9}" != "" -a -e "${DESTDIR}${MANDIR}/man9" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man9 && \
				 for L in ${MANLINKS}; do \
 
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
		fi; \
	fi
	

lint: lint-man
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

check-libtool:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 884):
	@if [ "${USE_LIBTOOL}" = "Yes" -a "${LIBTOOL_BUNDLED}" = "yes" ]; then \
	    if [ ! -e "${LIBTOOL_COOKIE}" ]; then \
	        echo "(cd ${LTBASE} && \
	            ${SH} ./configure --build=${BUILD} --host=${HOST})"; \
	        (cd ${LTBASE} && env CC="${CC}" OBJC="${OBJC}" CXX="${CXX}" \
	            CFLAGS="${CFLAGS}" OBJCFLAGS="${OBJCFLAGS}" CXXFLAGS="${CXXFLAGS}" \
		    ${SH} ./configure --build=${BUILD} --host=${HOST}); \
	        if [ $$? != 0 ]; then \
	    	    echo "USE_LIBTOOL=Yes and ${LTCONFIG} failed"; \
	    	    exit 1; \
	        fi; \
	        if [ ! -f "${LIBTOOL}" ]; then \
		    echo "mv libtool ${LIBTOOL}"; \
		    mv libtool ${LIBTOOL}; \
	        fi; \
	        echo "echo "${LIBTOOL}" > ${LIBTOOL_COOKIE}"; \
	        echo "${LIBTOOL}" > ${LIBTOOL_COOKIE}; \
	    fi; \
	fi

.cc.lo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 180):
	${LIBTOOL} ${LIBTOOLOPTS} --mode=compile \
	    ${CXX} ${LIBTOOLFLAGS} ${CXXFLAGS} ${CPPFLAGS} -o $@ -c $<

# Not a target:
../mk/build.subdir.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

clean-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.man.mk', line 56):
	@if [ "${CLEANFILES}" != "" ]; then \
		echo "rm -f ${CLEANFILES}"; \
		rm -f ${CLEANFILES}; \
	fi

depend-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 202):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ depend); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

depend-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 218):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ depend); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

.l:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 185):
	${LEX} ${LFLAGS} -o$@.yy.c $<
	@_cflags=""; \
	if [ "${LIB_SHARED}" = "Yes" ]; then _cflags="${PICFLAGS}"; fi; \
	if [ "${LIB_PROFILE}" = "Yes" ]; then _cflags="$$_cflags -pg -DPROF"; fi; \
	echo "${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.yy.c ${LIBL} ${LIBS}"; 
	${CC} ${CFLAGS} $$_cflags ${CPPFLAGS} ${LDFLAGS} -o $@ $@.yy.c ${LIBL} ${LIBS}
	@rm -f $@.yy.c

libag_core.so: _lib_objs
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 350):
	@if [ "${LIB}" != "" -a "${LIB_SHARED}" = "Yes" -a \
	      "${USE_LIBTOOL}" = "No" -a "${SRCS}" != "" -a \
	      "${.TARGETS}" != "install" ]; then \
	    \
	    case "${HOST}" in \
	    *-darwin*) \
	        _libout="lib${LIB}.${LIB_CURRENT}.dylib"; \
	        _libnames="lib${LIB}.dylib"; \
		;; \
	    *-mingw*) \
	        _libout="${LIB}.dll"; \
	        _libnames=""; \
		;; \
	    *) \
	        _libout="lib${LIB}.so.${LIB_CURRENT}.${LIB_REVISION}.${LIB_AGE}"; \
	        _libnames="lib${LIB}.so.${LIB_CURRENT} lib${LIB}.so"; \
	        ;; \
	    esac; \
	    \
	    _objs="${OBJS}"; \
	    if [ "$$_objs" = "" ]; then \
	        for F in ${SRCS}; do \
	    	    F=`echo $$F | sed 's/.ad[bs]$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.asm$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.[clym]$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.cc$$/.o/'`; \
	    	    F=`echo $$F | sed 's/.cpp$$/.o/'`; \
	    	    _objs="$$_objs $$F"; \
                done; \
	    fi; \
	    \
	    case "${HOST}" in \
	    *-darwin*) \
	        echo "${CC} -shared -o $$_libout -Wl,-rpath,${PREFIX}/lib ${LDFLAGS} -dynamiclib -install_name lib${LIB}.dylib $$_objs ${LIBS}"; \
	        ${CC} -shared -o $$_libout -Wl,-rpath ${PREFIX}/lib ${LDFLAGS} -dynamiclib -install_name lib${LIB}.dylib $$_objs ${LIBS}; \
	        ;; \
	    *-mingw*) \
	        echo "${CC} -shared -o $$_libout -Wl,--out-implib,lib${LIB}_dll.lib -Wl,-rpath ${PREFIX}/lib ${LDFLAGS} $$_objs ${LIBS}"; \
	        ${CC} -shared -o $$_libout -Wl,--out-implib,lib${LIB}_dll.lib -Wl,-rpath ${PREFIX}/lib ${LDFLAGS} $$_objs ${LIBS}; \
	        ;; \
	    *) \
	        echo "${CC} -shared -o $$_libout -Wl,-rpath,${PREFIX}/lib ${LDFLAGS} $$_objs"; \
	        ${CC} -shared -o $$_libout -Wl,-rpath ${PREFIX}/lib ${LDFLAGS} $$_objs; \
	        ;; \
	    esac; \
	    \
	    for LIBNAME in $$_libnames; do \
	        echo "${LN} -fs $$_libout $$LIBNAME"; \
	        ${LN} -fs $$_libout $$LIBNAME; \
	    done; \
	    \
	    echo "# lib${LIB}.la - a libtool library file" > lib${LIB}.la; \
	    echo "# Generated by build.lib.mk(5) from BSDBuild ${BSDBUILD_VERSION}" >> lib${LIB}.la; \
	    echo '# <https://bsdbuild.hypertriton.com/>' >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# The name that we can dlopen(3).' >> lib${LIB}.la; \
	    echo "dlname='$$_libout'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Names of this library.' >> lib${LIB}.la; \
	    echo "library_names='$$_libout $$_libnames'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# The name of the static archive.' >> lib${LIB}.la; \
	    echo "old_library='lib${LIB}.a'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    _linker_flags=""; \
	    _dependency_libs=""; \
	    for F in ${LIBS}; do \
	    	if echo "$$F" | grep -q '^-[lL]'; then \
		    _dependency_libs="$$_dependency_libs $$F"; \
		else \
		    _linker_flags="$$_linker_flags $$F"; \
		fi; \
	    done; \
	    echo '# Linker flags that can not go in dependency_libs.' >> lib${LIB}.la; \
	    echo "inherited_linker_flags='$$_linker_flags'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Libraries that this one depends upon.' >> lib${LIB}.la; \
	    echo "dependency_libs='$$_dependency_libs'" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Names of additional weak libraries provided by this library' >> lib${LIB}.la; \
	    echo "weak_library_names=''" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Version information for lib${LIB}.' >> lib${LIB}.la; \
	    echo "current=${LIB_CURRENT}" >> lib${LIB}.la; \
	    echo "age=${LIB_AGE}" >> lib${LIB}.la; \
	    echo "revision=${LIB_REVISION}" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Is this an already installed library?' >> lib${LIB}.la; \
	    echo 'installed=no' >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Should we warn about portability when linking against -modules?' >> lib${LIB}.la; \
	    echo 'shouldnotlink=no' >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Files to dlopen/dlpreopen' >> lib${LIB}.la; \
	    echo "dlopen=''" >> lib${LIB}.la; \
	    echo "dlpreopen=''" >> lib${LIB}.la; \
	    echo >> lib${LIB}.la; \
	    echo '# Directory that this library needs to be installed in:' >> lib${LIB}.la; \
	    echo "libdir='${PREFIX}/lib'" >> lib${LIB}.la; \
	    if [ "${LIB_BUNDLE}" != "" ]; then \
	        echo "perl ${TOP}/mk/gen-bundle.pl lib ${LIB_BUNDLE}"; \
	        perl ${TOP}/mk/gen-bundle.pl lib ${LIB_BUNDLE}; \
	    fi; \
	fi

# Not a target:
../mk/build.lib.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

regress: regress-subdir regress-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
.asm:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.asm.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../mk/build.lib.mk', line 136):
	${ASM} ${ASMFLAGS} ${CPPFLAGS} -o $@ $<

deinstall-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  recipe to execute (from '../mk/build.subdir.mk', line 134):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ deinstall); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

# Not a target:
.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

deinstall-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../mk/build.subdir.mk', line 150):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ deinstall); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

install: install-lib install-subdir install-man install-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# files hash-table stats:
# Load=93/1024=9%, Rehash=0, Collisions=85/418=20%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 399 / storage = 4680 B / avg = 11 B
# current buf: size = 8162 B / used = 4680 B / count = 399 / avg = 11 B

# strcache performance: lookups = 695 / hit rate = 42%
# hash-table stats:
# Load=399/8192=5%, Rehash=0, Collisions=93/695=13%
# Finished Make data base on Tue May 10 13:43:27 2022

# make[1]: Leaving directory '/home/yyf/Documents/agar-1.6.0/core'
 
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Tue May 10 13:43:27 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'Makefile.config', line 14)
PREFIX = /usr/local
# automatic
?F = $(notdir $?)
# makefile (from 'Makefile.config', line 92)
HAVE_NORETURN_ATTRIBUTE = yes
# makefile (from 'Makefile.config', line 204)
_MK_HAVE_SYS_TYPES_H = yes
# makefile (from 'Makefile', line 5)
PROJECT_GUID = "93733df2-c743-489e-bc9f-f22aee00d787"
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
 
# makefile (from 'Makefile.config', line 190)
TTFDIR = /usr/local/share/agar/fonts
# environment
XDG_SESSION_CLASS = user
# makefile (from 'Makefile.config', line 70)
HAVE_DLOPEN = yes
# makefile (from 'mk/build.common.mk', line 59)
INSTALL_INCL_DIR = mkdir -p
# makefile (from 'Makefile.config', line 188)
SUBDIR_vg = vg
# makefile (from 'Makefile.config', line 201)
_MK_HAVE_STDINT_H = yes
# makefile (from 'Makefile.config', line 124)
HAVE_ZLIB = no
# environment
SNAP_COMMON = /var/snap/code/common
# makefile (from 'Makefile.config', line 129)
JPEG_CFLAGS = -I/usr/include
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# makefile (from 'Makefile.config', line 69)
HAVE_DEPRECATED_ATTRIBUTE = yes
# makefile (from 'mk/build.common.mk', line 62)
DEINSTALL_PROG = rm -f
# makefile (from 'Makefile.config', line 140)
MATH_LIBS = -lm
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile.config', line 10)
MANDOC = /usr/bin/nroff -Tmandoc
# environment
IM_CONFIG_PHASE = 1
# makefile (from 'Makefile.config', line 184)
SUBDIR_micro = 
# makefile (from 'mk/build.common.mk', line 52)
INSTALL_LIB = install -c -m 644
# automatic
 
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile (from 'mk/build.common.mk', line 60)
INSTALL_MAN_DIR = mkdir -p
# makefile (from 'Makefile.config', line 67)
HAVE_DB4 = no
# makefile
CURDIR := /home/yyf/Documents/agar-1.6.0
# makefile (from 'Makefile.config', line 191)
VERSION = 1.6.0
# makefile
SHELL = /bin/sh
# environment
SNAP_DATA = /var/snap/code/95
# makefile (from 'Makefile.config', line 110)
HAVE_SSE = yes
# makefile (from 'mk/build.man.mk', line 36)
MAN6 = 
# makefile (from 'Makefile.config', line 130)
JPEG_LIBS = -L/usr/lib -ljpeg
# makefile (from 'Makefile.config', line 71)
HAVE_FLOAT = yes
# makefile (from 'Makefile.config', line 178)
SSE_CFLAGS = -msse
# makefile (from 'Makefile.config', line 55)
HAVE_CC65 = no
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from 'Makefile.config', line 175)
SRCS_NET = net_bsd.c
# makefile (from 'Makefile.config', line 187)
SUBDIR_sk = sk
# makefile (from 'Makefile.config', line 117)
 
HAVE_WARN_UNUSED_RESULT_ATTRIBUTE = yes
# environment
JOURNAL_STREAM = 8:387942
# makefile (from 'Makefile.config', line 16)
ALTIVEC_CHECK_CFLAGS = 
# makefile (from 'Makefile.config', line 202)
_MK_HAVE_STDLIB_H = yes
# makefile (from 'mk/build.common.mk', line 65)
DEINSTALL_INCL = rm -f
# makefile (from 'Makefile.config', line 192)
X11_CFLAGS = 
# makefile (from 'Makefile.config', line 104)
HAVE_PTHREAD_MUTEX_T_POINTER = no
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from 'Makefile.config', line 114)
HAVE_SYS_UIO_H = 
# makefile (from 'Makefile.config', line 51)
HAVE_ALTIVEC = no
# makefile (from 'Makefile.config', line 196)
ZLIB_CFLAGS = 
# makefile (from 'Makefile.config', line 88)
HAVE_MATH = yes
# makefile (from 'Makefile.config', line 47)
GLU_LIBS = -L/usr/lib -lGLU
# makefile (from 'mk/build.proj.mk', line 1)
MAKEFILE_LIST :=  Makefile Makefile.config Makefile.proj mk/build.common.mk mk/build.subdir.mk mk/build.man.mk mk/build.common.mk mk/build.proj.mk
# makefile (from 'Makefile.config', line 30)
DB4_CFLAGS = 
# automatic
@F = $(notdir $@)
# environment
 
GIO_LAUNCHED_DESKTOP_FILE = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from 'Makefile.config', line 151)
PNG_CFLAGS = -I/home/yyf/anaconda3/include/libpng16
# makefile (from 'Makefile.config', line 141)
MEMORY_MODEL = LARGE
# makefile (from 'Makefile.config', line 193)
X11_LIBS = -lX11
# environment
USERNAME = yyf
# makefile (from 'Makefile', line 1)
TOP = .
# makefile (from 'Makefile.config', line 81)
HAVE_JPEG = yes
# makefile (from 'Makefile.config', line 28)
CXXFLAGS = -D_AGAR_INTERNAL -D_DEFAULT_SOURCE -D_BSD_SOURCE -I/home/yyf/Documents/agar-1.6.0/include
# environment
MAKELEVEL := 0
# makefile (from 'Makefile.config', line 100)
HAVE_PTHREADS_XOPEN = yes
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# makefile (from 'Makefile.config', line 5)
CROSS_COMPILING = no
# makefile (from 'Makefile.config', line 145)
OPENGL_CFLAGS = 
# makefile (from 'Makefile.config', line 32)
DB5_CFLAGS = 
# makefile (from 'Makefile.config', line 173)
SRCS_CORE = time_posix.c time_renderer.c time_gettimeofday.c user_posix.c
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from 'Makefile.config', line 98)
HAVE_PORTAUDIO = no
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'Makefile.config', line 161)
 
PROG_SUFFIX = 
# makefile (from 'Makefile.config', line 122)
HAVE_XINERAMA = yes
# makefile (from 'Makefile.config', line 31)
DB4_LIBS = 
# environment
_ = /snap/code/95/usr/share/code/code
# makefile (from 'Makefile.config', line 102)
HAVE_PTHREAD_MUTEX_RECURSIVE = yes
# makefile (from 'Makefile.config', line 143)
MYSQL_CFLAGS = 
# makefile (from 'mk/build.common.mk', line 45)
AWK = awk
# makefile (from 'Makefile.config', line 80)
HAVE_INT64_T = yes
# environment
MANAGERPID = 22346
# makefile (from 'mk/build.common.mk', line 57)
INSTALL_LIB_DIR = mkdir -p
# makefile (from 'mk/build.man.mk', line 39)
MAN9 = 
# makefile (from 'Makefile.config', line 61)
HAVE_CLOCK_GETTIME = yes
# makefile (from 'Makefile.config', line 146)
OPENGL_LIBS = -L/usr/local/lib -lGL
# makefile (from 'Makefile.config', line 33)
DB5_LIBS = 
# makefile (from 'Makefile.config', line 46)
GLU_CFLAGS = -I/usr/include
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
LC_NAME = zh_CN.UTF-8
# makefile (from 'Makefile.config', line 54)
HAVE_CC = yes
# environment
 
VSCODE_CWD = /home/yyf
# makefile (from 'Makefile.config', line 77)
HAVE_GLU = yes
# makefile (from 'Makefile.config', line 82)
HAVE_LD_NO_UNDEFINED = 
# makefile (from 'mk/build.man.mk', line 42)
NOMAN = 
# makefile (from 'Makefile.config', line 97)
HAVE_PNG = yes
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/95/usr/share/glib-2.0/schemas
# makefile (from 'mk/build.man.mk', line 41)
MANLINKS = 
# makefile (from 'Makefile.config', line 144)
MYSQL_LIBS = 
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'Makefile.config', line 167)
RELEASE = Nullability Complete
# environment
PATH = /home/yyf/anaconda3/bin:/home/yyf/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from 'mk/build.proj.mk', line 29)
PREMAKEOUT = premake.lua
# makefile (from 'Makefile.config', line 158)
PROG_GUI_CFLAGS = 
# makefile (from 'mk/build.common.mk', line 54)
INSTALL_INCL = install -c -m 644
# makefile (from 'Makefile.config', line 36)
ENABLE_GUI_LIBS = -L../gui -lag_gui
# makefile (from 'mk/build.proj.mk', line 35)
PROJFILELIST = .projfiles2.out
# makefile (from 'Makefile.config', line 118)
HAVE_WEB = no
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# makefile (from 'mk/build.common.mk', line 44)
FIND = find
# environment
SESSION_MANAGER = local/yyf-MS-7A54:@/tmp/.ICE-unix/22561,unix/yyf-MS-7A54:/tmp/.ICE-unix/22561
# makefile (from 'Makefile.config', line 96)
HAVE_PACKED_ATTRIBUTE = yes
 
# makefile (from 'Makefile.config', line 103)
HAVE_PTHREAD_MUTEX_RECURSIVE_NP = yes
# makefile (from 'Makefile.config', line 155)
PROG_BUNDLE = 
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'Makefile.config', line 126)
ICONV_CFLAGS = 
# environment
GDK_PIXBUF_MODULE_FILE = /home/yyf/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# makefile (from 'Makefile.config', line 23)
CFLAGS = -D_AGAR_INTERNAL -D_DEFAULT_SOURCE -D_BSD_SOURCE -g  -I/home/yyf/Documents/agar-1.6.0/include
# makefile (from 'Makefile.config', line 91)
HAVE_NETWORK = yes
# makefile (from 'Makefile.config', line 95)
HAVE_OPENGL = yes
# makefile (from 'Makefile', line 4)
PROJECT = "Agar"
# environment
SNAP = /snap/code/95
# makefile (from 'Makefile.config', line 132)
LIBEXECDIR = /usr/local/libexec
# makefile (from 'Makefile.config', line 169)
SDL_LIBS = -L/usr/lib/x86_64-linux-gnu -lSDL
# makefile (from 'Makefile.config', line 113)
HAVE_SYS_PARAM_H = 
# makefile (from 'Makefile.config', line 65)
HAVE_CSIDL = no
# makefile (from 'Makefile.config', line 90)
HAVE_MYSQL = no
# environment
SNAP_VERSION = 57fd6d01
# environment
CONDA_PREFIX = /home/yyf/anaconda3
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
DISABLE_WAYLAND = 1
# makefile (from 'Makefile.config', line 162)
PROG_TRANSFORM = s,x,x,
# makefile (from 'mk/build.common.mk', line 69)
 
DEINSTALL_DATA_DIR = rmdir -p
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from 'Makefile.config', line 84)
HAVE_LIBOPENGL32 = 
# environment
INVOCATION_ID = 608a15c5f3024d3baf231a0898605c0b
# makefile (from 'Makefile.config', line 15)
LDFLAGS = 
# makefile (from 'Makefile.config', line 174)
SRCS_GUI = drv_sdl_common.c drv_sdlfb.c drv_sdlgl.c drv_gl_common.c drv_glx.c
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/95/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# makefile (from 'Makefile.config', line 57)
HAVE_CC_GCC = no
# makefile (from 'Makefile.config', line 176)
SSE2_CFLAGS = -msse2
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'mk/build.man.mk', line 34)
MAN4 = 
# makefile (from 'mk/build.common.mk', line 51)
INSTALL_PROG = install -c -m 755
# makefile (from 'Makefile.config', line 53)
HAVE_BOUNDED_ATTRIBUTE = yes
# makefile (from 'Makefile.config', line 8)
ECHO_N = /bin/echo -n
# environment
LS_COLORS = 
# makefile (from 'Makefile.config', line 86)
HAVE_LONG_DOUBLE = yes
# makefile (from 'Makefile.config', line 34)
DSO_CFLAGS = 
# makefile (from 'Makefile.config', line 185)
 
SUBDIR_net = net
# makefile (from 'Makefile.config', line 127)
ICONV_LIBS = 
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 64633
# makefile (from 'mk/build.proj.mk', line 42)
CLEANFILES =  ${PREMAKEOUT}
# automatic
%F = $(notdir $%)
# makefile (from 'Makefile.config', line 156)
PROG_CLI_CFLAGS = 
# environment
DISPLAY = :1
# environment
CONDA_EXE = /home/yyf/anaconda3/bin/conda
# makefile (from 'Makefile.config', line 7)
BLDDIR = /home/yyf/Documents/agar-1.6.0
# makefile (from 'Makefile.config', line 6)
SRCDIR = /home/yyf/Documents/agar-1.6.0
# makefile (from 'Makefile.config', line 157)
PROG_CLI_FLAGS = 
# environment
VSCODE_PIPE_LOGGING = true
# environment
SNAP_INSTANCE_KEY = 
 
# environment
PWD = /home/yyf/Documents/agar-1.6.0
# makefile (from 'Makefile.config', line 116)
HAVE_VASPRINTF = yes
# makefile (from 'mk/build.proj.mk', line 25)
PREMAKE = premake
# default
.LOADED := 
# makefile (from 'Makefile.config', line 142)
MODULEDIR = /usr/local/lib
# environment
SSH_AGENT_PID = 22520
# makefile (from 'mk/build.proj.mk', line 28)
MKPROJFILES = mkprojfiles
# makefile (from 'Makefile.config', line 24)
CLOCK_CFLAGS = 
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# makefile (from 'Makefile.config', line 101)
HAVE_PTHREAD_COND_T_POINTER = no
# makefile (from 'Makefile.config', line 186)
SUBDIR_sg = sg
# makefile (from 'Makefile.config', line 94)
HAVE_OBJC_WARNINGS = yes
# environment
GTK_MODULES = gail:atk-bridge
# makefile (from 'Makefile.config', line 63)
HAVE_COCOA = no
# environment
 
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/yyf
# makefile (from 'mk/build.proj.mk', line 26)
ZIP = zip
# makefile (from 'Makefile.config', line 198)
_MK_BYTE_ORDER = LE
# makefile (from 'Makefile.config', line 62)
HAVE_CLOCK_WIN32 = no
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# makefile (from 'Makefile.config', line 42)
FREETYPE_CFLAGS = -I/usr/include/freetype2 -I/usr/include/libpng16
# environment
VSCODE_CODE_CACHE_PATH = /home/yyf/.config/Code/CachedData/57fd6d0195bb9b9d1b49f6da5db789060795de47
# makefile (from 'Makefile.config', line 105)
HAVE_PTHREAD_T_POINTER = yes
# makefile (from 'Makefile.config', line 25)
CLOCK_LIBS = 
# environment
LOGNAME = yyf
# makefile (from 'mk/build.man.mk', line 32)
MAN2 = 
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
 
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = Bx-AkJMwqp53F8JwmcA_kCyZNudDIHbMfRP3bs0BlIaoBbuFVsOJ
# environment
CONDA_PROMPT_MODIFIER = (base) 
# automatic
+F = $(notdir $+)
# makefile (from 'Makefile.config', line 52)
HAVE_ASPRINTF = yes
# makefile (from 'mk/build.proj.mk', line 37)
PROJNOCLEAN = no
# makefile (from 'Makefile.config', line 154)
PORTAUDIO_LIBS = 
# makefile (from 'Makefile.config', line 29)
DATADIR = /usr/local/share/agar
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
SNAP_USER_COMMON = /home/yyf/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile.config', line 43)
FREETYPE_LIBS = -lfreetype
# makefile (from 'Makefile.config', line 109)
HAVE_SNDFILE = no
# makefile (from 'Makefile.config', line 179)
STATEDIR = /usr/local/var
# makefile (from 'Makefile.config', line 83)
 
HAVE_LD_STATIC_LIBGCC = 
# makefile (from 'Makefile.config', line 139)
MATH_CFLAGS = 
# makefile (from 'Makefile.config', line 148)
PATH_SEPARATOR = :
# environment
LC_TIME = zh_CN.UTF-8
# environment
SNAP_REAL_HOME = /home/yyf
# makefile (from 'mk/build.man.mk', line 33)
MAN3 = 
# makefile (from 'mk/build.common.mk', line 64)
DEINSTALL_DATA = rm -f
# environment
CONDA_DEFAULT_ENV = base
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# makefile (from 'Makefile.config', line 135)
LOCALEDIR = /usr/local/share/agar/locale
# environment
QT_IM_MODULE = ibus
# makefile (from 'Makefile.config', line 199)
_MK_HAVE_FLOAT_H = yes
# environment
SNAP_USER_DATA = /home/yyf/snap/code/95
# makefile (from 'Makefile.config', line 180)
SUBDIR_au = 
# environment
SHLVL = 0
# makefile (from 'Makefile.config', line 20)
BINDIR = /usr/local/bin
 
# makefile (from 'Makefile.config', line 106)
HAVE_PURE_ATTRIBUTE = yes
# makefile (from 'Makefile.config', line 21)
CC = /usr/bin/clang
# makefile (from 'mk/build.proj.mk', line 30)
PREMAKEFLAGS = 
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-f21f5cbd-4dad-4a27-91af-4a52b861063e.sock
# default
MAKE_VERSION := 4.2.1
# environment
USER = yyf
# environment
SNAP_REVISION = 95
# makefile (from 'Makefile.config', line 205)
_MK_HAVE_UNISTD_H = yes
# makefile (from 'Makefile.config', line 26)
COCOA_CFLAGS = 
# makefile (from 'Makefile.config', line 150)
PKGCONFIG_LIBDIR = ${PREFIX}/lib/pkgconfig
# environment
LC_MONETARY = zh_CN.UTF-8
# makefile
.DEFAULT_GOAL := all
# makefile (from 'Makefile.config', line 203)
_MK_HAVE_SYS_STAT_H = yes
# makefile (from 'Makefile.config', line 38)
ENABLE_NLS = no
# makefile (from 'Makefile.config', line 108)
 
HAVE_SHL_LOAD = no
# environment
XDG_CURRENT_DESKTOP = Unity
# makefile (from 'mk/build.proj.mk', line 34)
PROJFILESEXTRA = 
# makefile (from 'Makefile.config', line 73)
HAVE_FORMAT_ATTRIBUTE = yes
# makefile (from 'mk/build.common.mk', line 63)
DEINSTALL_LIB = rm -f
# makefile (from 'Makefile.config', line 159)
PROG_GUI_FLAGS = 
# makefile (from 'Makefile.config', line 152)
PNG_LIBS = -L/home/yyf/anaconda3/lib -lpng16
# makefile (from 'mk/build.common.mk', line 32)
DESTDIR = 
# makefile (from 'mk/build.man.mk', line 35)
MAN5 = 
# makefile (from 'Makefile.config', line 112)
HAVE_SSE3 = yes
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile.config', line 13)
USE_LIBTOOL = No
# environment
LC_TELEPHONE = zh_CN.UTF-8
# makefile (from 'Makefile.config', line 27)
COCOA_LIBS = 
# makefile (from 'mk/build.common.mk', line 70)
DEINSTALL_INCL_DIR = rmdir -p
# makefile (from 'Makefile.config', line 164)
 
PTHREADS_LIBS = -lpthread
# makefile (from 'Makefile.config', line 182)
SUBDIR_map = 
# environment
CONDA_SHLVL = 1
# default
MAKE_COMMAND := make
# makefile (from 'Makefile.config', line 39)
EXECSUFFIX = 
# makefile (from 'Makefile.config', line 131)
LIBDIR = /usr/local/lib
# makefile (from 'Makefile.config', line 170)
SNDFILE_CFLAGS = 
# makefile (from 'Makefile.config', line 183)
SUBDIR_math = math
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile (from 'Makefile.config', line 107)
HAVE_SDL = yes
# makefile (from 'Makefile.config', line 44)
GETTEXT_CFLAGS = 
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-6e94e96f-1.67.0-main.sock
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from 'mk/build.man.mk', line 38)
MAN8 = 
# makefile (from 'Makefile.config', line 75)
HAVE_GETTEXT = no
# makefile (from 'Makefile.config', line 35)
 
DSO_LIBS = -ldl
# makefile (from 'Makefile.config', line 40)
FONTCONFIG_CFLAGS = -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
# makefile (from 'Makefile.config', line 119)
HAVE_WGL = no
# makefile
MAKEFLAGS = pqrR
# makefile (from 'mk/build.common.mk', line 58)
INSTALL_DATA_DIR = mkdir -p
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile.config', line 171)
SNDFILE_LIBS = 
# makefile (from 'Makefile.config', line 136)
MANDIR = /usr/local/man
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 10)
INCDIR = au core gui micro map net sg sk vg
# makefile (from 'Makefile.config', line 45)
GETTEXT_LIBS = 
# makefile (from 'mk/build.man.mk', line 40)
MANS = ${MAN1} ${MAN2} ${MAN3} ${MAN4} ${MAN5} ${MAN6} ${MAN7} ${MAN8} ${MAN9}
# environment
GDK_BACKEND = x11
# makefile (from 'Makefile.config', line 137)
MATH_C99_CFLAGS = 
# makefile (from 'Makefile.config', line 64)
 
HAVE_CONST_ATTRIBUTE = yes
# makefile (from 'Makefile.config', line 189)
SYSCONFDIR = /usr/local/etc
# makefile (from 'Makefile.config', line 125)
HAVE___INT64 = no
# makefile (from 'Makefile.config', line 68)
HAVE_DB5 = no
# environment
LC_PAPER = zh_CN.UTF-8
# makefile (from 'Makefile.config', line 41)
FONTCONFIG_LIBS = -lfontconfig -lfreetype
# makefile (from 'Makefile.config', line 200)
_MK_HAVE_LIMITS_H = yes
# makefile (from 'mk/build.man.mk', line 31)
MAN1 = 
# environment
LC_IDENTIFICATION = zh_CN.UTF-8
# makefile (from 'Makefile.config', line 197)
ZLIB_LIBS = 
# makefile (from 'Makefile.config', line 72)
HAVE_FONTCONFIG = yes
# environment
QT_ACCESSIBILITY = 1
# makefile (from 'Makefile', line 11)
SUBDIR = core ${SUBDIR_gui} ${SUBDIR_micro} ${SUBDIR_au} ${SUBDIR_map} ${SUBDIR_math} ${SUBDIR_net} ${SUBDIR_sk} ${SUBDIR_sg} ${SUBDIR_vg}
# makefile (from 'Makefile.config', line 163)
PTHREADS_CFLAGS = 
# makefile (from 'Makefile.config', line 22)
CC_COMPILE = -c
 
# makefile (from 'mk/build.common.mk', line 49)
INSTALL_DESTDIR = mkdir -p
# makefile (from 'Makefile.config', line 172)
SRCS_AU = 
# makefile (from 'Makefile.config', line 138)
MATH_C99_LIBS = -lm
# makefile (from 'Makefile.config', line 177)
SSE3_CFLAGS = -msse3
# default
MAKEFILES := 
# makefile (from 'Makefile.config', line 19)
AVAIL_PCMODULES = agar-core.pc agar.pc agar-math.pc agar-net.pc agar-sg.pc agar-sk.pc agar-vg.pc
# makefile (from 'Makefile.config', line 160)
PROG_PREFIX = 
# environment
SNAP_COOKIE = Bx-AkJMwqp53F8JwmcA_kCyZNudDIHbMfRP3bs0BlIaoBbuFVsOJ
# makefile (from 'Makefile.config', line 58)
HAVE_CC_MCONSOLE = no
# environment
LC_NUMERIC = zh_CN.UTF-8
# makefile (from 'Makefile.config', line 17)
ALTIVEC_CFLAGS = 
# makefile (from 'Makefile.config', line 3)
BUILD = x86_64-unknown-linux-gnu
# makefile (from 'Makefile.config', line 11)
NOMANLINKS = yes
# automatic
<F = $(notdir $<)
# makefile (from 'mk/build.common.mk', line 43)
SH = sh
 
# makefile (from 'mk/build.common.mk', line 67)
DEINSTALL_PROG_DIR = rmdir -p
# makefile (from 'mk/build.common.mk', line 68)
DEINSTALL_LIB_DIR = rmdir -p
# makefile (from 'Makefile.config', line 111)
HAVE_SSE2 = yes
# makefile (from 'mk/build.proj.mk', line 33)
PROJDIR = ProjectFiles
# environment
LC_MEASUREMENT = zh_CN.UTF-8
# makefile (from 'Makefile.config', line 48)
GLX_CFLAGS = 
# makefile (from 'Makefile.config', line 99)
HAVE_PTHREADS = yes
# makefile (from 'Makefile.config', line 60)
HAVE_CC_WARNINGS = yes
# environment
SNAP_NAME = code
# makefile (from 'Makefile.config', line 93)
HAVE_OBJC = yes
# makefile (from 'Makefile.config', line 76)
HAVE_GLEXT = yes
# makefile (from 'mk/build.man.mk', line 30)
PAGER = more
# makefile (from 'Makefile.config', line 78)
HAVE_GLX = yes
# environment
LC_ALL = C
# makefile (from 'Makefile.config', line 89)
HAVE_MATH_C99 = yes
# makefile (from 'Makefile.config', line 194)
 
XINERAMA_CFLAGS = 
# makefile (from 'Makefile.config', line 56)
HAVE_CC_CLANG = yes
# makefile (from 'Makefile.config', line 87)
HAVE_MALLOC_ATTRIBUTE = yes
# makefile (from 'Makefile.config', line 18)
AVAIL_CONFIGSCRIPTS = agar-core-config agar-config agar-math-config agar-net-config agar-sg-config agar-sk-config agar-vg-config
# environment
CONDA_PYTHON_EXE = /home/yyf/anaconda3/bin/python
# makefile (from 'Makefile', line 6)
PROJCONFIGDIR = include/agar/config
# makefile (from 'Makefile.config', line 128)
INCLDIR = /usr/local/include/agar
# makefile (from 'Makefile.config', line 134)
LIB_SHARED = Yes
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# makefile (from 'Makefile.config', line 49)
GLX_LIBS = -L/usr/local/lib -lGL -lX11
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile.config', line 133)
LIBTOOLOPTS_SHARED = 
# makefile (from 'Makefile.config', line 74)
HAVE_FREETYPE = yes
# makefile (from 'Makefile.config', line 195)
XINERAMA_LIBS = -lXinerama
# default
SUFFIXES := 
# makefile (from 'mk/build.common.mk', line 46)
LN = ln
# makefile (from 'Makefile.config', line 66)
HAVE_CYGWIN = no
# environment
 
SNAP_REEXEC = 
# environment
_CE_M = 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# makefile (from 'Makefile.config', line 79)
HAVE_ICONV = no
# environment
WINDOWPATH = 2
# makefile (from 'mk/build.common.mk', line 56)
INSTALL_PROG_DIR = mkdir -p
# makefile (from 'Makefile.config', line 121)
HAVE_XF86MISC = no
# makefile (from 'Makefile.config', line 50)
HAVE_ALIGNED_ATTRIBUTE = yes
# makefile (from 'Makefile.config', line 168)
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT  -I/usr/include
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'mk/build.common.mk', line 53)
INSTALL_DATA = install -c -m 644
# makefile (from 'Makefile.proj', line 15)
PROJFILES = windows:vs2005::--datadir=NONE windows-debug:vs2005::--datadir=NONE,--enable-debug windows-x64:vs2005::--datadir=NONE,--with-memory-model=L windows-x64-debug:vs2005::--datadir=NONE,--with-memory-model=L,--enable-debug
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from 'Makefile.config', line 181)
SUBDIR_gui = gui
# makefile (from 'mk/build.common.mk', line 29)
BSDBUILD_VERSION = 3.2
# makefile (from 'Makefile.config', line 165)
 
PTHREADS_XOPEN_CFLAGS = -U_XOPEN_SOURCE -D_XOPEN_SOURCE=600
# makefile (from 'Makefile.config', line 9)
HAVE_MANDOC = yes
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile.config', line 85)
HAVE_LIBPNG14 = yes
# makefile (from 'Makefile.config', line 153)
PORTAUDIO_CFLAGS = 
# environment
LC_ADDRESS = zh_CN.UTF-8
# makefile (from 'Makefile.config', line 120)
HAVE_X11 = yes
# makefile (from 'Makefile.config', line 147)
PACKAGE = Agar
# environment
LANG = C
# makefile (from 'mk/build.man.mk', line 37)
MAN7 = 
# makefile (from 'Makefile.config', line 12)
CTAGS = 
# makefile (from 'Makefile.config', line 59)
HAVE_CC_MWINDOWS = no
# makefile (from 'Makefile.config', line 115)
HAVE_UNUSED_VARIABLE_ATTRIBUTE = yes
# environment
VSCODE_PID = 64681
# makefile (from 'mk/build.proj.mk', line 27)
ZIPFLAGS = -r
 
# makefile (from 'Makefile.config', line 166)
PTHREADS_XOPEN_LIBS = -lpthread
# environment
_CE_CONDA = 
# makefile (from 'Makefile.config', line 37)
ENABLE_MICRO_LIBS = 
# makefile (from 'Makefile.config', line 4)
HOST = x86_64-unknown-linux-gnu
# makefile (from 'mk/build.common.mk', line 42)
SUDO = 
# makefile (from 'Makefile.config', line 123)
HAVE_XKB = yes
# makefile (from 'Makefile.config', line 149)
PKGCONFIG = /usr/bin/pkg-config
# variable set hash-table stats:
# Load=396/1024=39%, Rehash=0, Collisions=182/552=33%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2051, inode 156896222): 52 files, no impossibilities.
 

# 52 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
mk/build.proj.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

clean-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 66):
 
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ clean); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

lint-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.man.mk', line 372):
	@if [ "${HAVE_MANDOC}" != "yes" ]; then \
		echo "Cannot find mandoc (re-run ./configure?)"; \
		exit 1; \
	fi
	@if [ "${MAN1}" != "" ]; then for F in ${MAN1}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN2}" != "" ]; then for F in ${MAN2}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN3}" != "" ]; then for F in ${MAN3}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN4}" != "" ]; then for F in ${MAN4}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN5}" != "" ]; then for F in ${MAN5}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN6}" != "" ]; then for F in ${MAN6}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN7}" != "" ]; then for F in ${MAN7}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN8}" != "" ]; then for F in ${MAN8}; do ${MANDOC} -Tlint $$F; done; fi
	@if [ "${MAN9}" != "" ]; then for F in ${MAN9}; do ${MANDOC} -Tlint $$F; done; fi

clean-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 82):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ clean); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

 
includes:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 31):
	@if [ ! -e "include" ]; then mkdir include; fi
	@echo "perl mk/gen-includes.pl include/agar"
	@if [ "${SRCDIR}" != "${BLDDIR}" ]; then \
		(cd "${SRCDIR}" && \
		 perl mk/gen-includes.pl "${BLDDIR}/include/agar"); \
	else \
		perl mk/gen-includes.pl include/agar; \
	fi

deinstall-includes:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 71):
	@if [ -e "${INCLDIR}" -a -e "${INCLDIR}/agar" ]; then \
		echo "rm -rf ${INCLDIR}/agar"; \
		${SUDO} rm -rf ${INCLDIR}/agar; \
	fi

all: all-subdir all-subdir
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/27=0%

proj-package:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
 
#  recipe to execute (from 'mk/build.proj.mk', line 47):
	@if [ "${PROJECT}" = "" ]; then \
	    echo "cat Makefile | ${MKPROJFILES} > ${PREMAKEOUT}"; \
	    cat Makefile | \
	        env PROJTARGET="${PROJTARGET}" PROJOS="${PROJOS}" \
		PROJFLAVOR="" PROJINCLUDES="${TOP}/configure.lua" \
	        ${MKPROJFILES} > ${PREMAKEOUT}; \
	fi

.PHONY: clean cleandir install deinstall depend regress includes cleandir-config release install-includes deinstall-includes install-config deinstall-config pre-package post-package function-list all-subdir clean-subdir cleandir-subdir install-subdir deinstall-subdir configure-subdir depend-subdir regress-subdir all-subdir-ifexists clean-subdir-ifexists cleandir-subdir-ifexists install-subdir-ifexists deinstall-subdir-ifexists configure-subdir-ifexists depend-subdir-ifexists regress-subdir-ifexists proj-package-subdir proj-clean-subdir install deinstall clean cleandir regress depend lint install-man deinstall-man clean-man man manlinks all-manlinks lint-man proj configure-proj
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

cleandir-config:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 41):
	rm -fR include config 
	rm -f Makefile.config config.log configure.lua .projfiles.out .projfiles2.out
	touch Makefile.config
	-(cd tools && ${MAKE} cleandir)
	find . -name premake.lua -exec rm -f {} \;

cleandir-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 237):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ cleandir); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

 
manlinks: Makefile
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.man.mk', line 349):
	echo > .manlinks.mk
	@if [ "${MANS}" != "       " ]; then \
		for F in ${MANS}; do \
			echo "cat $$F |manlinks.pl $$F >>.manlinks.mk"; \
			cat $$F |perl ${TOP}/mk/manlinks.pl $$F >>.manlinks.mk; \
		done; \
	fi

cleandir-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 253):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ cleandir); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

install-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.man.mk', line 62):
	@if [ "${NOMAN}" != "yes" ]; then \
		if [ "${MANS}" != "       " ]; then \
			if [ "${DESTDIR}" != "" ]; then \
				echo "# Installing under DESTDIR=${DESTDIR}:"; \
				if [ ! -e "${DESTDIR}" ]; then \
					echo "${INSTALL_DESTDIR} ${DESTDIR}"; \
					${SUDO} ${INSTALL_DESTDIR} ${DESTDIR}; \
				fi; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man1" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man1"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man1; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man2" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man2"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man2; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man3" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man3"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man3; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man4" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man4"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man4; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man5" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man5"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man5; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man6" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man6"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man6; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man7" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man7"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man7; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man8" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man8"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man8; \
			fi; \
			if [ ! -d "${DESTDIR}${MANDIR}/man9" ]; then \
				echo "${INSTALL_MAN_DIR} ${MANDIR}/man9"; \
				${SUDO} ${INSTALL_MAN_DIR} ${DESTDIR}${MANDIR}/man9; \
			fi; \
		fi; \
		if [ "${MAN1}" != "" ]; then \
			for F in ${MAN1}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man1"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man1; \
			done; \
		fi; \
		if [ "${MAN2}" != "" ]; then \
			for F in ${MAN2}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man2"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man2; \
			done; \
		fi; \
		if [ "${MAN3}" != "" ]; then \
			for F in ${MAN3}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man3"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man3; \
			done; \
		fi; \
		if [ "${MAN4}" != "" ]; then \
			for F in ${MAN4}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man4"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man4; \
			done; \
		fi; \
		if [ "${MAN5}" != "" ]; then \
			for F in ${MAN5}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man5"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man5; \
			done; \
		fi; \
		if [ "${MAN6}" != "" ]; then \
			for F in ${MAN6}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man6"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man6; \
			done; \
		fi; \
		if [ "${MAN7}" != "" ]; then \
			for F in ${MAN7}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man7"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man7; \
			done; \
		fi; \
		if [ "${MAN8}" != "" ]; then \
			for F in ${MAN8}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man8"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man8; \
			done; \
		fi; \
		if [ "${MAN9}" != "" ]; then \
			for F in ${MAN9}; do \
				echo "${INSTALL_DATA} $$F ${MANDIR}/man9"; \
				${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${MANDIR}/man9; \
			done; \
		fi; \
		if [ "${NOMANLINKS}" != "yes" -a "${MANLINKS}" != "" ]; then \
			${ECHO_N} "# Installing manlinks ( "; \
			(cd ${DESTDIR}${MANDIR} && \
			 for L in ${MANLINKS}; do \
				MPG=`echo $$L | sed 's/:.*//'`; \
				MLNK=`echo $$L | sed 's/.*://'`; \
				MS=`echo $$L | sed 's/.*\.//'`; \
				${ECHO_N} "$$MLNK "; \
				${SUDO} ${LN} -fs $$MPG man$$MS/$$MLNK; \
			 done); \
			 echo " )."; \
		fi; \
	fi

# Not a target:
.SUFFIXES:
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2020-05-17 21:34:22
#  File has been updated.
#  Successfully updated.

regress-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 271):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ regress); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

regress-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 287):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ regress); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.man.mk', line 340):
	@if [ "${MAN}" != "" ]; then \
		echo "${MANDOC} -Tascii ${MAN} | ${PAGER}"; \
		${MANDOC} -Tascii ${MAN} | ${PAGER}; \
	else \
		echo "Usage: ${MAKE} man MAN=(manpage)"; \
		exit 1; \
	fi
 

function-list:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 137):
	find . -name \*.3 -exec grep ^\.Fn {} \; |awk '{print $$2}' |uniq

install-config:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 77):
	@for F in ${AVAIL_CONFIGSCRIPTS}; do \
		echo "${INSTALL_PROG} $$F ${BINDIR}"; \
		${SUDO} ${INSTALL_PROG} $$F ${DESTDIR}${BINDIR}; \
	done
	@if [ "${PKGCONFIG}" != "" ]; then \
		if [ ! -e "${DESTDIR}${PKGCONFIG_LIBDIR}" ]; then \
			echo "${INSTALL_DATA_DIR} ${PKGCONFIG_LIBDIR}"; \
			${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${PKGCONFIG_LIBDIR}; \
		fi; \
		for F in ${AVAIL_PCMODULES}; do \
			echo "${INSTALL_DATA} $$F ${PKGCONFIG_LIBDIR}"; \
			${SUDO} ${INSTALL_DATA} $$F ${DESTDIR}${PKGCONFIG_LIBDIR}; \
		done; \
	fi
	@if [ ! -e "${DESTDIR}${PREFIX}/share/aclocal" ]; then \
		echo "${INSTALL_DATA_DIR} ${PREFIX}/share/aclocal"; \
		${SUDO} ${INSTALL_DATA_DIR} ${DESTDIR}${PREFIX}/share/aclocal; \
	fi
	@echo "${INSTALL_DATA} ${SRCDIR}/mk/agar.m4 ${PREFIX}/share/aclocal"
	@${SUDO} ${INSTALL_DATA} ${SRCDIR}/mk/agar.m4 ${DESTDIR}${PREFIX}/share/aclocal

post-package:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 132):
	@if [ "${PKG_OS}" = "windows" ]; then \
		rm -f install-sdk.exe CHANGELOG.txt INSTALL.txt LICENSE.txt README.txt Logo.png VisualC.html; \
	fi

configure: configure-proj
#  Implicit rule search has not been done.
#  Modification time never checked.
 
#  File has not been updated.

install-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 100):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ install); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

install-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 116):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ install); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

all-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := all-subdir
# automatic
# % := 
# automatic
 
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=14/35=40%
#  recipe to execute (from 'mk/build.subdir.mk', line 32):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

proj-package-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 305):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ proj-package); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

install-includes:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 53):
	@echo ${INSTALL_INCL_DIR} ${INCLDIR}
	@${SUDO} ${INSTALL_INCL_DIR} ${DESTDIR}${INCLDIR}
	@echo ${INSTALL_INCL_DIR} ${INCLDIR}/agar
	@${SUDO} ${INSTALL_INCL_DIR} ${DESTDIR}${INCLDIR}/agar
	@(cd include/agar && for DIR in ${INCDIR} config math; do \
	    echo "${SH} mk/install-includes.sh $$DIR ${INCLDIR}/agar"; \
	    ${SUDO} env \
	      DESTDIR="${DESTDIR}" \
	      INSTALL_INCL_DIR="${INSTALL_INCL_DIR}" \
	      INSTALL_INCL="${INSTALL_INCL}" \
	      ${SH} ${SRCDIR}/mk/install-includes.sh $$DIR ${INCLDIR}/agar; \
 
	done)
	@for INC in ${INCDIR}; do \
		echo "${INSTALL_INCL} include/agar/$$INC/$${INC}_pub.h ${INCLDIR}/agar/$${INC}.h"; \
		${SUDO} ${INSTALL_INCL} include/agar/$$INC/$${INC}_pub.h ${DESTDIR}${INCLDIR}/agar/$${INC}.h; \
	done

all-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 48):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

depend: depend-subdir depend-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

proj:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.proj.mk', line 60):
	@if [ ! -d "${PROJDIR}" ]; then \
		echo "mkdir -p ${PROJDIR}"; \
		mkdir -p ${PROJDIR}; \
	fi
	@for TGT in ${PROJFILES}; do \
		_tgtos=`echo $$TGT |awk -F: '{print $$1}' `; \
		_tgtproj=`echo $$TGT |awk -F: '{print $$2}' `; \
		_tgtflav=`echo $$TGT |awk -F: '{print $$3}' `; \
		_tgtopts=`echo $$TGT |awk -F: '{print $$4}'|sed 's/,/ /g'`; \
		echo "*"; \
		echo "* Target: $$_tgtos ($$_tgtproj)"; \
		echo "* Target flavor: $$_tgtflav"; \
		echo "* Target options: $$_tgtopts"; \
		echo "*"; \
		\
		echo "mkconfigure --emul-env=$$_tgtproj --emul-os=$$_tgtos \
		    --output-lua=${TOP}/configure.lua > configure.tmp"; \
		cat configure.in | \
		    mkconfigure --emul-env=$$_tgtproj --emul-os=$$_tgtos \
		    --output-lua=${TOP}/configure.lua > configure.tmp; \
		if [ $$? != 0 ]; then \
			echo "mkconfigure failed"; \
			rm -fR configure.tmp ${TOP}/configure.lua; \
			exit 1; \
		fi; \
		echo "./configure.tmp $$_tgtopts --with-proj-generation --emul-os=$$_tgtos"; \
		${SH} ./configure.tmp $$_tgtopts --with-proj-generation --emul-os=$$_tgtos; \
		if [ $$? != 0 ]; then \
			echo "configure failed"; \
			echo > Makefile.config; \
			exit 1; \
		fi; \
		echo "${MAKE} proj-package-subdir"; \
		env PROJTARGET="$$_tgtproj" PROJOS="$$_tgtos" \
		    ${MAKE} proj-package-subdir; \
		\
		if [ "${PROJNOCLEAN}" = "no" ]; then \
			echo "rm -f configure.tmp config.log config.status"; \
			rm -f configure.tmp config.log config.status; \
		fi; \
		\
	        echo "cat Makefile | ${MKPROJFILES} > ${PREMAKEOUT}"; \
	        cat Makefile | \
		    env PROJFLAVOR="$$_tgtflav" \
		    PROJOS="$$_tgtos" \
		    PROJINCLUDES="${TOP}/configure.lua" \
		    ${MKPROJFILES} > ${PREMAKEOUT}; \
	        perl ${TOP}/mk/cmpfiles.pl; \
		_premakeos="$$_tgtos"; \
		case "$$_tgtos" in \
		windows-*) \
		    _premakeos="windows"; \
		    ;; \
		esac; \
	        echo "${PREMAKE} ${PREMAKEFLAGS} --file ${PREMAKEOUT} \
		    --os $$_premakeos --target $$_tgtproj"; \
	        ${PREMAKE} ${PREMAKEFLAGS} --file ${PREMAKEOUT} \
		    --os $$_premakeos --target $$_tgtproj; \
		if [ $$? != 0 ]; then \
			echo "premake failed"; \
			exit 1; \
		fi; \
	        perl ${TOP}/mk/cmpfiles.pl added > .projfiles.out; \
		echo "* Generated files: "; \
		cat .projfiles.out; \
		cp -f .projfiles.out ${PROJFILELIST}; \
	        rm .cmpfiles.out; \
		if [ "${PROJFILESEXTRA}" != "" ]; then \
	            for EXTRA in ${PROJFILESEXTRA}; do \
		        echo "+ $$EXTRA: "; \
		        echo "$$EXTRA" >> ${PROJFILELIST}; \
		    done; \
		fi; \
		if [ -e "${PROJCONFIGDIR}" ]; then \
			echo "+ ${PROJCONFIGDIR}"; \
	        	echo "${PROJCONFIGDIR}" >> ${PROJFILELIST}; \
		fi; \
		echo "rm -f ${PROJDIR}/$$_tgtproj-$$_tgtos$$_tgtflav.zip"; \
		rm -f "${PROJDIR}/$$_tgtproj-$$_tgtos$$_tgtflav.zip"; \
		echo "* Creating $$_tgtproj-$$_tgtos$$_tgtflav.zip";\
		cat ${PROJFILELIST} | ${ZIP} ${ZIPFLAGS} \
		    ${PROJDIR}/$$_tgtproj-$$_tgtos$$_tgtflav.zip -@;\
		if [ "${PROJNOCLEAN}" = "no" ]; then \
			echo "cat .projfiles.out | perl ${TOP}/mk/cleanfiles.pl"; \
			cat .projfiles.out | perl ${TOP}/mk/cleanfiles.pl; \
			echo "rm -fR ${PROJCONFIGDIR} ${PROJFILELIST}"; \
			rm -fR ${PROJCONFIGDIR} ${PROJFILELIST}; \
			echo "rm -f .projfiles.out ${TOP}/configure.lua"; \
			rm -f .projfiles.out ${TOP}/configure.lua; \
		fi; \
	done
	@echo "* Done"

release:
#  Phony target (prerequisite of .PHONY).
 
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 48):
	-${MAKE} cleandir
	-${MAKE} all-manlinks
	sh mk/dist.sh stable

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

deinstall: deinstall-subdir deinstall-includes deinstall-config deinstall-man deinstall-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
mk/build.common.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

# Not a target:
Makefile.config:
#  Implicit rule search has been done.
#  Last modified 2022-05-10 11:01:57.548685045
#  File has been updated.
#  Successfully updated.

pre-package:
#  Phony target (prerequisite of .PHONY).
 
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 113):
	@if [ "${PKG_OS}" = "windows" ]; then \
		cp -f ${TOP}/mk/install-sdk/install-sdk.exe .; \
		cat CHANGELOG.md    |sed "s/$$/`echo -e \\\r`/" >CHANGELOG.txt; \
		cat INSTALL.md      |sed "s/$$/`echo -e \\\r`/" >INSTALL.txt; \
		cat gui/license.txt |sed "s/$$/`echo -e \\\r`/" >LICENSE.txt; \
		cat README.md       |sed "s/$$/`echo -e \\\r`/" >README.txt; \
		cp -f mk/agar-logo.png Logo.png; \
		echo '<meta http-equiv="refresh" content="1;url=http://libagar.org/docs/compile-msvc.html" />' > VisualC.html; \
		echo "install-sdk.exe" >> ${PROJFILELIST}; \
		echo "CHANGELOG.txt"   >> ${PROJFILELIST}; \
		echo "INSTALL.txt"     >> ${PROJFILELIST}; \
		echo "LICENSE.txt"     >> ${PROJFILELIST}; \
		echo "README.txt"      >> ${PROJFILELIST}; \
		echo "Logo.png"        >> ${PROJFILELIST}; \
		echo "VisualC.html"    >> ${PROJFILELIST}; \
		rm -f Makefile.config agar-*-config *.pc premake.lua */premake.lua; \
	fi

clean: clean-subdir clean-man clean-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

configure-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 168):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ configure); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

configure-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 184):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ configure); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

all-manlinks:
 
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.man.mk', line 358):
	@if [ "${SRC}" != "" ]; then \
		(cd ${SRC} && \
		 for DIR in `find . -name .manlinks.mk |sed 's/\/\.manlinks\.mk//'`; do \
			echo "(cd $$DIR && ${MAKE} manlinks)"; \
			(cd $$DIR && ${MAKE} manlinks); \
		done); \
	else \
		for DIR in `find . -name .manlinks.mk |sed 's/\/\.manlinks\.mk//'`; do \
			echo "(cd $$DIR && ${MAKE} manlinks)"; \
			(cd $$DIR && ${MAKE} manlinks); \
		done; \
	fi

# Not a target:
mk/build.man.mk:
#  Implicit rule search has been done.
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

# Not a target:
Makefile.proj:
#  Implicit rule search has been done.
#  Last modified 2020-05-05 00:20:40
#  File has been updated.
#  Successfully updated.

cleandir: cleandir-config cleandir-subdir clean-man clean-subdir cleandir-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

proj-clean-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
 
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 321):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ proj-clean); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

configure-proj:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.proj.mk', line 154):
	@if [ "${PROG}" = "" -a "${LIB}" = "" ]; then \
		if [ -e "configure.in" ]; then \
			echo "cat configure.in | mkconfigure > configure"; \
			cat configure.in | mkconfigure > configure; \
			if [ ! -e configure ]; then \
				echo "mkconfigure failed."; \
				echo "Note: mkconfigure is part of BSDBuild"; \
				echo "(http://bsdbuild.hypertriton.com/)"; \
				exit 1; \
			fi; \
			if [ ! -x configure ]; then \
				echo "chmod 755 configure"; \
				chmod 755 configure; \
			fi; \
		fi; \
	fi

deinstall-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.man.mk', line 181):
	@if [ "${NOMAN}" != "yes" ]; then \
		if [ "${MAN1}" != "" ]; then \
			for F in ${MAN1}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man1/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man1/$$FL; \
			done; \
		fi; \
		if [ "${MAN2}" != "" ]; then \
			for F in ${MAN2}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man2/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man2/$$FL; \
			done; \
		fi; \
		if [ "${MAN3}" != "" ]; then \
			for F in ${MAN3}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man3/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man3/$$FL; \
			done; \
		fi; \
		if [ "${MAN4}" != "" ]; then \
			for F in ${MAN4}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man4/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man4/$$FL; \
			done; \
		fi; \
		if [ "${MAN5}" != "" ]; then \
			for F in ${MAN5}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man5/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man5/$$FL; \
			done; \
		fi; \
		if [ "${MAN6}" != "" ]; then \
			for F in ${MAN6}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man6/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man6/$$FL; \
			done; \
		fi; \
		if [ "${MAN7}" != "" ]; then \
			for F in ${MAN7}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man7/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man7/$$FL; \
			done; \
		fi; \
		if [ "${MAN8}" != "" ]; then \
			for F in ${MAN8}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man8/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man8/$$FL; \
			done; \
		fi; \
		if [ "${MAN9}" != "" ]; then \
			for F in ${MAN9}; do \
				FL=`echo $$F | sed 's:.*/::'`; \
				echo "${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man9/$$FL"; \
				${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${MANDIR}/man9/$$FL; \
			done; \
		fi; \
		if [ "${NOMANLINKS}" != "yes" -a "${MANLINKS}" != "" ]; then \
			if [ "${MAN1}" != "" -a -e "${DESTDIR}${MANDIR}/man1" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man1 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN2}" != "" -a -e "${DESTDIR}${MANDIR}/man2" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man2 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN3}" != "" -a -e "${DESTDIR}${MANDIR}/man3" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man3 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN4}" != "" -a -e "${DESTDIR}${MANDIR}/man4" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man4 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN5}" != "" -a -e "${DESTDIR}${MANDIR}/man5" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man5 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN6}" != "" -a -e "${DESTDIR}${MANDIR}/man6" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man6 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
 
			fi; \
			if [ "${MAN7}" != "" -a -e "${DESTDIR}${MANDIR}/man7" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man7 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN8}" != "" -a -e "${DESTDIR}${MANDIR}/man8" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man8 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
			if [ "${MAN9}" != "" -a -e "${DESTDIR}${MANDIR}/man9" ]; then \
				${ECHO_N} "# Deinstalling manlinks ( "; \
				(cd ${DESTDIR}${MANDIR}/man9 && \
				 for L in ${MANLINKS}; do \
					MLNK=`echo $$L | sed 's/.*://'`; \
					${ECHO_N} "$$MLNK "; \
					${SUDO} ${DEINSTALL_DATA} $$MLNK; \
				 done); \
				 echo " )."; \
			fi; \
		fi; \
	fi
	

lint: lint-man
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
mk/build.subdir.mk:
#  Implicit rule search has been done.
 
#  Last modified 2020-05-15 15:19:04
#  File has been updated.
#  Successfully updated.

clean-man:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.man.mk', line 56):
	@if [ "${CLEANFILES}" != "" ]; then \
		echo "rm -f ${CLEANFILES}"; \
		rm -f ${CLEANFILES}; \
	fi

depend-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 202):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ depend); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

depend-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 218):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ depend); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

regress: regress-subdir regress-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

 
deinstall-config:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 99):
	@for F in ${AVAIL_CONFIGSCRIPTS}; do \
		echo "${DEINSTALL_PROG} ${BINDIR}/$$F"; \
		${SUDO} ${DEINSTALL_PROG} ${DESTDIR}${BINDIR}/$$F; \
	done
	@if [ "${PKGCONFIG}" != "" ]; then \
		for F in ${AVAIL_PCMODULES}; do \
			echo "${DEINSTALL_DATA} ${PKGCONFIG_LIBDIR}/$$F"; \
			${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${PKGCONFIG_LIBDIR}/$$F; \
		done; \
	fi
	@echo "${DEINSTALL_DATA} ${PREFIX}/share/aclocal/agar.m4"
	@${SUDO} ${DEINSTALL_DATA} ${DESTDIR}${PREFIX}/share/aclocal/agar.m4

deinstall-subdir:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 134):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    echo "==> ${REL}$$F"; \
		    (cd $$F && ${MAKE} REL=${REL}$$F/ deinstall); \
		    if [ $$? != 0 ]; then \
		    	exit 1; \
		    fi; \
		done; \
	fi)

deinstall-subdir-ifexists:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'mk/build.subdir.mk', line 150):
	@(if [ "${SUBDIR}" = "" ]; then \
	    SUBDIR="NONE"; \
	else \
	    SUBDIR="${SUBDIR}"; \
	fi; \
	if [ "$$SUBDIR" != "" -a "$$SUBDIR" != "NONE" ]; then \
		for F in $$SUBDIR; do \
		    if [ -e "$$F" ]; then \
		        echo "==> ${REL}$$F"; \
		        (cd $$F && ${MAKE} REL=${REL}$$F/ deinstall); \
		        if [ $$? != 0 ]; then \
		    	    exit 1; \
		        fi; \
		    fi; \
		done; \
	fi)

install: install-subdir install-includes install-config install-man install-subdir
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 

# files hash-table stats:
# Load=57/1024=6%, Rehash=0, Collisions=6/191=3%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 107 / storage = 1265 B / avg = 11 B
# current buf: size = 8162 B / used = 1265 B / count = 107 / avg = 11 B

# strcache performance: lookups = 289 / hit rate = 62%
# hash-table stats:
 
# Load=107/8192=1%, Rehash=0, Collisions=1/289=0%
# Finished Make data base on Tue May 10 13:43:27 2022

 
